{"version":3,"sources":["Conditional/Resonance.tsx","ReactHooks/useCharacterReducer.tsx","Components/Character/CharacterDropdownButton.tsx","Components/CustomNumberInput.tsx","Components/FieldDisplay.tsx","Components/BootstrapTooltip.tsx","Components/DocumentDisplay.tsx","Components/ExpandButton.tsx","Character/CharacterUtil.tsx","Components/Character/ThumbSide.tsx","Components/Character/LocationName.tsx","Components/StatDisplay.tsx","ReactHooks/useWeapon.tsx","Conditional/ConditionalSelector.tsx","Components/ConditionalDisplay.tsx","Artifact/RollProbability.ts","Artifact/PercentBadge.tsx","Components/TextButton.tsx","Character/StatInput.tsx","Components/Weapon/WeaponSelectionModal.tsx","Weapon/WeaponCard.tsx","Artifact/ArtifactCard.tsx","ReactHooks/useArtifact.tsx","Artifact/Component/SetEffectDisplay.tsx","Character/CharacterDisplay/StatDisplayComponent.tsx","Components/EnemyEditor.tsx","Components/HitModeEditor.tsx","Weapon/WeaponStatsCard.tsx","Weapon/WeaponDisplayCard.tsx","Components/FormulaCalcCard.tsx","Character/CharacterDisplay/CharacterArtifactPane.tsx","Character/CharacterDisplay/CharacterOverviewPane.tsx","Character/CharacterDisplay/CharacterTalentPane.tsx","Character/CharacterDisplay/CharacterTeamBuffsPane.tsx","Character/CharacterDisplayCard.tsx"],"names":["tr","strKey","ns","key18","resonanceSheets","header","title","action","StatIcon","anemo","geo","pyro","hydro","cryo","electro","description","canShow","stats","Set","teamStats","map","t","characterEle","filter","e","size","conditionals","key","partyBuff","maxStack","Object","fromEntries","allElements","ele","length","atk_","fields","text","value","unit","incHeal_","name","critRate_","staminaDec_","moveSPD_","skillCDRed_","shield_","dmg_","geo_enemyRes_","sgt","useCharacterReducer","characterKey","database","useContext","DatabaseContext","useCallback","type","setWeaponLocation","id","character","_getChar","statKey","bonusStats","overrideStatKeys","includes","characterBaseStats","updateChar","team","index","newCharKey","charKey","oldCharKey","oldChar","newChar","forEach","tChar","c","tind","_","i","CharacterDropdownButton","onChange","unSelectText","unSelectIcon","inventory","noUnselect","props","useTranslation","characterSheets","usePromise","CharacterSheet","getAll","characterSheet","get","characterKeys","_getCharKeys","ck","sort","color","startIcon","thumbImg","src","thumbImgSide","onClick","selected","disabled","variant","noWrap","CharacterMenuItemArray","selectedCharacterKey","StyledInputBase","styled","InputBase","theme","backgroundColor","palette","primary","main","transition","dark","Wrapper","Button","padding","overflow","width","height","CustomNumberInputButtonGroupWrapper","children","disableRipple","disableFocusRipple","disableTouchRipple","CustomNumberInput","float","useState","number","setNumber","focused","setFocus","parseFunc","useMemo","parseFloat","parseInt","onBlur","onFocus","useEffect","onInputChange","target","onKeyDOwn","aria-label","onKeyDown","FieldDisplay","field","buildContext","newBuild","equippedBuild","compareBuild","build","fixedVal","fixed","fieldVal","Character","getTalentFieldValue","formula","retVal","fieldEquippedVal","toFixed","diff","fieldText","fieldVariant","formulaTextOverlay","fieldFormulaText","placement","component","sx","cursor","ml","icon","faQuestionCircle","display","justifyContent","FieldDisplayList","List","borderRadius","shape","margin","contentDark","contentDarker","BootstrapTooltip","className","arrow","classes","popper","tooltipClasses","common","black","tooltip","DocumentDisplay","sections","skipConditionalEquipmentCheck","characterDispatch","onCVChange","v","conditionalValues","sectionsDisplay","section","talentText","evalIfFunc","canShowConditional","conditional","Conditional","flexDirection","gap","hideDesc","s","ExpandButton","expand","other","transform","marginLeft","transitions","create","duration","shortest","getFormulaTargetsDisplayHeading","sheets","startsWith","subkey","split","talent","getTalentOfKey","img","sheet","weaponSheets","weapon","refineIndex","imgAwaken","setKey","num","artifactSheets","defIconSrc","initialCharacter","level","ascension","hitMode","reactionMode","equippedArtifacts","objectFromKeyMap","allSlotKeys","equippedWeapon","buildSettings","initialBuildSettings","auto","skill","burst","infusionAura","constellation","ThumbSide","lineHeight","verticalAlign","marginTop","spacing","marginRight","marginBottom","LocationName","location","nameWIthIcon","DisplayStatDiff","label","val","oldVal","hasBonus","undefined","oldText","diffText","valueText","StatDisplay","Array","isArray","Formula","characterHP","characterDEF","characterATK","weaponATK","Stat","getStatUnit","fixedUnit","getStatName","labelVariant","hasBonusStats","displayVal","useWeapon","weaponID","_getWeapon","setWeapon","followWeapon","ConditionalSelector","conditionalValue","setConditional","conditionalNum","conditionalStateKey","state","states","values","badge","SqBadge","DropdownButton","fullWidth","MenuItem","Divider","entries","flatMap","stateKey","condial","keys","stack","Typography","CheckBox","CheckBoxOutlineBlank","ConditionalDisplay","hideHeader","resolve","conditionalStats","conditionalFields","displayFields","statsToFields","condV","layeredAssignment","deletePropPath","objClearEmpties","CardDark","CardHeader","avatar","titleTypographyProps","CardContent","Box","mb","m","allWeights","fWeight","hp","atk","def","hp_","def_","eleMas","enerRech_","critDMG_","pFillerSeq","populatePFillerSeq","prefix","prob","sumProb","current","3","4","6","cnr","fill","n","result","r","push","pNExtra","last","next","x","array","accu","reduce","a","b","probability","artifact","_target","rarity","NaN","substats","required","numFillerSlots","mainStatKey","maxLevel","ArtifactMainStatsData","delete","has","numUpgradeRolls","Artifact","rollsRemaining","Math","max","ceil","maxSubstatValues","minTotalUpgrades","targetEntries","filler","minUpgrade","reverse","additionalUpgradeRolls","targetIndex","M","rolls","extra","pExtra","_remaining","remaining","pRolls","pow","mainStat","mainStatRatio","pFillerRolls","numUnusedSubstats","pSuffixFillerSeq","ratio","requiredCount","total","crawlObject","obj","path","currentCount","sum","calculatePFillerRolls","PercentBadge","valid","clamp","floor","badgeColor","DisabledButton","secondary","TextButton","FlexButtonGroup","ButtonGroup","StatInput","placeholder","defaultValue","onValueChange","percent","onReset","restProps","whiteSpace","flexBasis","flexGrow","px","inputProps","textAlign","endAdornment","WeaponSelectionModal","show","onHide","onSelect","propWeaponFilter","weaponFilter","WeaponSheet","setWeaponfilter","weaponIdList","allWeaponKeys","wKey","weaponType","open","onClose","py","container","item","weaponKey","weaponSheet","lg","md","Assets","weaponTypes","stars","colored","large","WeaponCard","weaponId","onEdit","onDelete","canEquip","cs","weaponTypeKey","actionWrapperFunc","equipOnChar","refinement","lock","weaponMainVal","getMainStatValue","weaponSubKey","getSubStatKey","weaponSubVal","getSubStatValue","statMap","passiveName","fallback","minHeight","condition","wrapper","fontSize","updateWeapon","flexWrap","pl","ascensionMaxLevel","maxWidth","alignContent","mt","statVal","xs","flexShrink","mr","faEdit","faTrashAlt","allSubstatFilter","allSubstats","ArtifactCard","artifactId","artifactObj","mainStatAssumptionLevel","effFilter","probabilityFilter","databaseArtifact","artifactID","_getArt","setArtifact","followArt","useArtifact","ArtifactSheet","editable","localDatabase","art","slotKey","exclude","mainStatLevel","min","levelVariant","mainStatVal","valueStringWithUnit","mainStatValue","getArtifactEfficiency","currentEfficiency","maxEfficiency","artifactValid","slotName","getSlotName","slotDesc","getSlotDesc","slotDescTooltip","faInfoCircle","setEffects","setDescTooltip","setNumKey","setNum","setEffectDesc","Skeleton","CardLight","pt","pb","pr","alignItems","Chip","IconButton","updateArt","Lock","LockOpen","Grid","alignSelf","CardMedia","image","slotIcons","stat","numRolls","rollColor","efficiency","effOpacity","statName","opacity","my","CardActions","setArtLocation","Tooltip","faBan","faChartLine","SetEffectDisplay","setEffectText","setStats","setNumStats","setStatsFields","document","setEffectDocument","StatDisplayComponent","statsDisplayKeys","columns","sm","sectionKey","sectionValues","JSON","stringify","EnemyExpandCard","expanded","setexpanded","toggle","getStatValueWithBonus","allElementsWithPhy","element","EnemyResText","aria-expanded","p","in","timeout","unmountOnExit","EnemyEditor","immune","resKey","content","uncoloredEleIcons","bsProps","charBaseStats","href","rel","bgcolor","contentLight","getStatNameRaw","enemyLevel","eleKey","immunityStatKey","elementImmunity","faCheckSquare","faSquare","infusionVals","InfusionAuraDropdown","isMelee","ReactionToggle","charEleKey","exclusive","baseColor","HitModeToggle","DamageOptionsCard","WeaponStatsCard","statsVals","WeaponDisplayCard","propWeaponId","charData","footer","buildContextObj","weaponDispatch","newWeapon","setLevel","findIndex","ascenML","setAscension","lowerAscension","ws","initialWeaponFilter","showModal","setshowModal","k","startAdornment","ambiguousLevel","milestoneLevels","lv","as","lvlstr","CloseButton","SwapBtn","onChangeId","substatKey","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","minWidth","process","getLevelString","gutterBottom","passiveDescription","Provider","setCompareBuild","setShow","close","clickHandler","weapons","dbWeapon","SwapHoriz","ModalWrapper","ImgIcon","FormulaCalcCard","ExpandMore","Collapse","CalculationDisplay","displayStatKeys","getDisplayStatKeys","fieldIndex","FormulaCalculationField","fieldKeys","subFormulaKeys","getPrintableFormulaStatKeyList","GetDependencies","modifiers","Boolean","Accordion","AccordionSummary","expandIcon","printStat","AccordionDetails","subKey","formulaField","fieldFixed","fieldUnit","fieldFormula","fieldFormulaDependency","fieldValue","CharacterArtifactPane","history","useHistory","statKeys","edit","artid","pathname","artToEditId","useForceUpdate","followAnyArt","equipArts","window","confirm","equipArtifacts","unequipArts","SolidToggleButtonGroup","ToggleButton","Card","warning","setToSlots","setNumKeyArr","CharacterOverviewPane","tlvl","elementKey","cardImg","tKey","Badge","badgeContent","skillBoost","burstBoost","overlap","anchorOrigin","vertical","horizontal","constellationName","MainStatsCards","additionalKeys","editStatKeys","otherStatKeys","miscStatkeys","resetString","statBreakpoint","specializedStatKey","getSpecializedStat","specializedStatVal","getSpecializedStatVal","specializedStatUnit","displayNewBuildProps","TeamBuffDisplay","StatDisplayCard","columnSpacing","rowSpacing","editContent","characterStatKeys","defVal","round","getBase","getStatNameWithPercent","setedit","faSave","CharacterTalentPane","ReactionDisplay","tText","SkillDisplayCard","talentKey","subtitle","asc","enabled","style","onClickTitle","ReactionComponents","superconduct_hit","sKey","electrocharged_hit","overloaded_hit","pyro_swirl_hit","swirlEleToDisplay","setele","shattered_hit","information","crystalize_hit","crystalizeEleToDisplay","eleInterArr","ElementToReactionKeys","Ele","talentLimits","actionWrapeprFunc","CardActionArea","levelBoost","talentLvlKey","newTalentLevelKey","talentSheet","ConditionalWrapper","CharacterTeamBuffsPane","useSheets","ResonanceDisplay","tStats","TeammateDisplay","doc","cond","onClickHandler","useCharSelectionCallback","condCharStats","PersonAdd","CharacterCard","onClickHeader","artifactChildren","CharArtifactCondDisplay","weaponChildren","CharWeaponCondDisplay","CharTalentCondDisplay","artSetKey","slotkeys","partyConditionals","conds","condCharKey","condCharKeyHashed","charConds","condKey","TabPanel","role","hidden","aria-labelledby","CharacterDisplayCard","propNewBuild","tabName","isFlex","propCompareBuild","useCharacter","dbDirty","setDbDirty","teammate1","teammate2","teammate3","followChar","defaultInitialWeapon","createWeapon","deepCloneStats","tab","settab","onTab","calculateBuild","CharSelectDropdown","Tabs","Tab","setCharacter","HeaderIconDisplay","CharacterSelectionModal","talents"],"mappings":"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","file":"static/js/16.7b7abc2a.chunk.js","sourcesContent":["import StatIcon from \"../Components/StatIcon\"\r\nimport { Translate } from \"../Components/Translate\"\r\nimport { sgt } from \"../Data/Characters/SheetUtil\"\r\nimport { allElements } from \"../Types/consts\"\r\nimport IConditional from \"../Types/IConditional\"\r\nimport { BasicStats } from \"../Types/stats\"\r\nconst tr = (strKey: string) => <Translate ns=\"resonance_gen\" key18={strKey} />\r\n\r\ntype resonanceDoc = {\r\n  header: IConditional[\"header\"],\r\n  description: Displayable,\r\n  canShow: (stats: BasicStats) => boolean,\r\n  conditionals: IConditional[]\r\n}\r\nconst resonanceSheets: resonanceDoc[] = [{// Protective Canopy\r\n  header: {\r\n    title: tr(\"ProtectiveCanopy.name\"),\r\n    action: <span>{StatIcon.anemo} {StatIcon.geo} {StatIcon.pyro} {StatIcon.hydro} {StatIcon.cryo} {StatIcon.electro} x4</span>\r\n  },\r\n  description: tr(\"ProtectiveCanopy.desc\"),\r\n  canShow: stats => (new Set([...stats.teamStats.map(t => t?.characterEle ?? \"\"), stats.characterEle].filter(e => e))).size === 4,\r\n  conditionals: [{\r\n    key: \"pc\",\r\n    partyBuff: \"partyAll\",\r\n    canShow: stats => (new Set([...stats.teamStats.map(t => t?.characterEle ?? \"\"), stats.characterEle])).size === 4,\r\n    maxStack: 0,\r\n    stats: Object.fromEntries([...allElements, \"physical\"].map(ele => [`${ele}_res_`, 15]))\r\n  }]\r\n}, {// Fervent Flames\r\n  header: {\r\n    title: tr(\"FerventFlames.name\"),\r\n    action: <span>{StatIcon.pyro} {StatIcon.pyro}</span>,\r\n  },\r\n  description: tr(\"FerventFlames.desc\"),\r\n  canShow: stats => [...stats.teamStats.map(t => t?.characterEle ?? \"\"), stats.characterEle].filter(e => e === \"pyro\").length >= 2,\r\n  conditionals: [{\r\n    key: \"ff\",\r\n    partyBuff: \"partyAll\",\r\n    canShow: stats => [...stats.teamStats.map(t => t?.characterEle ?? \"\"), stats.characterEle].filter(e => e === \"pyro\").length >= 2,\r\n    maxStack: 0,\r\n    stats: {\r\n      atk_: 25,\r\n    },\r\n    fields: [{\r\n      text: \"Cryo affect Duration\",\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }]\r\n}, {// Soothing Waters\r\n  header: {\r\n    title: tr(\"SoothingWater.name\"),\r\n    action: <span>{StatIcon.hydro} {StatIcon.hydro}</span>,\r\n  },\r\n  canShow: stats => [...stats.teamStats.map(t => t?.characterEle ?? \"\"), stats.characterEle].filter(e => e === \"hydro\").length >= 2,\r\n  description: tr(\"SoothingWater.desc\"),\r\n  conditionals: [{\r\n    key: \"sw\",\r\n    maxStack: 0,\r\n    canShow: stats => [...stats.teamStats.map(t => t?.characterEle ?? \"\"), stats.characterEle].filter(e => e === \"hydro\").length >= 2,\r\n    partyBuff: \"partyAll\",\r\n    stats: {\r\n      incHeal_: 30,\r\n    },\r\n    fields: [{\r\n      text: \"Pyro affect Duration\",\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }]\r\n}, {\r\n  header: {\r\n    title: tr(\"ShatteringIce.name\"),\r\n    action: <span>{StatIcon.cryo} {StatIcon.cryo}</span>,\r\n  },\r\n  canShow: stats => [...stats.teamStats.map(t => t?.characterEle ?? \"\"), stats.characterEle].filter(e => e === \"cryo\").length >= 2,\r\n  description: tr(\"ShatteringIce.desc\"),\r\n  conditionals: [{\r\n    key: \"si\",// Shattering Ice\r\n    name: \"Against enemies that are Frozen or affected by Cryo\",\r\n    canShow: stats => [...stats.teamStats.map(t => t?.characterEle ?? \"\"), stats.characterEle].filter(e => e === \"cryo\").length >= 2,\r\n    partyBuff: \"partyAll\",\r\n    stats: {\r\n      critRate_: 15,\r\n    },\r\n    fields: [{\r\n      text: \"Electro affect Duration\",\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  },]\r\n}, {\r\n  header: {// High Voltage\r\n    title: tr(\"HighVoltage.name\"),\r\n    action: <span>{StatIcon.electro} {StatIcon.electro}</span>,\r\n  },\r\n  description: tr(\"HighVoltage.desc\"),\r\n  canShow: stats => [...stats.teamStats.map(t => t?.characterEle ?? \"\"), stats.characterEle].filter(e => e === \"electro\").length >= 2,\r\n  conditionals: [{\r\n    key: \"hv\",\r\n    partyBuff: \"partyAll\",\r\n    maxStack: 0,\r\n    canShow: stats => [...stats.teamStats.map(t => t?.characterEle ?? \"\"), stats.characterEle].filter(e => e === \"electro\").length >= 2,\r\n    fields: [{\r\n      text: \"Hydro affect Duration\",\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }]\r\n}, {\r\n  header: {// Impetuous Winds\r\n    title: tr(\"ImpetuousWinds.name\"),\r\n    action: <span>{StatIcon.anemo} {StatIcon.anemo}</span>,\r\n  },\r\n  description: tr(\"ImpetuousWinds.desc\"),\r\n  canShow: stats => [...stats.teamStats.map(t => t?.characterEle ?? \"\"), stats.characterEle].filter(e => e === \"anemo\").length >= 2,\r\n  conditionals: [{\r\n    key: \"iw\",\r\n    partyBuff: \"partyAll\",\r\n    canShow: stats => [...stats.teamStats.map(t => t?.characterEle ?? \"\"), stats.characterEle].filter(e => e === \"anemo\").length >= 2,\r\n    maxStack: 0,\r\n    stats: {\r\n      staminaDec_: 15,\r\n      moveSPD_: 10,\r\n      skillCDRed_: 5,\r\n    }\r\n  }]\r\n}, {\r\n  header: {\r\n    title: tr(\"EnduringRock.name\"),\r\n    action: <span>{StatIcon.geo} {StatIcon.geo}</span>,\r\n  },\r\n  description: tr(\"EnduringRock.desc\"),\r\n  canShow: stats => [...stats.teamStats.map(t => t?.characterEle ?? \"\"), stats.characterEle].filter(e => e === \"geo\").length >= 2,\r\n  conditionals: [{\r\n    key: \"er\", // Enduring Rock\r\n    name: \"Increases shield strength\",\r\n    canShow: stats => [...stats.teamStats.map(t => t?.characterEle ?? \"\"), stats.characterEle].filter(e => e === \"geo\").length >= 2,\r\n    partyBuff: \"partyAll\",\r\n    stats: {\r\n      shield_: 15,\r\n    }\r\n  }, {\r\n    key: \"ers\", // Enduring Rock\r\n    name: \"characters protected by a shield\",\r\n    canShow: stats => [...stats.teamStats.map(t => t?.characterEle ?? \"\"), stats.characterEle].filter(e => e === \"geo\").length >= 2,\r\n    partyBuff: \"partyAll\",\r\n    stats: {\r\n      dmg_: 15,\r\n    }\r\n  }, {\r\n    key: \"erd\", // Enduring Rock\r\n    name: \"characters protected by a shield: dealing DMG to enemies\",\r\n    canShow: stats => [...stats.teamStats.map(t => t?.characterEle ?? \"\"), stats.characterEle].filter(e => e === \"geo\").length >= 2,\r\n    partyBuff: \"partyAll\",\r\n    stats: {\r\n      geo_enemyRes_: -20,\r\n    },\r\n    fields: [{\r\n      text: sgt(\"duration\"),\r\n      value: 15,\r\n      unit: \"s\"\r\n    }],\r\n  }]\r\n}]\r\n\r\n\r\nexport default resonanceSheets\r\n","import { useCallback, useContext } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { characterBaseStats, overrideStatKeys } from \"../Util/StatUtil\";\r\n\r\ntype characterEquipWeapon = {\r\n  type: \"weapon\", id: string\r\n}\r\ntype characterReducerBonusStatsAction = {\r\n  type: \"editStats\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerResetStatsAction = {\r\n  type: \"resetStats\",\r\n  statKey: string\r\n}\r\ntype characterTeamAction = {\r\n  type: \"team\",\r\n  index: number,\r\n  charKey: CharacterKey | \"\"\r\n}\r\nexport type characterReducerAction = characterEquipWeapon | characterReducerBonusStatsAction | characterReducerResetStatsAction | characterTeamAction | Partial<ICachedCharacter>\r\n\r\nexport default function useCharacterReducer(characterKey: CharacterKey | \"\") {\r\n  const database = useContext(DatabaseContext)\r\n\r\n  return useCallback((action: characterReducerAction): void => {\r\n    if (!characterKey) return\r\n\r\n    if (\"type\" in action) switch (action.type) {\r\n      case \"weapon\":\r\n        database.setWeaponLocation(action.id, characterKey)\r\n        break\r\n      case \"editStats\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { statKey, value } = action\r\n\r\n        const bonusStats = character.bonusStats\r\n\r\n        if (bonusStats[statKey] === value) return\r\n        if (overrideStatKeys.includes(statKey)) {\r\n          if ((characterBaseStats(character)[statKey] ?? 0) === value)\r\n            delete bonusStats[statKey]\r\n          else\r\n            bonusStats[statKey] = value\r\n        } else {\r\n          if (value)\r\n            bonusStats[statKey] = value\r\n          else\r\n            delete bonusStats[statKey]\r\n        }\r\n        database.updateChar({ ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"resetStats\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { statKey } = action\r\n\r\n        const bonusStats = character.bonusStats\r\n        delete bonusStats[statKey]\r\n\r\n        database.updateChar({ ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"team\": {\r\n        const character = database._getChar(characterKey)!\r\n        const { team } = character\r\n\r\n        const { index, charKey: newCharKey } = action\r\n        const oldCharKey = team[index]\r\n        team[index] = newCharKey\r\n\r\n        // move the old char to \"inventory\"\r\n        if (oldCharKey) {\r\n          const oldChar = database._getChar(oldCharKey)\r\n          if (oldChar) database.updateChar({ ...oldChar, team: [\"\", \"\", \"\"] })\r\n        }\r\n\r\n        // unequip new char from its old teammates\r\n        if (newCharKey) {\r\n          const newChar = database._getChar(newCharKey)\r\n          if (newChar) {\r\n            newChar.team.forEach(t => {\r\n              if (!t) return\r\n              const tChar = database._getChar(t)\r\n              tChar && database.updateChar({ ...tChar, team: tChar.team.map(c => c === newCharKey ? \"\" : c) as ICachedCharacter[\"team\"] })\r\n            })\r\n          }\r\n        }\r\n\r\n        // equip new char to new teammates\r\n        team.forEach((t, tind) => {\r\n          if (!t) return\r\n          const newChar = database._getChar(t)\r\n          if (newChar) database.updateChar({ ...newChar, team: [characterKey, ...team].filter((_, i) => i !== tind + 1) as ICachedCharacter[\"team\"] })\r\n        })\r\n\r\n        // update src character\r\n        database.updateChar({ ...character, team })\r\n      }\r\n    } else\r\n      database.updateChar({ ...database._getChar(characterKey)!, ...action })\r\n  }, [characterKey, database])\r\n\r\n}","import { BusinessCenter, Replay } from \"@mui/icons-material\";\r\nimport { Divider, ListItemIcon, MenuItem, Typography } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Character/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { CharacterKey } from \"../../Types/consts\";\r\nimport DropdownButton, { DropdownButtonProps } from \"../DropdownMenu/DropdownButton\";\r\nimport ThumbSide from \"./ThumbSide\";\r\n\r\nexport type CharacterDropdownButtonProps = Omit<DropdownButtonProps, \"title\" | \"onChange\" | \"children\"> & {\r\n  value: CharacterKey | \"\"\r\n  onChange: (ck: CharacterKey | \"\") => void\r\n  filter?: (cs: CharacterSheet, ck: CharacterKey) => boolean\r\n  inventory?: boolean\r\n  noUnselect?: boolean,\r\n  unSelectText?: Displayable,\r\n  unSelectIcon?: Displayable,\r\n}\r\n\r\nexport default function CharacterDropdownButton({ value, onChange, unSelectText, unSelectIcon, inventory = false, noUnselect = false, filter = () => true, ...props }: CharacterDropdownButtonProps) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const database = useContext(DatabaseContext)\r\n  const characterSheets = usePromise(CharacterSheet.getAll(), [])\r\n  const characterSheet = usePromise(CharacterSheet.get(value), [value])\r\n  const characterKeys = database._getCharKeys().filter(ck => characterSheets?.[ck] && filter(characterSheets[ck], ck)).sort()\r\n  return <DropdownButton\r\n    {...props}\r\n    title={characterSheet?.name ?? (inventory ? t`inventory` : (unSelectText ?? t`unselect`))}\r\n    color={value ? \"success\" : \"primary\"}\r\n    startIcon={characterSheet?.thumbImg ? <ThumbSide src={characterSheet.thumbImgSide} /> : (inventory ? <BusinessCenter /> : (unSelectIcon ?? <Replay />))}>\r\n    {!noUnselect && (inventory ? <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\r\n      <ListItemIcon>\r\n        <BusinessCenter />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {t`inventory`}\r\n      </Typography>\r\n    </MenuItem> : <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\r\n      <ListItemIcon>\r\n        <Replay />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {t`unselect`}\r\n      </Typography>\r\n    </MenuItem>)}\r\n    {!noUnselect && <Divider key=\"div\" />}\r\n    {!!characterSheets && CharacterMenuItemArray(characterSheets, characterKeys, onChange, value)}\r\n  </DropdownButton >\r\n}\r\n\r\n// Returning an array instead of Fragment because MUI Menu doesn't like fragments.\r\nexport function CharacterMenuItemArray(characterSheets: StrictDict<CharacterKey, CharacterSheet>, characterKeys: CharacterKey[], onChange: (ck: CharacterKey) => void, selectedCharacterKey: CharacterKey | \"\" = \"\") {\r\n  return characterKeys.map(characterKey =>\r\n    <MenuItem onClick={() => onChange(characterKey)} key={characterKey} selected={selectedCharacterKey === characterKey} disabled={selectedCharacterKey === characterKey} >\r\n      <ListItemIcon>\r\n        <ThumbSide src={characterSheets[characterKey].thumbImgSide} />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {characterSheets?.[characterKey]?.name}\r\n      </Typography>\r\n    </MenuItem>)\r\n}","import { Button, ButtonProps, InputBase, InputProps, styled } from '@mui/material'\r\nimport { useCallback, useEffect, useMemo, useState } from 'react'\r\ntype props = Omit<InputProps, \"onChange\"> & {\r\n  value?: number | undefined,\r\n  onChange: (newValue: number | undefined) => void,\r\n  disabled?: boolean\r\n  float?: boolean,\r\n  allowEmpty?: boolean,\r\n}\r\n\r\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  transition: \"all 0.5s ease\",\r\n  \"&:hover\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  \"&.Mui-focused\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  \"&.Mui-disabled\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n}))\r\n\r\nconst Wrapper = styled(Button)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  padding: 0,\r\n  overflow: \"hidden\",\r\n  \"div\": {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n}))\r\n\r\n// wrap the Input with this when using the input in a buttongroup\r\nexport function CustomNumberInputButtonGroupWrapper({ children, disableRipple, disableFocusRipple, disableTouchRipple, ...props }: ButtonProps) {\r\n  return <Wrapper disableRipple disableFocusRipple disableTouchRipple {...props}>{children}</Wrapper>\r\n}\r\n\r\nexport default function CustomNumberInput({ value = 0, onChange, disabled = false, float = false, ...props }: props) {\r\n  const [number, setNumber] = useState(value)\r\n  const [focused, setFocus] = useState(false)\r\n  const parseFunc = useMemo(() => float ? parseFloat : parseInt, [float],)\r\n  const onBlur = useCallback(\r\n    () => {\r\n      onChange(number)\r\n      setFocus(false)\r\n    },\r\n    [onChange, number, setFocus],\r\n  )\r\n  const onFocus = useCallback(\r\n    () => {\r\n      setFocus(true)\r\n    },\r\n    [setFocus],\r\n  )\r\n  useEffect(() => setNumber(value), [value, setNumber]) // update value on value change\r\n  const onInputChange = useCallback(e => setNumber(parseFunc(e.target.value) || 0), [setNumber, parseFunc],)\r\n  const onKeyDOwn = useCallback(e => e.key === \"Enter\" && onBlur(), [onBlur],)\r\n  return <StyledInputBase\r\n    value={(focused && !number) ? \"\" : number}\r\n    aria-label=\"custom-input\"\r\n    type=\"number\"\r\n    onChange={onInputChange}\r\n    onBlur={onBlur}\r\n    onFocus={onFocus}\r\n    disabled={disabled}\r\n    onKeyDown={onKeyDOwn}\r\n    {...props}\r\n  />\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, List, ListItem, styled, Typography } from \"@mui/material\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { buildContext } from \"../Build/Build\";\r\nimport Character from \"../Character/Character\";\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\nimport ColorText from \"./ColoredText\";\r\n\r\nexport default function FieldDisplay({ field }: { field: IFieldDisplay }) {\r\n  const { newBuild, equippedBuild, compareBuild } = useContext(buildContext)\r\n  const build = (newBuild ? newBuild : equippedBuild)\r\n  const canShow = useMemo(() => build ? field?.canShow?.(build) : false, [field, build])\r\n  const fixedVal = field?.fixed || 0\r\n  const fieldVal = useMemo(() => {\r\n    if (field.value) return Character.getTalentFieldValue(field, \"value\", build)\r\n    else if (field.formula) {\r\n      let retVal = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      //compareAgainstEquipped\r\n      if (compareBuild && equippedBuild && typeof retVal === \"number\") {\r\n        let fieldEquippedVal = field.value ? field.value : field.formula?.(equippedBuild)?.[0]?.(equippedBuild)\r\n        if (typeof fieldEquippedVal === \"function\")\r\n          fieldEquippedVal = parseInt(fieldEquippedVal?.(equippedBuild)?.toFixed?.(fixedVal))\r\n        let diff = retVal - fieldEquippedVal\r\n        retVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</ColorText> : \"\"}</span>\r\n      }\r\n      return retVal\r\n    }\r\n  }, [compareBuild, fixedVal, equippedBuild, field, build])\r\n\r\n  const fieldText = useMemo(() => Character.getTalentFieldValue(field, \"text\", build), [field, build])\r\n  const fieldVariant = useMemo(() => Character.getTalentFieldValue(field, \"variant\", build), [field, build])\r\n\r\n  const formulaTextOverlay = useMemo(() => {\r\n    const fieldFormulaText = Character.getTalentFieldValue(field, \"formulaText\", build)\r\n    return fieldFormulaText ? <BootstrapTooltip placement=\"top\" title={<Typography>{fieldFormulaText}</Typography>}>\r\n      <Box component=\"span\" sx={{ cursor: \"help\", ml: 1 }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n    </BootstrapTooltip> : null\r\n  }, [field, build])\r\n\r\n  const unit = useMemo(() => Character.getTalentFieldValue(field, \"unit\", build), [field, build])\r\n\r\n  if (!canShow) return null\r\n  return <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}  >\r\n    <span><b>{fieldText}</b>{formulaTextOverlay}</span>\r\n    <Typography color={`${fieldVariant}.main`}>{fieldVal?.toFixed?.(fixedVal) ?? fieldVal}{unit}</Typography>\r\n  </ListItem>\r\n}\r\nexport const FieldDisplayList = styled(List)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: \"hidden\",\r\n  margin: 0,\r\n  '> .MuiListItem-root:nth-of-type(even)': {\r\n    backgroundColor: theme.palette.contentDark.main\r\n  },\r\n  '> .MuiListItem-root:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.contentDarker.main\r\n  },\r\n}));","import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n  },\r\n}));\r\nexport default BootstrapTooltip","import { Box } from \"@mui/material\"\r\nimport { useCallback, useContext } from \"react\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport Conditional from \"../Conditional/Conditional\"\r\nimport useCharacterReducer from \"../ReactHooks/useCharacterReducer\"\r\nimport { DocumentSection } from \"../Types/character\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { evalIfFunc } from \"../Util/Util\"\r\nimport ConditionalDisplay from \"./ConditionalDisplay\"\r\nimport FieldDisplay, { FieldDisplayList } from \"./FieldDisplay\"\r\n\r\ntype SkillDisplayCardProps = {\r\n  sections: DocumentSection[],\r\n  characterKey: CharacterKey,\r\n  skipConditionalEquipmentCheck?: boolean\r\n}\r\nexport default function DocumentDisplay({ sections, characterKey, skipConditionalEquipmentCheck }: SkillDisplayCardProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const build = (newBuild ? newBuild : equippedBuild) as ICalculatedStats\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const onCVChange = useCallback(\r\n    v => characterDispatch({ conditionalValues: v }), [characterDispatch])\r\n  if (!build) return null\r\n\r\n  const sectionsDisplay = sections?.map((section, i) => {\r\n    if (!section.canShow!(build)) return null\r\n    const talentText = evalIfFunc(section.text, build)\r\n    const fields = section.fields ?? []\r\n    const canShowConditional = section.conditional && section.conditional.partyBuff !== \"partyOnly\" && Conditional.canShow(section.conditional, build, skipConditionalEquipmentCheck)\r\n    if (!talentText && !fields.length && !canShowConditional) return null\r\n    return <Box key={\"section\" + i} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n      {talentText && <div>{talentText}</div>}\r\n      {fields.length > 0 && <FieldDisplayList>\r\n        {fields?.map?.((field, i) => <FieldDisplay key={i} field={field} />)}\r\n      </FieldDisplayList>}\r\n      {!!section.conditional && canShowConditional && <ConditionalDisplay conditional={section.conditional} stats={build} onChange={onCVChange} hideDesc skipConditionalEquipmentCheck={skipConditionalEquipmentCheck} />}\r\n    </Box>\r\n  }).filter(s => s)\r\n  if (!sectionsDisplay.length) return null\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionsDisplay}</Box>\r\n}\r\n","import { IconButton, IconButtonProps, styled } from \"@mui/material\";\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n  expand: boolean;\r\n}\r\nconst ExpandButton = styled((props: ExpandMoreProps) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: (theme as any).transitions.create('transform', {\r\n    duration: (theme as any).transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nexport default ExpandButton","import { initialBuildSettings } from \"../Build/BuildSetting\"\r\nimport SqBadge from \"../Components/SqBadge\"\r\nimport { Sheets } from \"../ReactHooks/useSheets\"\r\nimport { ICachedCharacter, TalentSheetElementKey } from \"../Types/character\"\r\nimport { allSlotKeys, CharacterKey } from \"../Types/consts\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { objectFromKeyMap } from \"../Util/Util\"\r\n\r\nexport function getFormulaTargetsDisplayHeading(key: string, sheets: Sheets, build: ICalculatedStats): {\r\n  title: Displayable,\r\n  icon?: string\r\n} {\r\n  if (key === \"basicKeys\") return {\r\n    title: \"Basic Stats\"\r\n  }\r\n  else if (key === \"genericAvgHit\") return {\r\n    title: \"Generic Optimization Values\"\r\n  }\r\n  else if (key === \"transReactions\") return {\r\n    title: \"Transformation Reaction\"\r\n  }\r\n  else if (key.startsWith(\"talentKey_\")) {\r\n    const subkey = key.split(\"talentKey_\")[1]\r\n    const talent = sheets.characterSheets[build.characterKey].getTalentOfKey(subkey as TalentSheetElementKey, build.characterEle)\r\n    return {\r\n      icon: talent?.img,\r\n      title: talent?.name ?? subkey\r\n    }\r\n  } else if (key.startsWith(\"weapon_\")) {\r\n    const subkey = key.split(\"weapon_\")[1]\r\n    const sheet = sheets.weaponSheets[build.weapon.key]\r\n    return {\r\n      icon: build.weapon.refineIndex < 2 ? sheet?.img : sheet?.imgAwaken,\r\n      title: (sheet.name ?? subkey)\r\n    }\r\n  } else if (key.startsWith(\"artifact_\")) {\r\n    const [, setKey, num] = key.split('_')\r\n    const sheet = sheets.artifactSheets[setKey]\r\n    return {\r\n      icon: sheet.defIconSrc,\r\n      title: <span>{sheet.name} <SqBadge color=\"success\">{num}-Set</SqBadge></span>\r\n    }\r\n  }\r\n  return {\r\n    title: \"\"\r\n  }\r\n}\r\n\r\nexport function initialCharacter(key: CharacterKey): ICachedCharacter {\r\n  return {\r\n    key, // the game character this is based off\r\n    level: 1,\r\n    ascension: 0,\r\n    hitMode: \"avgHit\",\r\n    reactionMode: \"\",\r\n    equippedArtifacts: objectFromKeyMap(allSlotKeys, () => \"\"),\r\n    equippedWeapon: \"\",\r\n    conditionalValues: {},\r\n    bonusStats: {},\r\n    buildSettings: initialBuildSettings(),\r\n    talent: {\r\n      auto: 1,\r\n      skill: 1,\r\n      burst: 1,\r\n    },\r\n    infusionAura: \"\",\r\n    constellation: 0,\r\n    team: [\"\", \"\", \"\"]\r\n  }\r\n}","import { styled } from \"@mui/system\";\r\n\r\nconst ThumbSide = styled(\"img\")(({ theme }) => ({\r\n  display: \"inline-block\",\r\n  width: \"auto\",\r\n  height: `2.3em`,\r\n  lineHeight: 1,\r\n  verticalAlign: \"text-bottom\",\r\n  marginTop: theme.spacing(-3),\r\n  marginLeft: theme.spacing(-1.25),\r\n  marginRight: theme.spacing(-1),\r\n  marginBottom: theme.spacing(-1),\r\n}))\r\n\r\nexport default ThumbSide","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Character/CharacterSheet\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\n\r\nexport default function LocationName({ location }) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const characterSheet = usePromise(CharacterSheet.get(location ?? \"\"), [location])\r\n  return <Typography component=\"span\">\r\n    {characterSheet?.name ? characterSheet.nameWIthIcon : <span><BusinessCenter sx={{ verticalAlign: \"text-bottom\" }} /> {t`inventory`}</span>}\r\n  </Typography>\r\n\r\n}","import { Box, Typography } from \"@mui/material\"\r\nimport { useMemo } from \"react\"\r\nimport Character from \"../Character/Character\"\r\nimport { sgt } from \"../Data/Characters/SheetUtil\"\r\nimport Formula from \"../Formula\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport Stat from \"../Stat\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { characterBaseStats } from \"../Util/StatUtil\"\r\nimport ColorText from \"./ColoredText\"\r\nimport StatIcon from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", hasBonus = false }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText: Displayable = \"\", diffText: Displayable = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <ColorText color={diff > 0 ? \"success\" : \"error\"}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</ColorText>\r\n  const valueText = <>{oldText}{diffText}</>\r\n  return <Box display=\"flex\" justifyContent=\"space-between\" >\r\n    <Typography>{label}</Typography>\r\n    <Typography>\r\n      {hasBonus ? <strong>{valueText}</strong> : valueText}\r\n    </Typography>\r\n  </Box>\r\n}\r\ntype StatDisplayProps = {\r\n  character: ICachedCharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats,\r\n  statKey: string,\r\n  partyBuff?: boolean\r\n}\r\nexport default function StatDisplay({ character, equippedBuild, newBuild, statKey, partyBuff = false }: StatDisplayProps) {\r\n  const formula = usePromise(Array.isArray(statKey) ? Formula.get(statKey) : undefined, [statKey])\r\n\r\n  const { val, oldVal, fixed, unit, label, hasBonus } = useMemo(() => {\r\n    let val, oldVal, fixed, unit, label: Displayable = \"\"\r\n    if (typeof statKey === \"string\") {//basic statKey\r\n      if (newBuild && equippedBuild) {//comparable\r\n        //newbuild -> val\r\n        //equippedbuild ->old\r\n        val = newBuild?.[statKey] ?? 0\r\n        oldVal = equippedBuild?.[statKey] ?? 0\r\n        if (partyBuff) {\r\n          val = newBuild?.partyBuff?.[statKey] ?? 0\r\n          oldVal = equippedBuild?.partyBuff?.[statKey] ?? 0\r\n        }\r\n      } else {\r\n        const build = newBuild ? newBuild : equippedBuild\r\n        //build ->val\r\n        val = build?.[statKey] ?? 0\r\n        if (partyBuff) {\r\n          val = build?.partyBuff?.[statKey] ?? 0\r\n        }\r\n        if (!partyBuff) {\r\n          //statvaluewith override -> old\r\n          oldVal = characterBaseStats(character)[statKey] as number | undefined\r\n          if (build) {\r\n            if (statKey === \"finalHP\")\r\n              oldVal = build.characterHP\r\n            else if (statKey === \"finalDEF\")\r\n              oldVal = build.characterDEF\r\n            else if (statKey === \"finalATK\")\r\n              oldVal = build.characterATK + build.weaponATK\r\n          }\r\n        }\r\n      }\r\n      unit = Stat.getStatUnit(statKey)\r\n      fixed = Stat.fixedUnit(statKey)\r\n      label = <span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>\r\n    } else if (formula) {//Formula\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      const field = (formula as any).field as IFieldDisplay //assume it is attached in post-processing\r\n      const labelVariant = Character.getTalentFieldValue(field, \"variant\", build)\r\n      label = <ColorText color={labelVariant} >{Character.getTalentFieldValue(field, \"text\", build)}</ColorText>\r\n      fixed = Character.getTalentFieldValue(field, \"fixed\", build, 0 as any)\r\n      unit = Character.getTalentFieldValue(field, \"unit\", build, \"\")\r\n      val = Character.getTalentFieldValue(field, \"formula\", build)?.[0]?.(build)\r\n      if (newBuild && equippedBuild) {//comparable\r\n        oldVal = Character.getTalentFieldValue(field, \"formula\", equippedBuild)?.[0]?.(equippedBuild)\r\n      }\r\n    }\r\n    return { val, oldVal, fixed, unit, label, hasBonus: !partyBuff && Character.hasBonusStats(character, statKey) }\r\n  }, [character, equippedBuild, newBuild, statKey, partyBuff, formula])\r\n  if ((val && typeof val !== \"number\") || (oldVal && typeof oldVal !== \"number\")) {\r\n    let displayVal = val\r\n    if (statKey === \"infusionAura\") {\r\n      displayVal = <ColorText color={val}>{sgt(`element.${val}`)}</ColorText>\r\n    }\r\n    return <Box display=\"flex\" justifyContent=\"space-between\" >\r\n      <Typography>{label}</Typography>\r\n      <Typography>\r\n        <strong>{displayVal}</strong>\r\n      </Typography>\r\n    </Box>\r\n  }\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, label: label as any, hasBonus }} />\r\n}","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\n\r\nexport default function useWeapon(weaponID: string | undefined = \"\") {\r\n  const database = useContext(DatabaseContext)\r\n  const [weapon, setWeapon] = useState(database._getWeapon(weaponID))\r\n  useEffect(() => setWeapon(database._getWeapon(weaponID)), [database, weaponID])\r\n  useEffect(() =>\r\n    weaponID ? database.followWeapon(weaponID, setWeapon) : undefined,\r\n    [weaponID, setWeapon, database])\r\n  return weapon\r\n}","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\r\nimport { Button, Divider, MenuItem, Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport DropdownButton from '../Components/DropdownMenu/DropdownButton';\r\nimport SqBadge from '../Components/SqBadge';\r\nimport IConditional, { IConditionalValue } from '../Types/IConditional';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { evalIfFunc } from '../Util/Util';\r\n\r\nexport default function ConditionalSelector({ conditional, conditionalValue, setConditional, name, disabled = false, stats }:\r\n  { conditional: IConditional, conditionalValue: IConditionalValue, setConditional: (newCond: IConditionalValue) => void, name?: Displayable, disabled?: boolean, stats: ICalculatedStats }) {\r\n  const [conditionalNum = 0, conditionalStateKey] = conditionalValue\r\n  if (!conditional) return name as JSX.Element\r\n  if (\"states\" in conditional) {//complex conditional\r\n    const state = conditionalStateKey ? conditional.states[conditionalStateKey] : Object.values(conditional.states)[0]\r\n    const text = conditionalNum === 0 ? \"Not Active\" : <span>{state.name} {(evalIfFunc(state!.maxStack, stats) as number > 1 ? (`: ${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>\r\n    const badge = <SqBadge color={conditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</SqBadge>\r\n    return <DropdownButton fullWidth size=\"small\" title={<span>{name} {badge}</span>} disabled={disabled}>\r\n      <MenuItem onClick={() => setConditional([0])} selected={conditionalNum === 0} disabled={conditionalNum === 0}>\r\n        <span>Not Active</span>\r\n      </MenuItem>\r\n      <Divider />\r\n      {Object.entries(conditional.states).flatMap(([stateKey, condial]: any, i) =>\r\n        [...Array(condial.maxStack).keys()].map(v => v + 1).map((stack, i) =>\r\n          <MenuItem key={stateKey + i} onClick={() => setConditional([stack, stateKey])} selected={conditionalStateKey === stateKey && conditionalNum === stack} disabled={conditionalStateKey === stateKey && conditionalNum === stack} >\r\n            {condial.name}{condial.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n          </MenuItem>)\r\n      )}\r\n    </DropdownButton>\r\n  } else {// Simple conditional\r\n    const maxStack = evalIfFunc(conditional!.maxStack, stats) as number\r\n    if (maxStack === 0) {// Auto resolving conditional\r\n      return name ? <Typography>{name}</Typography> : null\r\n    } else if (maxStack === 1) {// Single boolean conditional\r\n      return <Button fullWidth size=\"small\" onClick={() => setConditional([conditionalNum ? 0 : 1])} disabled={disabled} startIcon={conditionalNum ? <CheckBox /> : <CheckBoxOutlineBlank />}>\r\n        {name}\r\n      </Button>\r\n    } else if (maxStack > 1) {\r\n      // Stacking conditional\r\n      const badge = <SqBadge color={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</SqBadge>\r\n      return <DropdownButton fullWidth size=\"small\" title={<span>{name} {badge}</span>} disabled={disabled}>\r\n        <MenuItem onClick={() => setConditional([0])} selected={conditionalNum === 0} disabled={conditionalNum === 0}>\r\n          <span>Not Active</span>\r\n        </MenuItem>\r\n        <Divider />\r\n        {[...Array(maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <MenuItem key={stack} onClick={() => setConditional([stack])} selected={conditionalNum === stack} disabled={conditionalNum === stack}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </MenuItem>)}\r\n      </DropdownButton>\r\n    }\r\n  }\r\n  return null\r\n}","import { CardContent, Box, CardHeader, Divider } from \"@mui/material\"\r\nimport { useCallback, useMemo } from \"react\"\r\nimport Conditional from \"../Conditional/Conditional\"\r\nimport ConditionalSelector from \"../Conditional/ConditionalSelector\"\r\nimport IConditional, { IConditionalValue, IConditionalValues } from \"../Types/IConditional\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nimport { deletePropPath, evalIfFunc, layeredAssignment, objClearEmpties } from \"../Util/Util\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport FieldDisplay, { FieldDisplayList } from \"./FieldDisplay\"\r\n\r\ntype ConditionalDisplayProps = {\r\n  conditional: IConditional,\r\n  stats: ICalculatedStats,\r\n  hideHeader?: boolean,\r\n  hideDesc?: boolean,\r\n  onChange: (value: IConditionalValues<IConditionalValue>) => void\r\n  skipConditionalEquipmentCheck?: boolean\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, stats, hideHeader = false, hideDesc = false, onChange, skipConditionalEquipmentCheck = false }: ConditionalDisplayProps) {\r\n  const canShow = useMemo(() => Conditional.canShow(conditional, stats, skipConditionalEquipmentCheck), [conditional, stats, skipConditionalEquipmentCheck])\r\n  const { stats: conditionalStats = {}, fields: conditionalFields = [], conditionalValue } = useMemo(() => canShow ? Conditional.resolve(conditional, stats) : { stats: {}, fields: [], conditionalValue: [0] as IConditionalValue }, [canShow, conditional, stats])\r\n  const displayFields = useMemo(() => canShow ? [...statsToFields(conditionalStats, stats), ...conditionalFields] : [], [canShow, conditionalStats, stats, conditionalFields])\r\n  const setConditional = useCallback(condV => {\r\n    const [conditionalNum = 0] = condV\r\n    if (!conditionalNum) {\r\n      deletePropPath(stats.conditionalValues, conditional!.keys)\r\n      objClearEmpties(stats.conditionalValues)\r\n    } else if (conditional.keys)\r\n      layeredAssignment(stats.conditionalValues, conditional!.keys, condV)\r\n    onChange(stats.conditionalValues)\r\n  }, [conditional, stats, onChange])\r\n\r\n  const description = !hideDesc && conditional.description && evalIfFunc(conditional.description, stats)\r\n\r\n  if (!canShow || !stats) return null\r\n  return <CardDark>\r\n    {!hideHeader && conditional.header && <CardHeader avatar={conditional.header.icon && evalIfFunc(conditional.header.icon, stats)} title={conditional.header.title} action={conditional.header.action} titleTypographyProps={{ variant: \"subtitle2\" }} />}\r\n    {!hideHeader && conditional.header && <Divider />}\r\n    {!!conditional.name && <CardContent>\r\n      {description && <Box mb={1}>{description}</Box>}\r\n      <ConditionalSelector\r\n        conditional={conditional}\r\n        conditionalValue={conditionalValue}\r\n        setConditional={setConditional}\r\n        name={conditional.name}\r\n        stats={stats} />\r\n    </CardContent>}\r\n    <FieldDisplayList sx={{ m: 0 }}>\r\n      {displayFields.map((field, i) => <FieldDisplay key={i} field={field} />)}\r\n    </FieldDisplayList>\r\n  </CardDark>\r\n}","import { IArtifact, ISubstat, MainStatKey, SubstatKey } from '../Types/artifact'\r\nimport { crawlObject, layeredAssignment } from '../Util/Util'\r\nimport Artifact from './Artifact'\r\nimport ArtifactMainStatsData from './artifact_main_gen.json'\r\n\r\n// We separate rolls into \"filler rolls\" that occurs when there are less than 4 substats,\r\n// and \"upgrade rolls\" that occurs when all 4 substats are added. They have different\r\n// probability distribution and require separate consideration.\r\n\r\n// Notations for the remainder of this file.\r\n//\r\n// i, j, k := substat\r\n// E(i) := Extra substat that rolls into substat i\r\n// T(i) := Targetted (extra) substat for substat i\r\n// Nf(i) := # of filler roll into substat i (0 <= Nfi <= 1)\r\n// Nu(i) := # of upgrade rolls into substat i\r\n//\r\n// E := { E1, E2, ... }\r\n// T := { T1, T2, ... }\r\n// N(i) := Nf(i) + Nu(i)\r\n// Nf := Nf(1) + Nf(2) + ...\r\n// Nu := Nu(1) + Nu(2) + ...\r\n//\r\n// For example, if the artifact has 14 atk, and the target atk is 30,\r\n// in a scenario where we roll 2 rolls of 16 and 18 into atk, then\r\n// \r\n// i = atk, E(atk) = 16 + 18, T(atk) = 30 - 14, Nf(atk) = 0 roll, Nu(atk) = 2 rolls\r\n\r\nconst allWeights = [3, 4, 6] as const\r\ntype Weight = typeof allWeights[number]\r\n\r\n/**\r\n * Weight used when rolling a filler roll. Each roll will choose from available\r\n * substats (excluding main stat and existing substats) with these weights.\r\n */\r\nconst fWeight: StrictDict<SubstatKey, Weight> = {\r\n  hp: 6, atk: 6, def: 6,\r\n  hp_: 4, atk_: 4, def_: 4, eleMas: 4, enerRech_: 4,\r\n  critRate_: 3, critDMG_: 3\r\n}\r\n\r\n/**\r\n * Probability of observing a filler sequence with particular weights\r\n * \r\n * pFillerSeq[w0][w1][w2][...] = Pr [ fWeight[main stat] = w0, fWeight[substat1] = w1, fWeight[substat2] = w2, ... ]\r\n */\r\nconst pFillerSeq: Dict<0 | Weight, Dict<Weight, Dict<Weight, Dict<Weight, Dict<Weight, number>>>>> = {}\r\nfunction populatePFillerSeq(prefix: (0 | Weight)[], prob: { [key in Weight]: number }, sumProb: number, current: number) {\r\n  if (prefix.length === 5) {\r\n    layeredAssignment(pFillerSeq, prefix as any, current)\r\n    return\r\n  }\r\n\r\n  for (const i of allWeights)\r\n    if (prob[i] > 0)\r\n      populatePFillerSeq([...prefix, i], { ...prob, [i]: prob[i] - i }, sumProb - i, current * prob[i] / sumProb)\r\n}\r\npopulatePFillerSeq([0], { 3: 6, 4: 20, 6: 18 }, 44, 1)\r\n\r\npopulatePFillerSeq([3], { 3: 3, 4: 20, 6: 18 }, 41, 1)\r\npopulatePFillerSeq([4], { 3: 6, 4: 16, 6: 18 }, 40, 1)\r\npopulatePFillerSeq([6], { 3: 6, 4: 20, 6: 12 }, 38, 1)\r\n\r\n/**\r\n * cnr[n][r] = C(n, r) = n! / (r!(n-r)!)\r\n * \r\n * 0 <= n <= 5; 0 <= r <= n\r\n */\r\nconst cnr = Array(6).fill(0).map((_, n) => {\r\n  const result = [1]\r\n  let r = 0, value = 1\r\n  while (++r <= n) {\r\n    value *= n - r + 1\r\n    value /= r\r\n    result.push(value)\r\n  }\r\n\r\n  return result\r\n})\r\n\r\n/** \r\n * pNExtra[n][i] = Pr[ E(k) >= (i - 7n) * alpha(i) | N(k) = n ]\r\n *               = Pr[ (E(k) / alpha(k)) - 7n >= i | N(k) = n ]\r\n * \r\n * 0 <= n <= 5; 0 <= i < 3*n + 1\r\n */\r\nconst pNExtra = [[1]]\r\nwhile (pNExtra.length < 6) {\r\n  const last = pNExtra[pNExtra.length - 1]\r\n  const next = Array(last.length + 3).fill(0)\r\n  last.forEach((value, i) => {\r\n    for (const j of [0, 1, 2, 3]) {\r\n      next[i + j] += value\r\n    }\r\n  })\r\n\r\n  pNExtra.push(next.map(x => x / 4))\r\n}\r\nfor (const array of pNExtra) {\r\n  let accu = array.reduce((a, b) => a + b)\r\n  array.forEach((x, i, array) => {\r\n    array[i] = accu\r\n    accu -= x\r\n  })\r\n}\r\n\r\n/** Probability that `artifact` will have at least `target` stats at max level */\r\nfunction probability(artifact: IArtifact, _target: { [key in SubstatKey]?: number }): number {\r\n  if (artifact.rarity <= 2) return NaN // Doesn't work with 1* and 2* should we decide to add them\r\n\r\n  const { rarity, level, substats } = artifact\r\n\r\n  // `target = target - mainstat - substat` to find the extra substats we need\r\n  // Also count filler rolls (4 - # of substats) while we're at it\r\n  const target = { ..._target }, required = new Set(Object.keys(target))\r\n  let numFillerSlots = 0\r\n  {\r\n    const key = artifact.mainStatKey\r\n    if (key in target) {\r\n      const maxLevel = rarity * 4 // Note: this formula doesn't work with 1* and 2* artifacts\r\n      const maxLevelMainStat = ArtifactMainStatsData[rarity][key][maxLevel]\r\n      if (maxLevelMainStat < target[key]!) return 0 // Main stat won't meet the target\r\n\r\n      delete target[key]\r\n      required.delete(key as SubstatKey)\r\n    }\r\n  }\r\n  for (const { key, value } of substats) {\r\n    if (key) {\r\n      if (required.has(key)) {\r\n        required.delete(key)\r\n        if (target[key]! > value)\r\n          target[key]! -= value\r\n        else delete target[key] // Requirement already met\r\n      }\r\n    } else numFillerSlots += 1\r\n  }\r\n  numFillerSlots += 4 - substats.length\r\n\r\n  if (required.size > numFillerSlots || Object.keys(target).length > 4) return 0 // Not enough filler rolls\r\n\r\n  const numUpgradeRolls = Artifact.rollsRemaining(level, rarity) - numFillerSlots\r\n\r\n  // normalize `target`\r\n  for (const [key, value] of Object.entries(target))\r\n    target[key] = Math.max(Math.ceil(10 * value / Artifact.maxSubstatValues(key, rarity)), 1)\r\n\r\n  let minTotalUpgrades = 0\r\n  const targetEntries = Object.entries(target).map(([key, target]) => {\r\n    const filler = required.has(key) ? 1 : 0 // Nf(i)\r\n    const minUpgrade = Math.ceil(target / 10) - filler // Minimum # of upgrade rolls to ensure E(i) > T(i)\r\n    minTotalUpgrades += minUpgrade\r\n    return { target, filler, minUpgrade }\r\n  }).reverse()\r\n\r\n  if (minTotalUpgrades > numUpgradeRolls) return 0 // Not enough upgrade rolls\r\n\r\n  /**\r\n   * The optimization trick here is to write Pr[ E > T | N ] using a recursive relation. Let\r\n   * \r\n   *  f(n, t) = Pr[ E(i) >= t | N(i) = n ]\r\n   *  g(k, n) = Pr[ E(1) >= T(1), E(2) >= T(2), ..., E(k) >= T(k) | Nu - Nu(1) - Nu(2) - ... - Nu(k) = n ]\r\n   *  h(n, m, M) = Pr[ Nu(k) = m | 0 <= Nu(k) <= n, |K| = M ]\r\n   * \r\n   * Then\r\n   * \r\n   *  Pr [ E > T | N ] = Pr[ Nf(k) = I(k requires filler) for all k | N ] sum{0 <= n <= Nu} g(|K|, n)\r\n   * \r\n   * where I(X) is the indicator function, and |K| is the number of substat constraints, and\r\n   * \r\n   *  f(n, e * alpha(i)) = pNExtra[n][ e - 7n ]\r\n   *  h(n, m, M) = C(n, m) (M-1)^(n - m) M^(-n) = pRollInto(n, m, M)\r\n   *  g(0, N) = 1\r\n   *  g(0, n) = 0 for n != N\r\n   * \r\n   *  g(k + 1, n) = sum{0 <= m <= n} g(k, n + m) f(m + Nf(k), T(k)) h(n + m, m, |K| - k)\r\n   */\r\n\r\n  // At this point,\r\n  //  `target` = ceil(T / alpha)\r\n  //  `numUpgradeRolls` = Nu\r\n\r\n  let result = { [numUpgradeRolls]: 1 }, additionalUpgradeRolls = numUpgradeRolls - minTotalUpgrades\r\n\r\n  // Keep applying `target` from first to last.\r\n  // At each step i in the loop, `result[n]` = g(i, n)\r\n  targetEntries.forEach(({ target, filler, minUpgrade }, targetIndex) => {\r\n    const next: typeof result = {}\r\n\r\n    for (let rolls = minUpgrade; rolls <= minUpgrade + additionalUpgradeRolls; rolls++) {\r\n      // rolls = m; extra = T(i) / alpha - 7n\r\n\r\n      // Extra substat (mutiple of alpha) required from upgrade & filler rolls\r\n      const extra = target - 7 * (rolls + filler)\r\n      // pExtra = Pr[ Has at least `extra` * alpha from `rolls` upgrade or filler rolls into `key` ]\r\n      //        = f(m + Nf(i), T(i))\r\n      const pExtra = (extra > 0 ? pNExtra[rolls + filler][extra] : 1)\r\n\r\n      for (const [_remaining, probability] of Object.entries(result)) {\r\n        const remaining = parseInt(_remaining)\r\n        if (remaining < rolls) continue\r\n\r\n        // n := remaining - m\r\n        // remaining = n + m\r\n        // probability = g(i, n + m)\r\n\r\n        // `pRolls` = Pr[ Has `rolls` rolls into `key` from `remaining` upgrade rolls ]\r\n        //          = h(n + m, m, |K| - i)\r\n        const pRolls = pRollInto(remaining, rolls, 4 - targetIndex)\r\n        const index = remaining - rolls // n\r\n\r\n        // g(i + 1, n) += g(i, n + m) f(m + Nf(i), T(i)) h(n + m, m, |K| - i)\r\n        next[index] = (next[index] ?? 0) + probability * pExtra * pRolls\r\n      }\r\n    }\r\n    result = next\r\n  })\r\n\r\n  // At this point, `result[i]` = g(|K|, i)\r\n\r\n  return calculatePFillerRolls(artifact.mainStatKey, substats, required) * Object.values(result).reduce((a, b) => a + b)\r\n}\r\n\r\n/**\r\n * Pr[ N(k) = n | N = m, |K| = M ]\r\n * \r\n * 0 <= n <= N <= 5; 0 <= M <= 4\r\n */\r\nfunction pRollInto(m: number, n: number, M: number) {\r\n  return cnr[m][n] * Math.pow(M - 1, m - n) / Math.pow(M, m)\r\n}\r\n\r\n// Given a list of substat (in that order), calculate the probability that filler rolls will have all `required` substats in any order\r\nfunction calculatePFillerRolls(mainStat: MainStatKey, substats: ISubstat[], required: Set<SubstatKey>) {\r\n  // Instead of picking substats in a particular order [critDMG_, atk_, ...],\r\n  // We pick substat weights first [3, 4, 3, ...], then assign proper substats\r\n  // that corresponds to that weight: 3 => critDMG_ | critRate_ ; 4 => atk_, etc.\r\n  // This reduces the search space significantly (5040 substat sequences => 71 weight sequences).\r\n\r\n  const mainStatRatio = fWeight[mainStat] ?? 0\r\n  let pFillerRolls = 0 // Pr[ filler rolls include all `required` substats, Substats are in the same order as `substats` ]\r\n\r\n  const numUnusedSubstats = { 3: 2, 4: 5, 6: 3 } // # of substat not used by main stat or substats\r\n  let pSuffixFillerSeq: any = pFillerSeq[mainStatRatio] // Suffix of `pFillerSeq` that excludes the `substats` portion\r\n  for (const { key } of substats) {\r\n    if (key) {\r\n      const ratio = fWeight[key]\r\n      pSuffixFillerSeq = pSuffixFillerSeq[ratio]\r\n      numUnusedSubstats[ratio] -= 1\r\n    }\r\n  }\r\n  if (mainStatRatio) numUnusedSubstats[mainStatRatio] -= 1\r\n\r\n  const requiredCount = { 3: 0, 4: 0, 6: 0 }\r\n  for (const key of required) requiredCount[fWeight[key]] += 1\r\n\r\n  let total = 0\r\n  crawlObject(pSuffixFillerSeq, [], obj => typeof obj === \"number\", (prob: number, path: string[]) => {\r\n    total += prob\r\n    const currentCount = { 3: 0, 4: 0, 6: 0 }\r\n    for (const key of path) currentCount[key] += 1\r\n\r\n    let sum = prob\r\n    for (const i of allWeights) {\r\n      const current = currentCount[i], required = requiredCount[i]\r\n      if (current < required) return\r\n      sum *= cnr[current][required]\r\n    }\r\n\r\n    pFillerRolls += sum\r\n  })\r\n\r\n  for (const i of allWeights)\r\n    pFillerRolls /= cnr[numUnusedSubstats[i]][requiredCount[i]]\r\n  return pFillerRolls / total\r\n}\r\n\r\nexport { probability }\r\n","import SqBadge from '../Components/SqBadge';\r\nimport { clamp } from '../Util/Util';\r\n\r\nexport default function PercentBadge({ value, valid }: Data) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`roll${clamp(Math.floor(value * 0.05) + 1, 1, 6)}`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"error\"\r\n  return <SqBadge color={badgeColor} >{text}</SqBadge>\r\n}\r\n\r\ntype Data = {\r\n  valid: boolean,\r\n  value: number | string,\r\n}\r\n","import { Button, ButtonProps, styled } from \"@mui/material\";\r\n\r\nconst DisabledButton = styled(Button)(({ theme }) => ({\r\n  \"&.Mui-disabled\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.text.secondary,\r\n  }\r\n}))\r\n\r\nexport default function TextButton({ children, disabled, ...props }: ButtonProps) {\r\n  return <DisabledButton {...props} disabled  >\r\n    {children}\r\n  </DisabledButton>\r\n}\r\n","import { Replay } from \"@mui/icons-material\"\r\nimport { Button, ButtonGroup, ButtonGroupProps, styled } from \"@mui/material\"\r\nimport { ReactNode } from \"react\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\r\nimport TextButton from \"../Components/TextButton\"\r\n\r\ntype StatInputInput = ButtonGroupProps & {\r\n  name: Displayable,\r\n  children?: ReactNode,\r\n  value: number,\r\n  placeholder?: string,\r\n  defaultValue?: number,\r\n  onValueChange: (newValue: number | undefined) => void,\r\n  percent?: boolean,\r\n  disabled?: boolean,\r\n  onReset?: () => void\r\n}\r\nconst FlexButtonGroup = styled(ButtonGroup)({\r\n  display: \"flex\"\r\n})\r\n\r\nexport default function StatInput({ name, children, value, placeholder, defaultValue = 0, onValueChange, percent = false, disabled = false, onReset, ...restProps }: StatInputInput) {\r\n\r\n  return <FlexButtonGroup {...restProps} >\r\n    {children}\r\n    <TextButton sx={{ whiteSpace: \"nowrap\" }} >\r\n      {name}\r\n    </TextButton>\r\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: 30, flexGrow: 1 }} >\r\n      <CustomNumberInput\r\n        sx={{ px: 1 }}\r\n        inputProps={{\r\n          sx: { textAlign: \"right\" }\r\n        }}\r\n        float={percent}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onValueChange}\r\n        disabled={disabled}\r\n        endAdornment={percent ? \"%\" : undefined}\r\n      />\r\n    </CustomNumberInputButtonGroupWrapper>\r\n    <Button onClick={() => onReset ? onReset() : onValueChange(defaultValue)} disabled={disabled || value === defaultValue} >\r\n      <Replay />\r\n    </Button>\r\n  </FlexButtonGroup>\r\n}","import { Box, CardActionArea, CardContent, Divider, Grid, Typography } from \"@mui/material\"\r\nimport { useEffect, useState } from \"react\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { allWeaponKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\r\nimport WeaponSheet from \"../../Weapon/WeaponSheet\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport CardLight from \"../Card/CardLight\"\r\nimport CloseButton from \"../CloseButton\"\r\nimport ImgIcon from \"../Image/ImgIcon\"\r\nimport ModalWrapper from \"../ModalWrapper\"\r\nimport { Stars } from \"../StarDisplay\"\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\r\n\r\ntype WeaponSelectionModalProps = {\r\n  show: boolean,\r\n  onHide: () => void,\r\n  onSelect: (wKey: WeaponKey) => void,\r\n  filter?: (sheet: WeaponSheet) => boolean,\r\n  weaponFilter?: WeaponTypeKey,\r\n}\r\n\r\nexport default function WeaponSelectionModal({ show, onHide, onSelect, filter = () => true, weaponFilter: propWeaponFilter }: WeaponSelectionModalProps) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey | \"\">(propWeaponFilter ?? \"\")\r\n\r\n  useEffect(() => propWeaponFilter && setWeaponfilter(propWeaponFilter), [propWeaponFilter])\r\n\r\n  const weaponIdList = !weaponSheets ? [] : [...new Set(allWeaponKeys)].filter(wKey => filter(weaponSheets[wKey]))\r\n    .filter(wKey => {\r\n      if (weaponFilter && weaponFilter !== weaponSheets?.[wKey]?.weaponType) return false\r\n      return true\r\n    })\r\n    .sort((a, b) => (weaponSheets?.[b]?.rarity ?? 0) - (weaponSheets?.[a]?.rarity ?? 0))\r\n\r\n  if (!weaponSheets) return null\r\n\r\n  return <ModalWrapper open={show} onClose={onHide}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container>\r\n          <Grid item flexGrow={1}>\r\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!propWeaponFilter} size=\"small\" />\r\n          </Grid >\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid >\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {weaponIdList.map(weaponKey => {\r\n          const weaponSheet = weaponSheets[weaponKey]\r\n          return <Grid item key={weaponKey} lg={3} md={4}>\r\n            <CardLight sx={{ height: \"100%\" }} >\r\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\r\n                <Box component=\"img\" src={weaponSheet.img} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\r\n                <Box sx={{ flexGrow: 1, px: 1 }}>\r\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\r\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <Stars stars={weaponSheet.rarity} colored /></Typography>\r\n                </Box>\r\n              </CardActionArea>\r\n            </CardLight>\r\n          </Grid>\r\n        })}\r\n      </Grid></CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <CloseButton large onClick={onHide} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Lock, LockOpen } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, CardHeader, Grid, IconButton, Skeleton, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from '../Components/Character/CharacterDropdownButton'\r\nimport LocationName from \"../Components/Character/LocationName\"\r\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport StatIcon from \"../Components/StatIcon\"\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport useWeapon from \"../ReactHooks/useWeapon\"\r\nimport Stat from \"../Stat\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\n\r\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean }\r\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false }: WeaponCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const databaseWeapon = useWeapon(weaponId)\r\n  const weapon = databaseWeapon\r\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => onClick?.(weaponId)} sx={{ height: \"100%\" }}>{children}</CardActionArea>,\r\n    [onClick, weaponId],\r\n  )\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => database.setWeaponLocation(weaponId, charKey), [database, weaponId],)\r\n  if (!weapon || !weaponSheet) return null;\r\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\r\n\r\n\r\n  const weaponTypeKey = weaponSheet.weaponType\r\n  const weaponMainVal = weaponSheet.getMainStatValue(level, ascension).toFixed(Stat.fixedUnit(\"atk\"))\r\n  const weaponSubKey = weaponSheet.getSubStatKey()\r\n  const weaponSubVal = weaponSheet.getSubStatValue(level, ascension).toFixed(Stat.fixedUnit(weaponSubKey))\r\n  const weaponPassiveName = weaponSheet?.passiveName\r\n  const statMap = [[\"weaponATK\", weaponMainVal]]\r\n  weaponPassiveName && statMap.push([weaponSubKey, weaponSubVal])\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\r\n    <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\r\n      <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n        <div className={`grad-${weaponSheet.rarity}star`} >\r\n          <CardHeader title={weaponSheet.name} avatar={<ImgIcon sx={{ fontSize: \"2em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />} titleTypographyProps={{ variant: \"h6\" }}\r\n            action={!onClick && <IconButton color=\"primary\" onClick={() => database.updateWeapon({ lock: !lock }, id)}>\r\n              {lock ? <Lock /> : <LockOpen />}\r\n            </IconButton>} />\r\n          <Grid container sx={{ flexWrap: \"nowrap\", pl: 2 }}>\r\n            <Grid item flexGrow={1}>\r\n              <Typography component=\"span\" variant=\"h4\">Lv. {level}</Typography>\r\n              <Typography component=\"span\" variant=\"h4\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n              <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\r\n              <Typography><Stars stars={weaponSheet.rarity} colored /></Typography>\r\n            </Grid>\r\n            {/* use flex-end here to align the image to the bottom. */}\r\n            <Grid item container maxWidth=\"40%\" alignContent=\"flex-end\" sx={{ mt: -3 }}>\r\n              <Box component=\"img\" src={img} width=\"100%\" height=\"auto\" />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <CardContent>\r\n          {statMap.map(([statKey, statVal]) => {\r\n            let unit = Stat.getStatUnit(statKey)\r\n            return <Box key={statKey} sx={{ display: \"flex\" }}>\r\n              <Typography flexGrow={1}>{StatIcon[statKey]} {Stat.getStatName(statKey)}</Typography>\r\n              <Typography>{statVal + unit}</Typography>\r\n            </Box>\r\n          })}\r\n        </CardContent>\r\n        {/* grow to fill the 100% heigh */}\r\n        <Box flexGrow={1} />\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container sx={{ flexWrap: \"nowrap\" }} >\r\n            <Grid item xs=\"auto\" flexShrink={1}>\r\n              {canEquip ? <CharacterDropdownButton size=\"small\" noUnselect inventory value={location} onChange={equipOnChar} filter={filter} /> : <LocationName location={location} />}\r\n            </Grid>\r\n            <Grid item flexGrow={1} sx={{ mr: 1 }} />\r\n            <Grid item xs=\"auto\">\r\n              <ButtonGroup sx={{ height: \"100%\" }}>\r\n                {!!onEdit && <Button color=\"info\" size=\"small\" onClick={() => onEdit(id)} >\r\n                  <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n                </Button>}\r\n                {!!onDelete && <Button color=\"error\" size=\"small\" onClick={() => onDelete(id)} disabled={!!location || lock} >\r\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n                </Button>}\r\n              </ButtonGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n\r\n      </CardLight>\r\n    </ConditionalWrapper>\r\n  </Suspense>\r\n}","import { faBan, faChartLine, faEdit, faInfoCircle, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Lock, LockOpen } from '@mui/icons-material';\r\nimport { Box, Button, ButtonGroup, CardActions, CardContent, CardMedia, Chip, Grid, IconButton, Skeleton, Tooltip, Typography } from '@mui/material';\r\nimport React, { Suspense, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport BootstrapTooltip from '../Components/BootstrapTooltip';\r\nimport CardLight from '../Components/Card/CardLight';\r\nimport CharacterDropdownButton from '../Components/Character/CharacterDropdownButton';\r\nimport LocationName from '../Components/Character/LocationName';\r\nimport ColorText from '../Components/ColoredText';\r\nimport SqBadge from '../Components/SqBadge';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { database as localDatabase, DatabaseContext } from '../Database/Database';\r\nimport useArtifact from '../ReactHooks/useArtifact';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport Stat from '../Stat';\r\nimport { allSubstats, ICachedArtifact, ICachedSubstat, SubstatKey } from '../Types/artifact';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { valueStringWithUnit } from '../Util/UIUtil';\r\nimport { clamp } from '../Util/Util';\r\nimport Artifact from './Artifact';\r\nimport { ArtifactSheet } from './ArtifactSheet';\r\nimport SlotNameWithIcon from './Component/SlotNameWIthIcon';\r\nimport PercentBadge from './PercentBadge';\r\nimport { probability } from './RollProbability';\r\n\r\ntype Data = {\r\n  artifactId?: string,\r\n  artifactObj?: ICachedArtifact,\r\n  onEdit?: (string) => void,\r\n  onDelete?: (string) => void, mainStatAssumptionLevel?: number,\r\n  effFilter?: Set<SubstatKey>,\r\n  probabilityFilter?: Dict<SubstatKey, number>\r\n}\r\nconst allSubstatFilter = new Set(allSubstats)\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0, effFilter = allSubstatFilter, probabilityFilter }: Data): JSX.Element | null {\r\n  const { t } = useTranslation([\"artifact\"]);\r\n  const database = useContext(DatabaseContext)\r\n  const databaseArtifact = useArtifact(artifactId)\r\n  const sheet = usePromise(ArtifactSheet.get((artifactObj ?? databaseArtifact)?.setKey), [artifactObj, databaseArtifact])\r\n  const equipOnChar = (charKey: CharacterKey | \"\") => database.setArtLocation(artifactId!, charKey)\r\n\r\n  const editable = !artifactObj && database === localDatabase // dont allow edit for flex artifacts\r\n  const art = artifactObj ?? databaseArtifact\r\n  if (!art) return null\r\n\r\n  const { id, lock, slotKey, rarity, level, mainStatKey, substats, exclude, location = \"\" } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\r\n  const levelVariant = \"roll\" + (Math.floor(Math.max(level, 0) / 4) + 1)\r\n  const mainStatVal = <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{valueStringWithUnit(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, Stat.getStatUnit(mainStatKey))}</ColorText>\r\n  const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, effFilter)\r\n  const artifactValid = maxEfficiency !== 0\r\n  const slotName = sheet?.getSlotName(slotKey) || \"Unknown Piece Name\"\r\n  const slotDesc = sheet?.getSlotDesc(slotKey)\r\n  const slotDescTooltip = slotDesc && <BootstrapTooltip placement=\"top\" title={<Typography>{slotDesc}</Typography>}>\r\n    <span><FontAwesomeIcon icon={faInfoCircle} /></span>\r\n  </BootstrapTooltip>\r\n  const setEffects = sheet?.setEffects\r\n  const setDescTooltip = sheet && setEffects && <BootstrapTooltip placement=\"top\" title={\r\n    <span>\r\n      {Object.keys(setEffects).map(setNumKey => <span key={setNumKey}>\r\n        <Typography variant=\"h6\"><SqBadge color=\"success\">{t(`setEffectNum`, { setNum: setNumKey })}</SqBadge></Typography>\r\n        <Typography>{sheet.setEffectDesc(setNumKey as any)}</Typography>\r\n      </span>)}\r\n    </span>\r\n  }>\r\n    <span><FontAwesomeIcon icon={faInfoCircle} /></span>\r\n  </BootstrapTooltip>\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n      <CardContent className={`grad-${rarity}star`} sx={{ pt: 1, pb: 0, pr: 0 }}>\r\n        <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", pr: 1 }}>\r\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={levelVariant as any} />\r\n          <Typography sx={{ pl: 1, flexGrow: 1 }}>{slotName} {slotDescTooltip}</Typography>\r\n          <IconButton color=\"primary\" disabled={!editable} onClick={() => database.updateArt({ lock: !lock }, id)}>\r\n            {lock ? <Lock /> : <LockOpen />}\r\n          </IconButton>\r\n        </Box>\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item flexGrow={1}>\r\n            <Typography color=\"text.secondary\" variant=\"body2\">\r\n              <SlotNameWithIcon slotKey={slotKey} />\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              {Stat.getStatName(mainStatKey)}\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <strong>{mainStatVal}</strong>\r\n            </Typography>\r\n            <Stars stars={rarity} colored />\r\n            {/* {process.env.NODE_ENV === \"development\" && <Typography color=\"common.black\">{id || `\"\"`} </Typography>} */}\r\n          </Grid>\r\n          <Grid item maxWidth=\"40%\" sx={{ mt: -3, mb: -1, pl: -2 }} alignSelf=\"flex-end\">\r\n            <CardMedia\r\n              component=\"img\"\r\n              image={sheet?.slotIcons[slotKey] ?? \"\"}\r\n              width=\"100%\"\r\n              height=\"auto\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardContent sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\", pt: 1, pb: 0 }}>\r\n        {substats.map((stat: ICachedSubstat, i) => {\r\n          if (!stat.value) return null\r\n          const numRolls = stat.rolls?.length ?? 0\r\n          const rollColor = `roll${clamp(numRolls, 1, 6)}`\r\n          const efficiency = stat.efficiency ?? 0\r\n          const effOpacity = 0.3 + (efficiency / 100) * 0.7\r\n          const statName = Stat.getStatName(stat.key)\r\n          return (<Box key={i} sx={{ display: \"flex\" }}>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n              <SqBadge color={(numRolls ? rollColor : \"error\") as any} sx={{ mr: 1 }}><strong>{numRolls ? numRolls : \"?\"}</strong></SqBadge>\r\n              <Typography color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">{statName}{`+${valueStringWithUnit(stat.value, Stat.getStatUnit(stat.key))}`}</Typography>\r\n            </Box>\r\n            <Typography sx={{ opacity: effOpacity }}>{stat.key && effFilter.has(stat.key) ? valueStringWithUnit(efficiency, \"eff\") : \"-\"}</Typography>\r\n          </Box>)\r\n        })}\r\n        <Box sx={{ display: \"flex\", my: 1 }}>\r\n          <Typography color=\"text.secondary\" component=\"span\" variant=\"caption\" sx={{ flexGrow: 1 }}>{t`editor.curSubEff`}</Typography>\r\n          <PercentBadge value={currentEfficiency} valid={artifactValid} />\r\n        </Box>\r\n        {currentEfficiency !== maxEfficiency && <Box sx={{ display: \"flex\", mb: 1 }}>\r\n          <Typography color=\"text.secondary\" component=\"span\" variant=\"caption\" sx={{ flexGrow: 1 }}>{t`editor.maxSubEff`}</Typography>\r\n          <PercentBadge value={maxEfficiency} valid={artifactValid} />\r\n        </Box>}\r\n        <Box flexGrow={1} />\r\n        {probabilityFilter && <strong>Probability: {(probability(art, probabilityFilter) * 100).toFixed(2)}%</strong>}\r\n        <Typography color=\"success.main\">{sheet?.name ?? \"Artifact Set\"} {setDescTooltip}</Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item xs=\"auto\" flexShrink={1}>\r\n            {editable ?\r\n              <CharacterDropdownButton size=\"small\" inventory value={location} onChange={equipOnChar} /> : <LocationName location={location} />}\r\n          </Grid>\r\n          <Grid item flexGrow={1} sx={{ mr: 1 }} />\r\n          {editable && <Grid item xs=\"auto\">\r\n            <ButtonGroup sx={{ height: \"100%\" }}>\r\n              {!!onEdit && <Button color=\"info\" onClick={() => onEdit(id)} size=\"small\">\r\n                <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n              </Button>}\r\n              <Tooltip title={<Typography>{t`excludeArtifactTip`}</Typography>} placement=\"top\" arrow>\r\n                <Button onClick={() => database.updateArt({ exclude: !exclude }, id)} color={exclude ? \"error\" : \"success\"} size=\"small\">\r\n                  <FontAwesomeIcon icon={exclude ? faBan : faChartLine} className=\"fa-fw\" />\r\n                </Button>\r\n              </Tooltip>\r\n              {!!onDelete && <Button color=\"error\" size=\"small\" onClick={() => onDelete(id)} disabled={lock}>\r\n                <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n              </Button>}\r\n            </ButtonGroup>\r\n          </Grid>}\r\n        </Grid>\r\n      </CardActions>\r\n    </CardLight >\r\n  </Suspense>\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\n\r\nexport default function useArtifact(artifactID: string | undefined = \"\") {\r\n  const database = useContext(DatabaseContext)\r\n  const [artifact, setArtifact] = useState(database._getArt(artifactID))\r\n  useEffect(() => setArtifact(database._getArt(artifactID)), [database, artifactID])\r\n  useEffect(() =>\r\n    artifactID ? database.followArt(artifactID, setArtifact) : undefined,\r\n    [artifactID, setArtifact, database])\r\n  return artifact\r\n}","import { Box, CardContent, Typography } from \"@mui/material\"\r\nimport CardDark from \"../../Components/Card/CardDark\"\r\nimport DocumentDisplay from \"../../Components/DocumentDisplay\"\r\nimport FieldDisplay, { FieldDisplayList } from \"../../Components/FieldDisplay\"\r\nimport SqBadge from \"../../Components/SqBadge\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\r\nimport { ICalculatedStats } from \"../../Types/stats\"\r\nimport statsToFields from \"../../Util/FieldUtil\"\r\nimport { ArtifactSheet } from \"../ArtifactSheet\"\r\n\r\ntype Data = {\r\n  setKey: ArtifactSetKey,\r\n  setNumKey: SetNum,\r\n  newBuild?: ICalculatedStats,\r\n  equippedBuild?: ICalculatedStats,\r\n  skipConditionalEquipmentCheck?: boolean\r\n}\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, equippedBuild, newBuild, skipConditionalEquipmentCheck }: Data) {\r\n  const sheet = usePromise(ArtifactSheet.get(setKey), [setKey])\r\n  if (!sheet) return null\r\n\r\n  const stats = newBuild ?? equippedBuild!\r\n  const setEffectText = sheet.setEffectDesc(setNumKey)\r\n  const setStats = sheet.setNumStats(setNumKey, stats)\r\n  const setStatsFields = statsToFields(setStats, stats)\r\n  const document = sheet.setEffectDocument(setNumKey)\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    <CardDark>\r\n      <CardContent>\r\n        <Typography><SqBadge color=\"success\">{setNumKey}-Set</SqBadge> {setEffectText}</Typography>\r\n      </CardContent>\r\n      <FieldDisplayList sx={{ m: 0 }}>\r\n        {setStatsFields.map((field, i) => <FieldDisplay key={i} field={field} />)}\r\n      </FieldDisplayList>\r\n    </CardDark>\r\n    {document ? <DocumentDisplay sections={document} characterKey={stats.characterKey} skipConditionalEquipmentCheck={skipConditionalEquipmentCheck} /> : null}\r\n  </Box>\r\n}\r\n","import { Masonry } from \"@mui/lab\"\r\nimport { CardContent, CardHeader, Divider } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport CardDark from \"../../Components/Card/CardDark\"\r\nimport ImgIcon from \"../../Components/Image/ImgIcon\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { Sheets } from \"../../ReactHooks/useSheets\"\r\nimport { ICachedCharacter } from \"../../Types/character\"\r\nimport { ICalculatedStats } from \"../../Types/stats\"\r\nimport { getFormulaTargetsDisplayHeading } from \"../CharacterUtil\"\r\n\r\ntype StatDisplayComponentProps = {\r\n  sheets: Sheets\r\n  character: ICachedCharacter\r\n  statsDisplayKeys: any,\r\n  equippedBuild?: ICalculatedStats\r\n  newBuild?: ICalculatedStats\r\n}\r\n\r\nexport default function StatDisplayComponent({ sheets, character, equippedBuild, newBuild, statsDisplayKeys }: StatDisplayComponentProps) {\r\n  const build = (newBuild ? newBuild : equippedBuild) as ICalculatedStats\r\n  return <Box sx={{ mr: -1, mb: -1 }}><Masonry columns={{ xs: 1, sm: 2, md: 3 }} spacing={1}>{Object.entries(statsDisplayKeys).map(([sectionKey, sectionValues]: any) => {\r\n    const header = getFormulaTargetsDisplayHeading(sectionKey, sheets, build)\r\n    return <CardDark key={sectionKey}>\r\n      <CardHeader avatar={header.icon && <ImgIcon size={2} sx={{ m: -1 }} src={header.icon} />} title={header.title} titleTypographyProps={{ variant: \"subtitle1\" }} />\r\n      <Divider />\r\n      <CardContent>\r\n        {sectionValues.map(statKey => <StatDisplay key={JSON.stringify(statKey)} {...{ character, equippedBuild, newBuild, statKey }} />)}\r\n      </CardContent>\r\n    </CardDark>\r\n  })}</Masonry ></Box>\r\n}","import { faCheckSquare, faSquare } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { ExpandMore } from \"@mui/icons-material\";\r\nimport { Button, CardContent, Chip, Collapse, Grid, Typography } from \"@mui/material\";\r\nimport { useCallback, useState } from 'react';\r\nimport Character from \"../Character/Character\";\r\nimport StatInput from \"../Character/StatInput\";\r\nimport useCharacterReducer from \"../ReactHooks/useCharacterReducer\";\r\nimport Stat from \"../Stat\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { allElementsWithPhy } from \"../Types/consts\";\r\nimport { characterBaseStats } from \"../Util/StatUtil\";\r\nimport CardLight from \"./Card/CardLight\";\r\nimport ColorText from \"./ColoredText\";\r\nimport ExpandButton from \"./ExpandButton\";\r\nimport { uncoloredEleIcons } from \"./StatIcon\";\r\n\r\nexport function EnemyExpandCard({ character }) {\r\n  const [expanded, setexpanded] = useState(false)\r\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container>\r\n        <Grid item flexGrow={1} alignItems=\"center\">\r\n          <Grid container spacing={1}>\r\n            <Grid item>\r\n              <Chip size=\"small\" color=\"success\" label={<span>{Stat.getStatName(\"enemyLevel\")} <strong>{Character.getStatValueWithBonus(character, \"enemyLevel\")}</strong></span>} />\r\n            </Grid>\r\n            {allElementsWithPhy.map(element => <Grid item key={element}>\r\n              <Typography key={element} ><EnemyResText element={element} character={character} /></Typography>\r\n            </Grid>)}\r\n            <Grid item>\r\n              <Typography>DEF Reduction {Character.getStatValueWithBonus(character, \"enemyDEFRed_\")}%</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <ExpandButton\r\n            expand={expanded}\r\n            onClick={toggle}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n            size=\"small\"\r\n            sx={{ p: 0 }}\r\n          >\r\n            <ExpandMore />\r\n          </ExpandButton>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <EnemyEditor character={character} />\r\n      </CardContent>\r\n    </Collapse>\r\n  </CardLight>\r\n}\r\n\r\nexport function EnemyResText({ character, element }: { character: ICachedCharacter, element: string }) {\r\n  const immune = !!Character.getStatValueWithBonus(character, `${element}_enemyImmunity`)\r\n  const resKey = `${element}_enemyRes_`\r\n  const content = immune ? <span >{uncoloredEleIcons[element]} IMMUNE</span> :\r\n    <span >{uncoloredEleIcons[element]}RES <strong>{Character.getStatValueWithBonus(character, resKey)}%</strong></span>\r\n  return <ColorText color={element}>{content}</ColorText>\r\n}\r\n\r\n\r\nexport function EnemyEditor({ character, character: { key: characterKey, }, bsProps = { xs: 12, md: 6 } }: { character: ICachedCharacter, bsProps?: object }) {\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const charBaseStats = characterBaseStats(character)\r\n  return <Grid container spacing={1}>\r\n    <Grid item {...bsProps}>\r\n      <Button fullWidth sx={{ height: \"100%\" }} size=\"small\" component=\"a\" color=\"warning\" href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n        To get the specific resistance values of enemies, please visit the wiki.\r\n      </Button>\r\n    </Grid>\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>Enemy Level</b>}\r\n        value={Character.getStatValueWithBonus(character, \"enemyLevel\")}\r\n        placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n        defaultValue={charBaseStats.enemyLevel}\r\n        onValueChange={value => characterDispatch({ type: \"editStats\", statKey: \"enemyLevel\", value })}\r\n      />\r\n    </Grid>\r\n    {allElementsWithPhy.map(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      let immunityStatKey = `${eleKey}_enemyImmunity`\r\n      let elementImmunity = Character.getStatValueWithBonus(character, immunityStatKey)\r\n      return <Grid item key={eleKey} {...bsProps}>\r\n        <StatInput\r\n          sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n          name={<b>{Stat.getStatName(statKey)}</b>}\r\n          value={Character.getStatValueWithBonus(character, statKey)}\r\n          placeholder={Stat.getStatNameRaw(statKey)}\r\n          defaultValue={charBaseStats[statKey]}\r\n          onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\r\n          disabled={elementImmunity}\r\n          percent\r\n        >\r\n          <Button color={eleKey} onClick={() => characterDispatch({ type: \"editStats\", statKey: immunityStatKey, value: !elementImmunity })} >\r\n            <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n          </Button>\r\n        </StatInput>\r\n      </Grid>\r\n    })}\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>{Stat.getStatName(\"enemyDEFRed_\")}</b>}\r\n        value={Character.getStatValueWithBonus(character, \"enemyDEFRed_\")}\r\n        placeholder={Stat.getStatNameRaw(\"enemyDEFRed_\")}\r\n        defaultValue={charBaseStats[\"enemyDEFRed_\"]}\r\n        onValueChange={value => characterDispatch({ type: \"editStats\", statKey: \"enemyDEFRed_\", value })}\r\n        percent\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12}>\r\n      <small>Note: Genshin Impact halves resistance shred values below 0%. For the sake of calculations enter the RAW value and GO will do the rest. (e.g. 10% - 20% = -10%)</small>\r\n    </Grid>\r\n  </Grid>\r\n}","import { CardContent, Grid, MenuItem, ToggleButton, ToggleButtonGroupProps } from \"@mui/material\";\r\nimport { useContext } from 'react';\r\nimport { buildContext } from \"../Build/Build\";\r\nimport CharacterSheet from \"../Character/CharacterSheet\";\r\nimport useCharacterReducer from \"../ReactHooks/useCharacterReducer\";\r\nimport usePromise from \"../ReactHooks/usePromise\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { ICalculatedStats } from \"../Types/stats\";\r\nimport CardLight from \"./Card/CardLight\";\r\nimport ColorText from \"./ColoredText\";\r\nimport DropdownButton, { DropdownButtonProps } from \"./DropdownMenu/DropdownButton\";\r\nimport SolidToggleButtonGroup from \"./SolidToggleButtonGroup\";\r\nimport StatIcon, { uncoloredEleIcons } from \"./StatIcon\";\r\nconst infusionVals = {\r\n  \"\": <span>No External Infusion</span>,\r\n  \"pyro\": <span >{uncoloredEleIcons.pyro} Pyro Infusion</span>,\r\n  \"cryo\": <span >{uncoloredEleIcons.cryo} Cryo Infusion</span>,\r\n}\r\ntype InfusionAuraDropdownProps = Omit<DropdownButtonProps, \"title\" | \"onChange\" | \"children\"> & {\r\n  character: ICachedCharacter,\r\n}\r\nexport function InfusionAuraDropdown({ character: { infusionAura = \"\", key: characterKey }, ...props }: InfusionAuraDropdownProps) {\r\n  const characterSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  if (!characterSheet?.isMelee()) return null\r\n  return <DropdownButton title={infusionVals[infusionAura]} color={infusionAura || \"secondary\"} {...props}>\r\n    {Object.entries(infusionVals).map(([key, text]) =>\r\n      <MenuItem key={key} sx={key ? { color: `${key}.main` } : undefined}\r\n        selected={key === infusionAura} disabled={key === infusionAura}\r\n        onClick={() => characterDispatch({ infusionAura: key })}>{text}</MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n\r\ntype ReactionToggleProps = Omit<ToggleButtonGroupProps, \"color\"> & {\r\n  character: ICachedCharacter,\r\n  build: ICalculatedStats,\r\n}\r\nexport function ReactionToggle({ character: { reactionMode = \"\", infusionAura, key: characterKey }, build, ...props }: ReactionToggleProps) {\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  if (!build) return null\r\n  const charEleKey = build.characterEle\r\n  if (![\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && ![\"pyro\", \"hydro\", \"cryo\"].includes(infusionAura)) return null\r\n  return <SolidToggleButtonGroup exclusive baseColor=\"secondary\"\r\n    value={reactionMode} onChange={(e, reactionMode) => characterDispatch({ reactionMode })} {...props}>\r\n    <ToggleButton value=\"\" >No Reactions</ToggleButton >\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value=\"pyro_vaporize\"  >\r\n      <ColorText color=\"vaporize\">Vaporize(Pyro){StatIcon.hydro}+{StatIcon.pyro}</ColorText>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"pyro\" || infusionAura === \"pyro\") && <ToggleButton value={\"pyro_melt\"}  >\r\n      <ColorText color=\"melt\">Melt(Pyro) {StatIcon.cryo}+{StatIcon.pyro}</ColorText>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"hydro\" || infusionAura === \"hydro\") && <ToggleButton value={\"hydro_vaporize\"}  >\r\n      <ColorText color=\"vaporize\">Vaporize(Hydro) {StatIcon.pyro}+{StatIcon.hydro}</ColorText>\r\n    </ToggleButton >}\r\n    {(charEleKey === \"cryo\" || infusionAura === \"cryo\") && <ToggleButton value={\"cryo_melt\"}  >\r\n      <ColorText color=\"melt\">Melt(Cryo) {StatIcon.pyro}+{StatIcon.cryo}</ColorText>\r\n    </ToggleButton >}\r\n  </SolidToggleButtonGroup>\r\n}\r\ntype HitModeToggleProps = Omit<ToggleButtonGroupProps, \"color\"> & {\r\n  character: ICachedCharacter\r\n}\r\nexport function HitModeToggle({ character: { hitMode = \"avgHit\", key: characterKey }, ...props }: HitModeToggleProps) {\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  return <SolidToggleButtonGroup exclusive baseColor=\"secondary\"\r\n    value={hitMode} onChange={(e, hitMode) => characterDispatch({ hitMode })} {...props} >\r\n    <ToggleButton value=\"avgHit\">Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\">Non Crit DMG</ToggleButton>\r\n    <ToggleButton value=\"critHit\">Crit Hit DMG</ToggleButton>\r\n  </SolidToggleButtonGroup>\r\n}\r\n\r\n\r\nexport function DamageOptionsCard({ character }: { character: ICachedCharacter }) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild!\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container spacing={1}>\r\n        <Grid item><HitModeToggle character={character} size=\"small\" /></Grid>\r\n        <Grid item><InfusionAuraDropdown character={character} /></Grid>\r\n        <Grid item><ReactionToggle character={character} build={build} size=\"small\" /></Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n\r\n","import { CardContent, Typography } from \"@mui/material\"\r\nimport React from \"react\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport FieldDisplay, { FieldDisplayList } from \"../Components/FieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport statsToFields from \"../Util/FieldUtil\"\r\nexport default function WeaponStatsCard({ title, statsVals = {}, stats }: { title: Displayable, statsVals?: object, stats: ICalculatedStats }) {\r\n  if ((Object.keys(statsVals) as string[]).filter(s => s !== \"modifiers\").length === 0) return null\r\n  const fields = statsToFields(statsVals, stats)\r\n  return <CardDark >\r\n    <CardContent>\r\n      <Typography>{title}</Typography>\r\n    </CardContent>\r\n    <FieldDisplayList>\r\n      {fields.map((field, i) => <FieldDisplay key={i} field={field} />)}\r\n    </FieldDisplayList>\r\n  </CardDark>\r\n}","import { Lock, LockOpen, SwapHoriz } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, MenuItem, Typography } from \"@mui/material\"\r\nimport { useCallback, useContext, useState } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport CharacterSheet from \"../Character/CharacterSheet\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from \"../Components/Character/CharacterDropdownButton\"\r\nimport CloseButton from \"../Components/CloseButton\"\r\nimport ColorText from \"../Components/ColoredText\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\r\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\r\nimport DropdownButton from \"../Components/DropdownMenu/DropdownButton\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../Components/ModalWrapper\"\r\nimport SqBadge from \"../Components/SqBadge\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport WeaponSelectionModal from \"../Components/Weapon/WeaponSelectionModal\"\r\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from \"../Data/LevelData\"\r\nimport { database as localDatabase, DatabaseContext } from \"../Database/Database\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport useWeapon from \"../ReactHooks/useWeapon\"\r\nimport { ICachedCharacter } from \"../Types/character\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { clamp } from \"../Util/Util\"\r\nimport WeaponCard from \"./WeaponCard\"\r\nimport WeaponSheet from \"./WeaponSheet\"\r\nimport WeaponStatsCard from \"./WeaponStatsCard\"\r\n\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  weaponId: string\r\n  charData?: {\r\n    character: ICachedCharacter,\r\n    characterSheet: CharacterSheet,\r\n    equippedBuild?: ICalculatedStats\r\n    newBuild?: ICalculatedStats\r\n    characterDispatch: (any) => void\r\n  }\r\n  footer?: boolean\r\n  onClose?: () => void\r\n}\r\nexport default function WeaponDisplayCard({\r\n  weaponId: propWeaponId,\r\n  charData,\r\n  footer = false,\r\n  onClose\r\n}: WeaponStatsEditorCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n\r\n  const buildContextObj = useContext(buildContext)\r\n  const weapon = useWeapon(propWeaponId)\r\n  const { key = \"\", level, refinement = 0, ascension = 0, lock, location = \"\", id } = weapon ?? {}\r\n  const weaponSheet = usePromise(WeaponSheet.get(key), [key])\r\n  const weaponTypeKey = weaponSheet?.weaponType\r\n\r\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\r\n    database.updateWeapon(newWeapon, propWeaponId)\r\n  }, [propWeaponId, database])\r\n\r\n  const setLevel = useCallback(level => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    weaponDispatch({ level, ascension })\r\n  }, [weaponDispatch])\r\n\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\r\n    else weaponDispatch({ ascension: lowerAscension })\r\n  }, [weaponDispatch, ascension, level])\r\n\r\n  const build = { ...(charData ? (charData.newBuild ?? charData.equippedBuild) : { weapon: { refineIndex: refinement - 1, level, ascension } }) } as any\r\n\r\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\r\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\r\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => id && database.setWeaponLocation(id, charKey), [database, id])\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n  const [showModal, setshowModal] = useState(false)\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Grid container spacing={1}>\r\n        <Grid item flexGrow={1}>\r\n          <Grid container spacing={1}>\r\n            <Grid item >\r\n              <WeaponSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} weaponFilter={initialWeaponFilter} />\r\n              <ButtonGroup>\r\n                <Button onClick={() => setshowModal(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n                <DropdownButton title={`Refinement ${refinement}`}>\r\n                  <MenuItem>Select Weapon Refinement</MenuItem>\r\n                  <Divider />\r\n                  {[...Array(5).keys()].map(key =>\r\n                    <MenuItem key={key} onClick={() => weaponDispatch({ refinement: key + 1 })} selected={refinement === (key + 1)} disabled={refinement === (key + 1)}>\r\n                      {`Refinement ${key + 1}`}\r\n                    </MenuItem>)}\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item >\r\n              <ButtonGroup sx={{ bgcolor: t => t.palette.contentLight.main }} >\r\n                <CustomNumberInputButtonGroupWrapper >\r\n                  <CustomNumberInput onChange={setLevel} value={level}\r\n                    startAdornment=\"Lvl. \"\r\n                    inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n                    sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n                  />\r\n                </CustomNumberInputButtonGroupWrapper>\r\n                <Button sx={{ pl: 1 }} disabled={!ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n                <DropdownButton title={\"Select Level\"} >\r\n                  {milestoneLevels.map(([lv, as]) => {\r\n                    const sameLevel = lv === ascensionMaxLevel[as]\r\n                    const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n                    const selected = lv === level && as === ascension\r\n                    return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n                  })}\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button color=\"error\" onClick={() => id && database.updateWeapon({ lock: !lock }, id)} startIcon={lock ? <Lock /> : <LockOpen />}>\r\n                {lock ? \"Locked\" : \"Unlocked\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!!onClose && <Grid item  >\r\n          <CloseButton onClick={onClose} />\r\n        </Grid>}\r\n        {!!charData && database === localDatabase && <Grid item >\r\n          <SwapBtn weaponTypeKey={weaponTypeKey} onChangeId={id => database.setWeaponLocation(id, charData.character.key)} />\r\n        </Grid>}\r\n      </Grid>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent >\r\n      {(() => {\r\n        if (!weaponSheet) return null\r\n        const substatKey = weaponSheet.getSubStatKey()\r\n        const weaponDisplayMainVal = weaponSheet.getMainStatValue(level, ascension)\r\n        const weaponDisplaySubVal = weaponSheet.getSubStatValue(level, ascension)\r\n        const weaponPassiveName = weaponSheet.passiveName\r\n        const weaponBonusStats = weaponSheet.stats(build)\r\n        const sections = weaponSheet.document\r\n        return <Box display=\"flex\" gap={{ xs: 1, md: 1.5, lg: 2 }} >\r\n          <Box sx={{ maxWidth: 256 }} flexShrink={1} minWidth=\"25%\">\r\n            <Box component=\"img\" src={img} className={`grad-${weaponSheet.rarity}star`} sx={{ maxWidth: 256, width: \"100%\", height: \"auto\", borderRadius: 1 }} />\r\n            <Typography><small>{weaponSheet.description}</small></Typography>\r\n          </Box>\r\n          <Box sx={{ mb: -1 }} flexGrow={1} >\r\n            <Typography variant=\"h6\" >{process.env.NODE_ENV === \"development\" && <ColorText color=\"warning\">{id || `\"\"`} </ColorText>}{weaponSheet.name} Lv. {weapon && WeaponSheet.getLevelString(weapon)} {weaponPassiveName && <SqBadge color=\"info\">Refinement {refinement}</SqBadge>}</Typography>\r\n            <Typography><Stars stars={weaponSheet.rarity} /></Typography>\r\n            <Typography variant=\"subtitle1\">{weaponPassiveName}</Typography>\r\n            <Typography gutterBottom>{weaponPassiveName && weaponSheet.passiveDescription(build)}</Typography>\r\n            {build && <buildContext.Provider value={charData ? buildContextObj : { equippedBuild: build, newBuild: undefined, compareBuild: false, setCompareBuild: undefined }}>\r\n              <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n                <WeaponStatsCard title={\"Main Stats\"} statsVals={{ atk: weaponDisplayMainVal, [substatKey]: substatKey ? weaponDisplaySubVal : undefined }} stats={build} />\r\n                <WeaponStatsCard title={\"Bonus Stats\"} statsVals={weaponBonusStats} stats={build} />\r\n              </Box>\r\n            </buildContext.Provider>}\r\n            {charData && sections ? (() => {\r\n              const { equippedBuild, newBuild } = charData\r\n              const characterKey = (newBuild ? newBuild : equippedBuild)?.characterKey as CharacterKey | undefined\r\n              return !!characterKey && < DocumentDisplay sections={sections} characterKey={characterKey} />\r\n            })() : null}\r\n          </Box>\r\n        </Box>\r\n      })()}\r\n    </CardContent>\r\n    {footer && id && <CardContent sx={{ py: 1 }}>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <CharacterDropdownButton noUnselect inventory value={location} onChange={equipOnChar} filter={filter} />\r\n        </Grid>\r\n        {!!onClose && <Grid item><CloseButton large onClick={onClose} /></Grid>}\r\n      </Grid>\r\n    </CardContent>}\r\n  </CardLight>\r\n}\r\nfunction SwapBtn({ onChangeId, weaponTypeKey }) {\r\n  const database = useContext(DatabaseContext)\r\n  const [show, setShow] = useState(false)\r\n  const open = () => setShow(true)\r\n  const close = () => setShow(false)\r\n\r\n  const clickHandler = (id) => {\r\n    onChangeId(id)\r\n    close()\r\n  }\r\n\r\n  const weaponSheets = usePromise(WeaponSheet.getAll(), [])\r\n\r\n  const weaponIdList = database.weapons.keys.filter(wKey => {\r\n    const dbWeapon = database._getWeapon(wKey)\r\n    if (!dbWeapon) return false\r\n    if (weaponTypeKey && weaponTypeKey !== weaponSheets?.[dbWeapon.key]?.weaponType) return false\r\n    return true\r\n  })\r\n\r\n\r\n  return <>\r\n    <Button color=\"info\" onClick={open} startIcon={<SwapHoriz />} >SWAP WEAPON</Button>\r\n    <ModalWrapper open={show} onClose={close} >\r\n      <CardDark>\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container>\r\n            <Grid item flexGrow={1}>\r\n              <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} Swap Weapon</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <CloseButton onClick={close} />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container spacing={1}>\r\n            {weaponIdList.map(weaponId =>\r\n              <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\r\n                <WeaponCard\r\n                  weaponId={weaponId}\r\n                  onClick={clickHandler}\r\n                />\r\n              </Grid>)}\r\n          </Grid>\r\n        </CardContent>\r\n      </CardDark>\r\n    </ModalWrapper>\r\n  </>\r\n}","import { ExpandMore } from \"@mui/icons-material\"\r\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, CardHeader, Collapse, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useMemo, useState } from \"react\"\r\nimport { buildContext } from \"../Build/Build\"\r\nimport Character from \"../Character/Character\"\r\nimport { getFormulaTargetsDisplayHeading } from \"../Character/CharacterUtil\"\r\nimport Formula from \"../Formula\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport { Sheets } from \"../ReactHooks/useSheets\"\r\nimport Stat, { FormulaDisplay } from \"../Stat\"\r\nimport { GetDependencies } from \"../StatDependency\"\r\nimport { IFieldDisplay } from \"../Types/IFieldDisplay\"\r\nimport { ICalculatedStats } from \"../Types/stats\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport CardLight from \"./Card/CardLight\"\r\nimport ColorText from \"./ColoredText\"\r\nimport ExpandButton from \"./ExpandButton\"\r\nimport ImgIcon from \"./Image/ImgIcon\"\r\n\r\nexport default function FormulaCalcCard({ sheets }: { sheets: Sheets }) {\r\n  const [expanded, setexpanded] = useState(false)\r\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <Typography>Formulas {\"&\"} Calculations</Typography>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">Expand to see every formula and all their calculations.</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <ExpandButton\r\n            expand={expanded}\r\n            onClick={toggle}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMore />\r\n          </ExpandButton>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <CalculationDisplay sheets={sheets} />\r\n      </CardContent>\r\n    </Collapse>\r\n  </CardLight>\r\n}\r\n\r\nfunction CalculationDisplay({ sheets }: { sheets: Sheets }) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  //choose which one to display stats for\r\n  const build = (newBuild ? newBuild : equippedBuild)!\r\n  const displayStatKeys = useMemo(() => Character.getDisplayStatKeys(build, sheets), [build, sheets])\r\n  if (!build || !displayStatKeys) return null\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\r\n    {Object.entries(displayStatKeys).map(([sectionKey, fields]: [string, any]) => {\r\n      const header = getFormulaTargetsDisplayHeading(sectionKey, sheets, build)\r\n      return <CardDark key={sectionKey} sx={{ mb: 1 }}>\r\n        <CardHeader avatar={header.icon && <ImgIcon size={2} sx={{ m: -1 }} src={header.icon} />} title={header.title} titleTypographyProps={{ variant: \"subtitle1\" }} />\r\n        <Divider />\r\n        <CardContent>\r\n          {fields.map((field, fieldIndex) => {\r\n            if (Array.isArray(field))\r\n              return <FormulaCalculationField key={fieldIndex} fieldKeys={field} build={build} />\r\n            else if (typeof field === \"string\") {//simple statKey field\r\n              const subFormulaKeys: any[] = Stat.getPrintableFormulaStatKeyList(GetDependencies(build, build?.modifiers, [field]), build?.modifiers).reverse()\r\n              return Boolean(subFormulaKeys.length) && <Accordion sx={{ bgcolor: \"contentLight.main\" }} key={fieldIndex}>\r\n                <AccordionSummary expandIcon={<ExpandMore />}>\r\n                  <Typography>{Stat.printStat(field, build)}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  {subFormulaKeys.map(subKey =>\r\n                    <Typography key={subKey}>{Stat.printStat(subKey, build)} = <small><FormulaDisplay statKey={subKey} stats={build} modifiers={build.modifiers} expand={false} /></small></Typography>\r\n                  )}\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            }\r\n            return null\r\n          })}\r\n        </CardContent>\r\n      </CardDark>\r\n    })}\r\n  </Suspense>\r\n}\r\n\r\nfunction FormulaCalculationField({ fieldKeys, build }: { fieldKeys: string[], build: ICalculatedStats }) {\r\n  const formula = usePromise(Formula.get(fieldKeys), [fieldKeys])\r\n  if (!formula) return null\r\n  const formulaField = (formula as any).field as IFieldDisplay\r\n  const fieldText = Character.getTalentFieldValue(formulaField, \"text\", build)\r\n  const fieldVariant = Character.getTalentFieldValue(formulaField, \"variant\", build)\r\n  const fieldFormulaText = Character.getTalentFieldValue(formulaField, \"formulaText\", build)\r\n  const fieldFixed = Character.getTalentFieldValue(formulaField, \"fixed\", build) ?? 0\r\n  const fieldUnit = Character.getTalentFieldValue(formulaField, \"unit\", build) ?? \"\"\r\n  const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(formulaField, \"formula\", build, [] as any)\r\n  if (!fieldFormula || !fieldFormulaDependency) return null\r\n  const fieldValue = fieldFormula?.(build)?.toFixed?.(fieldFixed)\r\n  const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build, build?.modifiers, fieldFormulaDependency), build?.modifiers).reverse()\r\n  return <Accordion sx={{ bgcolor: \"contentLight.main\" }}>\r\n    <AccordionSummary expandIcon={<ExpandMore />}>\r\n      <Typography><Box color={`${fieldVariant}.main`} component=\"strong\">{fieldText}</Box> <ColorText color=\"info\">{fieldValue}{fieldUnit}</ColorText></Typography>\r\n    </AccordionSummary>\r\n    <AccordionDetails>\r\n      <Typography><Box color={`${fieldVariant}.main`} component=\"strong\">{fieldText}</Box> <ColorText color=\"info\">{fieldValue}</ColorText> = <small>{fieldFormulaText}</small></Typography>\r\n      {subFormulaKeys.map(subKey =>\r\n        <Typography key={subKey}>{Stat.printStat(subKey, build)} = <small><FormulaDisplay statKey={subKey} stats={build} modifiers={build.modifiers} expand={false} /></small></Typography>\r\n      )}\r\n    </AccordionDetails>\r\n  </Accordion>\r\n}","import { Button, Card, CardContent, Divider, Grid, ToggleButton, Typography } from '@mui/material';\r\nimport { useCallback, useContext, useEffect, useMemo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport { ArtifactSheet } from '../../Artifact/ArtifactSheet';\r\nimport SetEffectDisplay from '../../Artifact/Component/SetEffectDisplay';\r\nimport { buildContext } from '../../Build/Build';\r\nimport CardLight from '../../Components/Card/CardLight';\r\nimport SolidToggleButtonGroup from '../../Components/SolidToggleButtonGroup';\r\nimport { database as localDatabase, DatabaseContext } from '../../Database/Database';\r\nimport useForceUpdate from '../../ReactHooks/useForceUpdate';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { Sheets } from '../../ReactHooks/useSheets';\r\nimport { ICachedCharacter } from '../../Types/character';\r\nimport { allSlotKeys } from '../../Types/consts';\r\nimport { objectFromKeyMap } from '../../Util/Util';\r\nimport Character from \"../Character\";\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\n\r\ntype CharacterArtifactPaneProps = {\r\n  sheets: Sheets\r\n  character: ICachedCharacter,\r\n}\r\nfunction CharacterArtifactPane({ sheets, character, character: { key: characterKey } }: CharacterArtifactPaneProps) {\r\n  const { newBuild, equippedBuild, compareBuild, setCompareBuild } = useContext(buildContext)\r\n  const database = useContext(DatabaseContext)\r\n  const history = useHistory()\r\n  //choose which one to display stats for\r\n  const stats = (newBuild ? newBuild : equippedBuild)\r\n  const mainStatAssumptionLevel = stats?.mainStatAssumptionLevel ?? 0\r\n  const statKeys = useMemo(() => stats && sheets && Character.getDisplayStatKeys(stats, sheets), [stats, sheets])\r\n  const edit = useCallback(\r\n    artid => history.push({\r\n      pathname: \"/artifact\",\r\n      artToEditId: artid\r\n    } as any), [history])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll(), [])\r\n\r\n  // TODO: We can also listen only to equipped artifacts\r\n  const [, updateArt] = useForceUpdate()\r\n  useEffect(() => database.followAnyArt(updateArt))\r\n\r\n  const equipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact build to this character?\")) return\r\n    if (!newBuild) return\r\n    newBuild.equippedArtifacts && database.equipArtifacts(characterKey, newBuild.equippedArtifacts)\r\n  }, [characterKey, newBuild, database])\r\n\r\n  const unequipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to move all the artifacts equipped to inventory?\")) return\r\n    database.equipArtifacts(characterKey, objectFromKeyMap(allSlotKeys, () => \"\"))\r\n  }, [characterKey, database])\r\n  if (!stats) return null\r\n  return <>\r\n    <CardLight sx={{ mb: 1 }}>\r\n      <CardContent>\r\n        <StatDisplayComponent {...{ sheets, character, equippedBuild: (newBuild && !compareBuild) ? undefined : equippedBuild, newBuild, statsDisplayKeys: statKeys }} />\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container spacing={1}>\r\n          <Grid item>\r\n            {newBuild ? <Button onClick={equipArts} className=\"mr-2\">Equip artifacts</Button> : (database === localDatabase && <Button color=\"error\" onClick={unequipArts}>Unequip all artifacts</Button>)}\r\n          </Grid>\r\n          <Grid item>\r\n            {/* Compare against new build toggle */}\r\n            {!!newBuild && <SolidToggleButtonGroup exclusive value={compareBuild} onChange={(e, v) => setCompareBuild?.(v)} size=\"small\">\r\n              <ToggleButton value={false} disabled={!compareBuild}>\r\n                <small>Show New artifact Stats</small>\r\n              </ToggleButton>\r\n              <ToggleButton value={true} disabled={compareBuild}>\r\n                <small>Compare against equipped artifacts</small>\r\n              </ToggleButton>\r\n            </SolidToggleButtonGroup>}\r\n          </Grid>\r\n          <Grid item flexGrow={1}></Grid>\r\n          <Grid item>{!!mainStatAssumptionLevel && <Card sx={{ p: 1, bgcolor: t => t.palette.warning.dark }}><Typography><strong>Assume Main Stats are Level {mainStatAssumptionLevel}</strong></Typography></Card>}</Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </CardLight>\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} sm={6} md={4} >\r\n        <CardLight sx={{ height: \"100%\" }} ><CardContent sx={{ height: \"100%\" }}><Grid container spacing={1} flexDirection=\"column\" height=\"100%\" >\r\n          {artifactSheets && Object.entries(ArtifactSheet.setEffects(artifactSheets, stats.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n            <Grid item key={setKey} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n              <Typography variant=\"subtitle1\">{artifactSheets?.[setKey].name ?? \"\"}</Typography>\r\n              {setNumKeyArr.map(setNumKey => <SetEffectDisplay key={setKey + setNumKey} {...{ setKey, setNumKey, equippedBuild, newBuild }} />)}\r\n            </Grid>\r\n          )}\r\n        </Grid></CardContent></CardLight>\r\n      </Grid>\r\n      {allSlotKeys.map(slotKey =>\r\n        !!stats?.equippedArtifacts?.[slotKey] && <Grid item xs={6} md={4} key={stats?.equippedArtifacts?.[slotKey]} >\r\n          <ArtifactCard artifactId={stats?.equippedArtifacts?.[slotKey]} mainStatAssumptionLevel={mainStatAssumptionLevel} onEdit={() => edit(stats?.equippedArtifacts?.[slotKey])} />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Badge, Box, Button, CardContent, CardMedia, Divider, Grid, Typography } from \"@mui/material\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { buildContext } from \"../../Build/Build\";\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport ImgIcon from \"../../Components/Image/ImgIcon\";\r\nimport { Stars } from \"../../Components/StarDisplay\";\r\nimport StatDisplay from \"../../Components/StatDisplay\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\r\nimport Stat from \"../../Stat\";\r\nimport { ICachedCharacter, TalentSheetElementKey } from \"../../Types/character\";\r\nimport { allElementsWithPhy } from \"../../Types/consts\";\r\nimport { ICalculatedStats } from \"../../Types/stats\";\r\nimport { characterStatKeys } from \"../../Util/StatUtil\";\r\nimport WeaponDisplayCard from \"../../Weapon/WeaponDisplayCard\";\r\nimport Character from \"../Character\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\nimport StatInput from \"../StatInput\";\r\ntype CharacterOverviewPaneProps = {\r\n  characterSheet: CharacterSheet;\r\n  character: ICachedCharacter\r\n}\r\nexport default function CharacterOverviewPane({ characterSheet, character, character: { constellation, key: characterKey } }: CharacterOverviewPaneProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  const { tlvl } = build\r\n  const elementKey = build.characterEle\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  return <Grid container spacing={1}>\r\n    <Grid item xs={12} md={3}  >\r\n      {/* Image card with star and name and level */}\r\n      <CardLight >\r\n        <CardMedia src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\r\n        <CardContent>\r\n          <Typography variant=\"h4\" >{characterSheet.name} <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} /> {StatIcon[elementKey]} </Typography>\r\n          <Typography variant=\"h6\"><Stars stars={characterSheet.rarity} colored /></Typography>\r\n          <Typography variant=\"h5\">Lvl. {Character.getLevelString(character)}</Typography>\r\n          <Grid container spacing={1} mt={1}>\r\n            {([\"auto\", \"skill\", \"burst\"] as TalentSheetElementKey[]).map(tKey =>\r\n              <Grid item xs={4} key={tKey}>\r\n                <Badge badgeContent={tlvl[tKey] + 1} color={((tKey === \"skill\" && build.skillBoost) || (tKey === \"burst\" && build.burstBoost)) ? \"info\" : \"secondary\"}\r\n                  overlap=\"circular\"\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  sx={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    \"& > .MuiBadge-badge\": {\r\n                      fontSize: \"1.25em\",\r\n                      padding: \".25em .4em\",\r\n                      borderRadius: \".5em\",\r\n                      lineHeight: 1,\r\n                      height: \"1.25em\"\r\n                    }\r\n                  }}>\r\n                  <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey, build.characterEle)?.img} width=\"100%\" height=\"auto\" />\r\n                </Badge>\r\n              </Grid>)}\r\n          </Grid>\r\n          <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\r\n          <Grid container spacing={1}>\r\n            {[...Array(6).keys()].map(i =>\r\n              <Grid item xs={4} key={i}>\r\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i + 1}` as TalentSheetElementKey, build.characterEle)?.img}\r\n                  sx={{\r\n                    cursor: \"pointer\",\r\n                    ...(constellation > i ? {} : { filter: \"brightness(50%)\" })\r\n                  }}\r\n                  width=\"100%\" height=\"auto\"\r\n                  onClick={() => characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })} />\r\n              </Grid>)}\r\n          </Grid>\r\n        </CardContent>\r\n      </CardLight>\r\n    </Grid>\r\n    <Grid item xs={12} md={9} sx={{\r\n      \"> div:not(:last-child)\": { mb: 1 }\r\n    }} >\r\n      <WeaponDisplayCard {...{ charData: { character, characterSheet, equippedBuild, newBuild, characterDispatch }, weaponId: character.equippedWeapon }} />\r\n      <MainStatsCards {...{ characterSheet, character, equippedBuild, newBuild }} />\r\n    </Grid>\r\n  </Grid >\r\n}\r\nconst EDIT = \"Edit Stats\"\r\nconst EXIT = \"EXIT\"\r\n\r\nconst additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\nconst displayStatKeys = [\"characterATK\", \"finalATK\", \"finalHP\", \"finalDEF\"]\r\ndisplayStatKeys.push(...additionalKeys)\r\nconst editStatKeys = [\"hp\", \"hp_\", \"def\", \"def_\", \"atk\", \"atk_\"]\r\neditStatKeys.push(...additionalKeys)\r\nconst otherStatKeys: any[] = [];\r\n\r\nallElementsWithPhy.forEach(ele => {\r\n  otherStatKeys.push(`${ele}_dmg_`)\r\n  otherStatKeys.push(`${ele}_res_`)\r\n})\r\notherStatKeys.push(\"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\")\r\n\r\nconst miscStatkeys = [\r\n  \"normal_dmg_\", \"normal_critRate_\",\r\n  \"charged_dmg_\", \"charged_critRate_\",\r\n  \"plunging_dmg_\", \"plunging_critRate_\",\r\n  \"skill_dmg_\", \"skill_critRate_\",\r\n  \"burst_dmg_\", \"burst_critRate_\",\r\n  \"dmg_\", \"electrocharged_dmg_\",\r\n  \"vaporize_dmg_\", \"swirl_dmg_\",\r\n  \"moveSPD_\", \"atkSPD_\",\r\n  \"weakspotDMG_\",\r\n]\r\n\r\nconst resetString = {\r\n  \"characterATK\": \"Override Base ATK\",\r\n  \"characterHP\": \"Override Base HP\",\r\n  \"characterDEF\": \"Override Base DEF\"\r\n}\r\ntype MainStatsCardsProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICachedCharacter,\r\n  equippedBuild?: ICalculatedStats,\r\n  newBuild?: ICalculatedStats\r\n}\r\nconst statBreakpoint = {\r\n  xs: 12, sm: 6, md: 6, lg: 4,\r\n} as const\r\n\r\n\r\nfunction MainStatsCards({ characterSheet, character, character: { key: characterKey, level, ascension }, equippedBuild, newBuild }: MainStatsCardsProps) {\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n\r\n  const specializedStatKey = characterSheet.getSpecializedStat(character.ascension)\r\n  const specializedStatVal = characterSheet.getSpecializedStatVal(character.ascension)\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild }\r\n\r\n  return <>\r\n    <TeamBuffDisplay character={character} />\r\n    <StatDisplayCard\r\n      title=\"Main Stats\"\r\n      content={<Grid container columnSpacing={{ xs: 2, lg: 3 }} rowSpacing={1}>\r\n        {displayStatKeys.map(statKey => <Grid item key={statKey} {...statBreakpoint} >\r\n          <StatDisplay statKey={statKey} {...displayNewBuildProps} />\r\n        </Grid>)}\r\n        <Grid item {...statBreakpoint} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\r\n          <span><b>Specialized:</b> <span>{specializedStatKey && StatIcon[specializedStatKey]} {Stat.getStatName(specializedStatKey)}</span></span>\r\n          <span >{`${specializedStatVal.toFixed(Stat.fixedUnit(specializedStatKey))}${specializedStatUnit}`}</span>\r\n        </Grid>\r\n      </Grid>}\r\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {characterStatKeys.map(statKey => {\r\n          const defVal = Math.round(characterSheet.getBase(statKey, level, ascension))\r\n          return <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {resetString[statKey]}</span>}\r\n              placeholder={Stat.getStatNameRaw(statKey)}\r\n              value={character.bonusStats[statKey] ?? defVal}\r\n              defaultValue={defVal}\r\n              percent={Stat.getStatUnit(statKey) === \"%\"}\r\n              onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\r\n              onReset={() => characterDispatch({ type: \"resetStats\", statKey })}\r\n            />\r\n          </Grid>\r\n        })}\r\n        {editStatKeys.map(statKey =>\r\n          <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {Stat.getStatNameWithPercent(statKey)}</span>}\r\n              placeholder={Stat.getStatNameRaw(statKey)}\r\n              value={character.bonusStats[statKey] ?? 0}\r\n              percent={Stat.getStatUnit(statKey) === \"%\"}\r\n              onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\r\n            />\r\n          </Grid>)}\r\n      </Grid>}\r\n    />\r\n    <StatDisplayCard\r\n      title=\"Other Stats\"\r\n      content={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {otherStatKeys.map(statKey => <Grid item {...statBreakpoint} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Grid>)}\r\n      </Grid>}\r\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {otherStatKeys.map(statKey =>\r\n          <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>}\r\n              placeholder={Stat.getStatNameRaw(statKey)}\r\n              value={character.bonusStats[statKey] ?? (statKey === \"stamina\" ? 100 : 0)}\r\n              percent={Stat.getStatUnit(statKey) === \"%\"}\r\n              defaultValue={statKey === \"stamina\" ? 100 : undefined}\r\n              onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\r\n            />\r\n          </Grid>)}\r\n      </Grid>}\r\n    />\r\n    <StatDisplayCard\r\n      title=\"Misc Stats\"\r\n      content={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {miscStatkeys.map(statKey => <Grid item {...statBreakpoint} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Grid>)}\r\n      </Grid>}\r\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {miscStatkeys.map(statKey =>\r\n          <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {Stat.getStatName(statKey)}</span>}\r\n              placeholder={Stat.getStatNameRaw(statKey)}\r\n              value={character.bonusStats[statKey] ?? 0}\r\n              percent={Stat.getStatUnit(statKey) === \"%\"}\r\n              onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\r\n            />\r\n          </Grid>)}\r\n      </Grid>}\r\n    />\r\n  </>\r\n}\r\nfunction StatDisplayCard({ title, content, editContent }) {\r\n  const [edit, setedit] = useState(false)\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle1\">{title}</Typography>\r\n        <Button size=\"small\" color={edit ? \"error\" : \"info\"} onClick={() => setedit(!edit)} >\r\n          <span><FontAwesomeIcon icon={edit ? faSave : faEdit} /> {edit ? EXIT : EDIT}</span>\r\n        </Button>\r\n      </Box>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      {edit ? editContent : content}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction TeamBuffDisplay({ character }: { character: ICachedCharacter }) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const build = (newBuild ? newBuild : equippedBuild) as ICalculatedStats\r\n  if (!Object.keys(build.partyBuff).length) return null\r\n  return <CardLight>\r\n    <CardContent>\r\n      Team Buffs\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      <Grid container columnSpacing={2} rowSpacing={1}>\r\n        {Object.entries(build.partyBuff).map(([statKey, value]) => <Grid item {...statBreakpoint} key={statKey} >\r\n          <StatDisplay character={character} newBuild={newBuild} equippedBuild={equippedBuild} statKey={statKey} partyBuff />\r\n        </Grid>)}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, CardActionArea, CardContent, Divider, Grid, MenuItem, Typography } from \"@mui/material\";\r\nimport React, { useCallback, useContext, useState } from 'react';\r\nimport { buildContext } from \"../../Build/Build\";\r\nimport BootstrapTooltip from \"../../Components/BootstrapTooltip\";\r\nimport CardDark from \"../../Components/Card/CardDark\";\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport ColorText from \"../../Components/ColoredText\";\r\nimport ConditionalWrapper from \"../../Components/ConditionalWrapper\";\r\nimport DocumentDisplay from \"../../Components/DocumentDisplay\";\r\nimport DropdownButton from \"../../Components/DropdownMenu/DropdownButton\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { ICachedCharacter, TalentSheetElementKey } from \"../../Types/character\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\ntype CharacterTalentPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICachedCharacter,\r\n}\r\nexport default function CharacterTalentPane({ characterSheet, character, character: { ascension, constellation, key: characterKey } }: CharacterTalentPaneProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]] as [TalentSheetElementKey, string][]\r\n  const passivesList: [tKey: TalentSheetElementKey, tText: string, asc: number][] = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <>\r\n    <ReactionDisplay characterSheet={characterSheet} />\r\n    <Grid container spacing={1} sx={{ mb: 1 }}>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Grid item key={tKey} xs={12} md={6} lg={4} >\r\n          <SkillDisplayCard\r\n            characterSheet={characterSheet}\r\n            character={character}\r\n            characterDispatch={characterDispatch}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Grid>)}\r\n      {!!characterSheet.getTalentOfKey(\"sprint\", build?.characterEle) && <Grid item xs={12} md={6} lg={4} >\r\n        <SkillDisplayCard\r\n          characterSheet={characterSheet}\r\n          character={character}\r\n          characterDispatch={characterDispatch}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Grid>}\r\n      {!!characterSheet.getTalentOfKey(\"passive\", build?.characterEle) && <Grid item xs={12} md={6} lg={4} >\r\n        <SkillDisplayCard\r\n          characterSheet={characterSheet}\r\n          character={character}\r\n          characterDispatch={characterDispatch}\r\n          talentKey=\"passive\"\r\n          subtitle=\"Passive\"\r\n        />\r\n      </Grid>}\r\n    </Grid>\r\n    <Grid container spacing={1}>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        if (!characterSheet.getTalentOfKey(tKey, build?.characterEle)) return null\r\n        return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} >\r\n          <SkillDisplayCard\r\n            characterSheet={characterSheet}\r\n            character={character}\r\n            characterDispatch={characterDispatch}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Grid>\r\n      })}\r\n    </Grid>\r\n    <Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography>\r\n    <Grid container spacing={1}>\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}` as TalentSheetElementKey\r\n        return <Grid item key={i} xs={12} md={4}\r\n          sx={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            characterSheet={characterSheet}\r\n            character={character}\r\n            characterDispatch={characterDispatch}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={() => characterDispatch({ constellation: (i + 1) === constellation ? i : i + 1 })}\r\n          />\r\n        </Grid>\r\n      })}\r\n    </Grid>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,// TODO: Assumes if character can pyro swirl, it can swirl every element. This behaviour will need to be changed for characters that can only swirl specific elements.\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ characterSheet }: { characterSheet: CharacterSheet }) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  if (!build) return null\r\n  const charEleKey = build.characterEle\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && characterSheet.weaponTypeKey === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <CardLight sx={{ mb: 1 }}>\r\n    <CardContent>\r\n      <Grid container spacing={1}>\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Grid item key={key}><Ele stats={build} /></Grid>\r\n        })}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <Typography color=\"superconduct.main\">{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.cryo} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Typography>\r\n  </CardContent></CardDark>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <Typography color=\"electrocharged.main\">{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.hydro} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Typography>\r\n  </CardContent></CardDark>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <Typography color=\"overloaded.main\" >{Stat.getStatName(sKey)} {StatIcon.electro}+{StatIcon.pyro} <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Typography>\r\n  </CardContent></CardDark>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} {StatIcon.pyro} + {StatIcon.anemo}</span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} {StatIcon.electro}+{StatIcon.anemo}</span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} {StatIcon.cryo} + {StatIcon.anemo}</span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} {StatIcon.hydro} + {StatIcon.anemo}</span>\r\n} as const\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <CardDark sx={{ display: \"flex\" }}>\r\n    <DropdownButton size=\"small\" title={swirlEleToDisplay[ele]} color=\"success\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <MenuItem key={key} selected={ele === key} disabled={ele === key} onClick={() => setele(key)}>{element}</MenuItem>)}\r\n    </DropdownButton>\r\n    <Box sx={{ color: `${ele}.main`, p: 1 }}><strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Box>\r\n  </CardDark>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <BootstrapTooltip placement=\"top\" title={<Typography>Claymores, Plunging Attacks and <ColorText color=\"geo\">Geo DMG</ColorText></Typography>}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n  </BootstrapTooltip>\r\n\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <ColorText color=\"shattered\">{Stat.getStatName(sKey)} {StatIcon.hydro}+{StatIcon.cryo}+ <ColorText color=\"physical\"><small>Heavy Attack{information} </small></ColorText> <strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></ColorText>\r\n  </CardContent></CardDark>\r\n}\r\nconst crystalizeEleToDisplay = {\r\n  \"default\": <ColorText color=\"crystalize\">{Stat.getStatName(\"crystalize_hit\")} {StatIcon.electro}/{StatIcon.hydro}/{StatIcon.pyro}/{StatIcon.cryo}+{StatIcon.geo}</ColorText>,\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_crystalize_hit\")} {StatIcon.pyro}+{StatIcon.geo}</span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_crystalize_hit\")} {StatIcon.electro}+{StatIcon.geo}</span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_crystalize_hit\")} {StatIcon.cryo}+{StatIcon.geo}</span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_crystalize_hit\")} {StatIcon.hydro}+{StatIcon.geo}</span>\r\n} as const\r\nfunction CrystalizeCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(crystalizeEleToDisplay)[0])\r\n  const sKey = ele === \"default\" ? \"crystalize_hit\" : `${ele}_crystalize_hit`\r\n  return <CardDark sx={{ display: \"flex\" }}>\r\n    <DropdownButton size=\"small\" title={crystalizeEleToDisplay[ele]} color=\"success\">\r\n      {Object.entries(crystalizeEleToDisplay).map(([key, element]) => <MenuItem key={key} selected={ele === key} disabled={ele === key} onClick={() => setele(key)}>{element}</MenuItem>)}\r\n    </DropdownButton>\r\n    <Box sx={{ color: `${ele}.main`, p: 1 }}><strong>{stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</strong></Box>\r\n  </CardDark>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\ntype SkillDisplayCardProps = {\r\n  characterSheet: CharacterSheet\r\n  character: ICachedCharacter,\r\n  characterDispatch: (any) => void,\r\n  talentKey: TalentSheetElementKey,\r\n  subtitle: string,\r\n  onClickTitle?: (any) => any\r\n}\r\nfunction SkillDisplayCard({ characterSheet, character: { talent, ascension, key: characterKey }, characterDispatch, talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const actionWrapeprFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\r\n    [onClickTitle],\r\n  )\r\n\r\n  if (!build) return null\r\n  let header: Displayable | null = null\r\n\r\n  if (talentKey in talent) {\r\n    const levelBoost: number = build[`${talentKey}Boost`] ?? 0\r\n    const talentLvlKey = talent[talentKey] + levelBoost\r\n    const setTalentLevel = (tKey, newTalentLevelKey) => {\r\n      talent[tKey] = newTalentLevelKey\r\n      characterDispatch({ talent })\r\n    }\r\n    header = <>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <DropdownButton fullWidth title={`Talent Lv. ${talentLvlKey}`} color={levelBoost ? \"info\" : \"primary\"}>\r\n          {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n            <MenuItem key={i} selected={talent[talentKey] === (i + 1)} disabled={talent[talentKey] === (i + 1)} onClick={() => setTalentLevel(talentKey, i + 1)}>Talent Lv. {i + levelBoost + 1}</MenuItem>)}\r\n        </DropdownButton>\r\n      </CardContent>\r\n      <Divider />\r\n    </>\r\n  }\r\n  const talentSheet = characterSheet.getTalentOfKey(talentKey, build.characterEle)\r\n\r\n  return <CardLight sx={{ height: \"100%\" }}>\r\n    {header}\r\n    <CardContent>\r\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item>\r\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\r\n          </Grid>\r\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\r\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\r\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </ConditionalWrapper>\r\n      {/* Display document sections */}\r\n      {talentSheet?.sections ? <DocumentDisplay sections={talentSheet.sections} characterKey={characterKey} /> : null}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { PersonAdd } from \"@mui/icons-material\";\r\nimport { CardContent, CardHeader, Divider, Grid } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React, { useContext } from 'react';\r\nimport { buildContext } from \"../../Build/Build\";\r\nimport CardDark from \"../../Components/Card/CardDark\";\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport CharacterDropdownButton from \"../../Components/Character/CharacterDropdownButton\";\r\nimport ConditionalDisplay from \"../../Components/ConditionalDisplay\";\r\nimport StatDisplay from \"../../Components/StatDisplay\";\r\nimport Conditional from \"../../Conditional/Conditional\";\r\nimport resonanceSheets from \"../../Conditional/Resonance\";\r\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\r\nimport useCharSelectionCallback from \"../../ReactHooks/useCharSelectionCallback\";\r\nimport useSheets, { Sheets } from \"../../ReactHooks/useSheets\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { CharacterKey } from \"../../Types/consts\";\r\nimport { ICalculatedStats } from \"../../Types/stats\";\r\nimport CharacterCard from \"../CharacterCard\";\r\nimport CharacterSheet from \"../CharacterSheet\";\r\ntype CharacterTalentPaneProps = {\r\n  characterSheet: CharacterSheet,\r\n  character: ICachedCharacter,\r\n}\r\nexport default function CharacterTeamBuffsPane({ character, character: { key: characterKey, team } }: CharacterTalentPaneProps) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n\r\n  const build = (newBuild ? newBuild : equippedBuild) as ICalculatedStats\r\n  const sheets = useSheets()\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} alignItems=\"stretch\">\r\n    <TeamBuffDisplay character={character} />\r\n    <ResonanceDisplay characterKey={characterKey} build={build} />\r\n    <Grid container spacing={1}>\r\n      {sheets && build.teamStats.map((tStats, i) => <Grid item xs={12} md={6} lg={4} key={i}>\r\n        <TeammateDisplay character={character} sheets={sheets} index={i} />\r\n      </Grid>)}\r\n    </Grid>\r\n  </Box>\r\n}\r\nconst statBreakpoint = {\r\n  xs: 12, sm: 6, md: 6, lg: 4,\r\n} as const\r\nfunction TeamBuffDisplay({ character }: { character: ICachedCharacter }) {\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const build = (newBuild ? newBuild : equippedBuild) as ICalculatedStats\r\n  if (!Object.keys(build.partyBuff).length) return null\r\n  return <CardLight>\r\n    <CardContent>\r\n      Team Buffs\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      <Grid container columnSpacing={2} rowSpacing={1}>\r\n        {Object.entries(build.partyBuff).map(([statKey, value]) => <Grid item {...statBreakpoint} key={statKey} >\r\n          <StatDisplay character={character} newBuild={newBuild} equippedBuild={equippedBuild} statKey={statKey} partyBuff />\r\n        </Grid>)}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction ResonanceDisplay({ build, characterKey }: { build: ICalculatedStats, characterKey: CharacterKey }) {\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  return <CardLight>\r\n    <CardContent>\r\n      Team Resonance\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      <Grid container spacing={1}>\r\n        {resonanceSheets.map((doc, i) =>\r\n          <Grid item key={i} xs={12} md={6} lg={4} >\r\n            <CardDark sx={{ opacity: doc.canShow(build) ? 1 : 0.5, height: \"100%\" }}>\r\n              <CardHeader avatar={doc?.header?.icon} title={doc?.header?.title} action={doc?.header?.action} titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n              <Divider />\r\n              <CardContent>\r\n                {doc.description}\r\n              </CardContent>\r\n              {doc.conditionals.map(cond =>\r\n                <ConditionalDisplay key={cond.key} conditional={cond} stats={build} onChange={val => characterDispatch({ conditionalValues: val })} />\r\n              )}\r\n            </CardDark>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction TeammateDisplay({ character, character: { key: characterKey, team }, sheets, index }:\r\n  { character: ICachedCharacter, sheets: Sheets, index: number }) {\r\n  const onClickHandler = useCharSelectionCallback()\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const { newBuild, equippedBuild } = useContext(buildContext)\r\n  const condCharStats = equippedBuild?.teamStats[index]\r\n  return <buildContext.Provider value={{ equippedBuild: equippedBuild?.teamStats[index] ?? undefined, newBuild: newBuild?.teamStats[index] ?? undefined }}>\r\n    <CardLight>\r\n      <CardContent>\r\n        <CharacterDropdownButton fullWidth value={condCharStats?.characterKey ?? \"\"}\r\n          onChange={charKey => characterDispatch({ type: \"team\", index, charKey })}\r\n          filter={(_, ck) => ck !== characterKey && !team.includes(ck)} unSelectText={`Teammate ${index + 1}`} unSelectIcon={<PersonAdd />} />\r\n      </CardContent>\r\n      {condCharStats && <CharacterCard characterKey={condCharStats.characterKey}\r\n        onClickHeader={onClickHandler}\r\n        build={condCharStats}\r\n        artifactChildren={<CharArtifactCondDisplay condCharStats={condCharStats} />}\r\n        weaponChildren={<CharWeaponCondDisplay condCharStats={condCharStats} />}\r\n        footer={sheets && character && <CharTalentCondDisplay condCharStats={condCharStats} character={character} sheets={sheets} />} />}\r\n    </CardLight>\r\n  </buildContext.Provider>\r\n}\r\nfunction CharArtifactCondDisplay({ condCharStats }: { condCharStats: ICalculatedStats }) {\r\n  const characterDispatch = useCharacterReducer(condCharStats.characterKey)\r\n  return <Box >\r\n    {Object.entries(condCharStats.setToSlots).map(([artSetKey, slotkeys]) =>\r\n      Object.entries(Conditional.partyConditionals?.artifact?.[artSetKey] ?? {})\r\n        .filter(([setNum, conds]) => parseInt(setNum) <= slotkeys.length)\r\n        .flatMap(([setNum, conds]) => Object.entries(conds).map(([condKey, c]) =>\r\n          <ConditionalDisplay key={c.key} conditional={c} stats={condCharStats} onChange={val => characterDispatch({ conditionalValues: val })} />\r\n        )))}\r\n  </Box>\r\n}\r\nfunction CharWeaponCondDisplay({ condCharStats }: { condCharStats: ICalculatedStats }) {\r\n  const characterDispatch = useCharacterReducer(condCharStats.characterKey)\r\n  return <Box >{Object.entries(Conditional.partyConditionals?.weapon?.[condCharStats.weapon.key] ?? {}).map(([condKey, cond]) =>\r\n    <ConditionalDisplay key={cond.key} conditional={cond} stats={condCharStats} onChange={val => characterDispatch({ conditionalValues: val })} />\r\n  )}</Box>\r\n}\r\nfunction CharTalentCondDisplay({ character, condCharStats, sheets }:\r\n  { character: ICachedCharacter, condCharStats: ICalculatedStats, sheets: Sheets }) {\r\n  // Edit the Teammate's ConditionalValues\r\n  const characterDispatch = useCharacterReducer(condCharStats.characterKey)\r\n  const condCharKey = condCharStats.characterKey\r\n  const condCharKeyHashed = condCharKey === \"Traveler\" ? `Traveler_${condCharStats.characterEle}` : condCharKey\r\n\r\n  const charConds = Object.entries(Conditional.partyConditionals?.character?.[condCharKeyHashed] ?? {}).filter(([cKey, conditional]) =>\r\n    Conditional.canShow(conditional, condCharStats))\r\n  return <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1, pt: 0 }} >\r\n    {charConds.map(([condKey, cond]) =>\r\n      <ConditionalDisplay key={condKey} conditional={cond} stats={condCharStats} onChange={val => characterDispatch({ conditionalValues: val })} />\r\n    )}\r\n  </CardContent>\r\n}","import { Button, ButtonGroup, Card, CardContent, Divider, Grid, MenuItem, Skeleton, Tab, Tabs, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { buildContext } from '../Build/Build';\r\nimport CardDark from '../Components/Card/CardDark';\r\nimport CardLight from '../Components/Card/CardLight';\r\nimport { CharacterSelectionModal } from '../Components/Character/CharacterSelectionModal';\r\nimport ThumbSide from '../Components/Character/ThumbSide';\r\nimport CloseButton from '../Components/CloseButton';\r\nimport ColorText from '../Components/ColoredText';\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from '../Components/CustomNumberInput';\r\nimport DropdownButton from '../Components/DropdownMenu/DropdownButton';\r\nimport { EnemyExpandCard } from '../Components/EnemyEditor';\r\nimport FormulaCalcCard from '../Components/FormulaCalcCard';\r\nimport { DamageOptionsCard } from '../Components/HitModeEditor';\r\nimport ImgIcon from '../Components/Image/ImgIcon';\r\nimport { sgt } from '../Data/Characters/SheetUtil';\r\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from '../Data/LevelData';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport useCharacter from '../ReactHooks/useCharacter';\r\nimport useCharacterReducer from '../ReactHooks/useCharacterReducer';\r\nimport useCharSelectionCallback from '../ReactHooks/useCharSelectionCallback';\r\nimport useForceUpdate from '../ReactHooks/useForceUpdate';\r\nimport useSheets from '../ReactHooks/useSheets';\r\nimport { ICachedCharacter } from '../Types/character';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { ICalculatedStats } from '../Types/stats';\r\nimport { deepCloneStats } from '../Util/StatUtil';\r\nimport { clamp } from '../Util/Util';\r\nimport { defaultInitialWeapon } from '../Weapon/WeaponUtil';\r\nimport Character from './Character';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\nimport CharacterTeamBuffsPane from './CharacterDisplay/CharacterTeamBuffsPane';\r\nimport CharacterSheet from './CharacterSheet';\r\nimport { initialCharacter } from './CharacterUtil';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  value: string;\r\n  current: string | boolean;\r\n}\r\n\r\nfunction TabPanel({ children, current, value, ...other }: TabPanelProps) {\r\n  if (value !== current) return null\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== current}\r\n      id={`simple-tabpanel-${value}`}\r\n      aria-labelledby={`simple-tab-${value}`}\r\n      {...other}\r\n    >\r\n      {children}\r\n    </div>\r\n  </Suspense>\r\n}\r\n\r\ntype CharacterDisplayCardProps = {\r\n  characterKey: CharacterKey,\r\n  footer?: JSX.Element\r\n  newBuild?: ICalculatedStats,\r\n  onClose?: (any) => void,\r\n  tabName?: string,\r\n  isFlex?: boolean,\r\n  compareBuild?: boolean\r\n}\r\nexport default function CharacterDisplayCard({ characterKey, footer, newBuild: propNewBuild, onClose, tabName, isFlex, compareBuild: propCompareBuild }: CharacterDisplayCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const [compareBuild, setCompareBuild] = useState(propCompareBuild ?? false)\r\n  const character = useCharacter(characterKey)\r\n  const [dbDirty, setDbDirty] = useForceUpdate()\r\n\r\n  useEffect(() => {\r\n    typeof propCompareBuild === \"boolean\" && setCompareBuild(propCompareBuild)\r\n  }, [propCompareBuild, setCompareBuild])\r\n\r\n  const sheets = useSheets()\r\n  //follow updates from team\r\n  const [teammate1, teammate2, teammate3] = character?.team ?? []\r\n  useEffect(() =>\r\n    teammate1 ? database.followChar(teammate1, setDbDirty) : undefined,\r\n    [teammate1, setDbDirty, database])\r\n  useEffect(() =>\r\n    teammate2 ? database.followChar(teammate2, setDbDirty) : undefined,\r\n    [teammate2, setDbDirty, database])\r\n  useEffect(() =>\r\n    teammate3 ? database.followChar(teammate3, setDbDirty) : undefined,\r\n    [teammate3, setDbDirty, database])\r\n\r\n  useEffect(() => {\r\n    if (!characterKey) return\r\n    if (database._getChar(characterKey)) return\r\n    // Create a new character + weapon, with linking if char isnt in db.\r\n    (async () => {\r\n      const newChar = initialCharacter(characterKey)\r\n      database.updateChar(newChar)\r\n      const characterSheet = await CharacterSheet.get(characterKey)\r\n      if (!characterSheet) return\r\n      const weapon = defaultInitialWeapon(characterSheet.weaponTypeKey)\r\n      const weaponId = database.createWeapon(weapon)\r\n      database.setWeaponLocation(weaponId, characterKey)\r\n    })()\r\n  }, [database, characterKey])\r\n\r\n\r\n  const characterSheet = sheets?.characterSheets?.[characterKey ?? \"\"]\r\n\r\n  useEffect(() => character && database.followWeapon(character.equippedWeapon, setDbDirty),\r\n    [character, character?.equippedWeapon, setDbDirty, database])\r\n\r\n  const newBuild = useMemo(() => {\r\n    if (!propNewBuild) return undefined\r\n    return deepCloneStats(propNewBuild)\r\n  }, [propNewBuild])\r\n\r\n  // set initial state to false, because it fails to check validity of the tab values on 1st load\r\n  const [tab, settab] = useState<string | boolean>(tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\"))\r\n\r\n  const onTab = useCallback((e, v) => settab(v), [settab])\r\n\r\n  const mainStatAssumptionLevel = newBuild?.mainStatAssumptionLevel ?? 0\r\n  const equippedBuild = useMemo(() => character && dbDirty && sheets &&\r\n    Character.calculateBuild(character, database, sheets, mainStatAssumptionLevel),\r\n    [dbDirty, character, sheets, mainStatAssumptionLevel, database])\r\n  if (!character) return <></>\r\n  // main CharacterDisplayCard\r\n  return <CardDark >\r\n    <buildContext.Provider value={{ newBuild, equippedBuild, compareBuild, setCompareBuild }}>\r\n      <CardContent sx={{\r\n        \"> div:not(:last-child)\": { mb: 1 },\r\n      }}>\r\n        <Grid container spacing={1}>\r\n          <Grid item flexGrow={1}>\r\n            <CharSelectDropdown characterSheet={characterSheet} character={character} />\r\n          </Grid>\r\n          {!!mainStatAssumptionLevel && <Grid item><Card sx={{ p: 1, bgcolor: t => t.palette.warning.dark }}><Typography><strong>Assume Main Stats are Level {mainStatAssumptionLevel}</strong></Typography></Card></Grid>}\r\n          {!!onClose && <Grid item>\r\n            <CloseButton onClick={onClose} />\r\n          </Grid>}\r\n        </Grid>\r\n        <CardLight>\r\n          <Tabs\r\n            onChange={onTab}\r\n            value={tab}\r\n            variant=\"fullWidth\"\r\n          >\r\n            <Tab value=\"character\" label=\"Character\" />\r\n            {!!newBuild && <Tab value=\"newartifacts\" label=\"New Artifacts\" />}\r\n            <Tab value=\"artifacts\" label={newBuild ? \"Current Artifacts\" : \"Artifacts\"} />\r\n            {!isFlex && <Tab value=\"buffs\" label=\"Team Buffs\" />}\r\n            <Tab value=\"talent\" label=\"Talents\" />\r\n          </Tabs>\r\n        </CardLight>\r\n        <DamageOptionsCard character={character} />\r\n        {sheets && <FormulaCalcCard sheets={sheets} />}\r\n        <EnemyExpandCard character={character} />\r\n\r\n        {/* Character Panel */}\r\n        {characterSheet && <TabPanel value=\"character\" current={tab}>\r\n          <CharacterOverviewPane characterSheet={characterSheet} character={character} />\r\n        </TabPanel >}\r\n        {/* Artifacts Panel */}\r\n        {sheets && <buildContext.Provider value={{ newBuild: undefined, equippedBuild, compareBuild, setCompareBuild }}>\r\n          <TabPanel value=\"artifacts\" current={tab} >\r\n            <CharacterArtifactPane character={character} sheets={sheets} />\r\n          </TabPanel >\r\n        </buildContext.Provider>}\r\n        {/* new build panel */}\r\n        {newBuild && sheets && <TabPanel value=\"newartifacts\" current={tab} >\r\n          <CharacterArtifactPane character={character} sheets={sheets} />\r\n        </TabPanel >}\r\n        {/* Buffs panel */}\r\n        {characterSheet && <TabPanel value=\"buffs\" current={tab}>\r\n          <CharacterTeamBuffsPane characterSheet={characterSheet} character={character} />\r\n        </TabPanel >}\r\n        {/* talent panel */}\r\n        {characterSheet && <TabPanel value=\"talent\" current={tab}>\r\n          <CharacterTalentPane characterSheet={characterSheet} character={character} />\r\n        </TabPanel >}\r\n      </CardContent>\r\n      {!!footer && <Divider />}\r\n      {footer && <CardContent >\r\n        {footer}\r\n      </CardContent>}\r\n    </buildContext.Provider>\r\n  </CardDark>\r\n}\r\n\r\ntype CharSelectDropdownProps = {\r\n  characterSheet?: CharacterSheet,\r\n  character: ICachedCharacter\r\n  disabled?: boolean\r\n}\r\nfunction CharSelectDropdown({ characterSheet, character, character: { key: characterKey, elementKey = \"anemo\", level = 1, ascension = 0 }, disabled }: CharSelectDropdownProps) {\r\n  const [showModal, setshowModal] = useState(false)\r\n  const setCharacter = useCharSelectionCallback()\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const HeaderIconDisplay = characterSheet ? <span >\r\n    <ImgIcon src={characterSheet.thumbImg} sx={{ mr: 1 }} />\r\n    {characterSheet.name}\r\n  </span> : <span>Select a Character</span>\r\n  const setLevel = useCallback((level) => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    characterDispatch({ level, ascension })\r\n  }, [characterDispatch])\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) characterDispatch({ ascension: ascension + 1 })\r\n    else characterDispatch({ ascension: lowerAscension })\r\n  }, [characterDispatch, ascension, level])\r\n  return <>{!disabled ? <>\r\n    <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacter} />\r\n    <Grid container spacing={1}>\r\n      <Grid item>\r\n        <Button onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? \"Select a Character\"}</Button>\r\n      </Grid>\r\n      <Grid item>\r\n        <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\r\n          {characterSheet?.sheet && \"talents\" in characterSheet?.sheet && <DropdownButton title={<strong><ColorText color={elementKey}>{sgt(`element.${elementKey}`)}</ColorText></strong>}>\r\n            {Object.keys(characterSheet.sheet.talents).map(eleKey =>\r\n              <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => characterDispatch({ elementKey: eleKey })}>\r\n                <strong><ColorText color={eleKey}>{sgt(`element.${eleKey}`)}</ColorText></strong></MenuItem>)}\r\n          </DropdownButton>}\r\n          <CustomNumberInputButtonGroupWrapper >\r\n            <CustomNumberInput onChange={setLevel} value={level}\r\n              startAdornment=\"Lvl. \"\r\n              inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n              sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n              disabled={!characterSheet} />\r\n          </CustomNumberInputButtonGroupWrapper>\r\n          <Button sx={{ pl: 1 }} disabled={!ambiguousLevel(level) || !characterSheet} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n          <DropdownButton title={\"Select Level\"} disabled={!characterSheet}>\r\n            {milestoneLevels.map(([lv, as]) => {\r\n              const sameLevel = lv === ascensionMaxLevel[as]\r\n              const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n              const selected = lv === level && as === ascension\r\n              return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => characterDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n            })}\r\n          </DropdownButton>\r\n        </ButtonGroup>\r\n      </Grid>\r\n    </Grid>\r\n  </> : <Typography variant=\"h6\">{HeaderIconDisplay} {characterSheet && Character.getLevelString(character)}</Typography>}</>\r\n}"],"sourceRoot":""}