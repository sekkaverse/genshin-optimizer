{"version":3,"sources":["Data/Characters/Albedo/Character_Albedo_Card.png","Data/Characters/Albedo/Icon.png","Data/Characters/Albedo/IconSide.png","Data/Characters/Albedo/Banner.png","Data/Characters/Albedo/constellation1.png","Data/Characters/Albedo/constellation2.png","Data/Characters/Albedo/constellation3.png","Data/Characters/Albedo/constellation4.png","Data/Characters/Albedo/constellation5.png","Data/Characters/Albedo/constellation6.png","Data/Characters/Albedo/skill.png","Data/Characters/Albedo/burst.png","Data/Characters/Albedo/passive1.png","Data/Characters/Albedo/passive2.png","Data/Characters/Albedo/passive3.png","Data/Characters/Albedo/index.tsx","Data/Characters/Aloy/Character_Aloy_Card.png","Data/Characters/Aloy/Icon.png","Data/Characters/Aloy/IconSide.png","Data/Characters/Aloy/Banner.png","Data/Characters/Aloy/constellation1.png","Data/Characters/Aloy/constellation2.png","Data/Characters/Aloy/constellation3.png","Data/Characters/Aloy/constellation4.png","Data/Characters/Aloy/constellation5.png","Data/Characters/Aloy/constellation6.png","Data/Characters/Aloy/skill.png","Data/Characters/Aloy/burst.png","Data/Characters/Aloy/passive1.png","Data/Characters/Aloy/passive2.png","Data/Characters/Aloy/passive3.png","Util/FormulaTextUtil.tsx","Data/Characters/Aloy/index.tsx","Data/Characters/KujouSara/index.tsx","Data/Characters/Amber/Character_Amber_Card.jpg","Data/Characters/Amber/Icon.png","Data/Characters/Amber/IconSide.png","Data/Characters/Amber/Banner.png","Data/Characters/Amber/constellation1.png","Data/Characters/Amber/constellation2.png","Data/Characters/Amber/constellation3.png","Data/Characters/Amber/constellation4.png","Data/Characters/Amber/constellation5.png","Data/Characters/Amber/constellation6.png","Data/Characters/Amber/skill.png","Data/Characters/Amber/burst.png","Data/Characters/Amber/passive1.png","Data/Characters/Amber/passive2.png","Data/Characters/Amber/passive3.png","Data/Characters/Amber/index.tsx","Data/Characters/AratakiItto/Character_Arataki_Itto_Card.jpg","Data/Characters/AratakiItto/Icon.png","Data/Characters/AratakiItto/IconSide.png","Data/Characters/AratakiItto/Banner.png","Data/Characters/AratakiItto/constellation1.png","Data/Characters/AratakiItto/constellation2.png","Data/Characters/AratakiItto/constellation3.png","Data/Characters/AratakiItto/constellation4.png","Data/Characters/AratakiItto/constellation5.png","Data/Characters/AratakiItto/constellation6.png","Data/Characters/AratakiItto/skill.png","Data/Characters/AratakiItto/burst.png","Data/Characters/AratakiItto/passive1.png","Data/Characters/AratakiItto/passive2.png","Data/Characters/AratakiItto/passive3.png","Data/Characters/AratakiItto/index.tsx","Data/Characters/Barbara/Character_Barbara_Card.jpg","Data/Characters/Barbara/Icon.png","Data/Characters/Barbara/IconSide.png","Data/Characters/Barbara/Banner.png","Data/Characters/Barbara/constellation1.png","Data/Characters/Barbara/constellation2.png","Data/Characters/Barbara/constellation3.png","Data/Characters/Barbara/constellation4.png","Data/Characters/Barbara/constellation5.png","Data/Characters/Barbara/constellation6.png","Data/Characters/Barbara/skill.png","Data/Characters/Barbara/burst.png","Data/Characters/Barbara/passive1.png","Data/Characters/Barbara/passive2.png","Data/Characters/Barbara/passive3.png","Data/Characters/Barbara/index.tsx","Data/Characters/Beidou/Character_Beidou_Card.jpg","Data/Characters/Beidou/Icon.png","Data/Characters/Beidou/IconSide.png","Data/Characters/Beidou/Banner.png","Data/Characters/Beidou/constellation1.png","Data/Characters/Beidou/constellation2.png","Data/Characters/Beidou/constellation3.png","Data/Characters/Beidou/constellation4.png","Data/Characters/Beidou/constellation5.png","Data/Characters/Beidou/constellation6.png","Data/Characters/Beidou/skill.png","Data/Characters/Beidou/burst.png","Data/Characters/Beidou/passive1.png","Data/Characters/Beidou/passive2.png","Data/Characters/Beidou/passive3.png","Data/Characters/Beidou/index.tsx","Data/Characters/Bennett/Character_Bennett_Card.jpg","Data/Characters/Bennett/Icon.png","Data/Characters/Bennett/IconSide.png","Data/Characters/Bennett/Banner.png","Data/Characters/Bennett/constellation1.png","Data/Characters/Bennett/constellation2.png","Data/Characters/Bennett/constellation3.png","Data/Characters/Bennett/constellation4.png","Data/Characters/Bennett/constellation5.png","Data/Characters/Bennett/constellation6.png","Data/Characters/Bennett/skill.png","Data/Characters/Bennett/burst.png","Data/Characters/Bennett/passive1.png","Data/Characters/Bennett/passive2.png","Data/Characters/Bennett/passive3.png","Data/Characters/Bennett/index.tsx","Data/Characters/Chongyun/Character_Chongyun_Card.jpg","Data/Characters/Chongyun/Icon.png","Data/Characters/Chongyun/IconSide.png","Data/Characters/Chongyun/Banner.png","Data/Characters/Chongyun/constellation1.png","Data/Characters/Chongyun/constellation2.png","Data/Characters/Chongyun/constellation3.png","Data/Characters/Chongyun/constellation4.png","Data/Characters/Chongyun/constellation5.png","Data/Characters/Chongyun/constellation6.png","Data/Characters/Chongyun/skill.png","Data/Characters/Chongyun/burst.png","Data/Characters/Chongyun/passive1.png","Data/Characters/Chongyun/passive2.png","Data/Characters/Chongyun/passive3.png","Data/Characters/Chongyun/index.tsx","Data/Characters/Diluc/Character_Diluc_Card.jpg","Data/Characters/Diluc/Icon.png","Data/Characters/Diluc/IconSide.png","Data/Characters/Diluc/Banner.png","Data/Characters/Diluc/constellation1.png","Data/Characters/Diluc/constellation2.png","Data/Characters/Diluc/constellation3.png","Data/Characters/Diluc/constellation4.png","Data/Characters/Diluc/constellation5.png","Data/Characters/Diluc/constellation6.png","Data/Characters/Diluc/skill.png","Data/Characters/Diluc/burst.png","Data/Characters/Diluc/passive1.png","Data/Characters/Diluc/passive2.png","Data/Characters/Diluc/passive3.png","Data/Characters/Diluc/index.tsx","Data/Characters/Diona/Character_Diona_Card.png","Data/Characters/Diona/Icon.png","Data/Characters/Diona/IconSide.png","Data/Characters/Diona/Banner.png","Data/Characters/Diona/constellation1.png","Data/Characters/Diona/constellation2.png","Data/Characters/Diona/constellation3.png","Data/Characters/Diona/constellation4.png","Data/Characters/Diona/constellation5.png","Data/Characters/Diona/constellation6.png","Data/Characters/Diona/skill.png","Data/Characters/Diona/burst.png","Data/Characters/Diona/passive1.png","Data/Characters/Diona/passive2.png","Data/Characters/Diona/passive3.png","Data/Characters/Diona/index.tsx","Data/Characters/Eula/Character_Eula_Card.png","Data/Characters/Eula/Icon.png","Data/Characters/Eula/IconSide.png","Data/Characters/Eula/Banner.png","Data/Characters/Eula/constellation1.png","Data/Characters/Eula/constellation2.png","Data/Characters/Eula/constellation3.png","Data/Characters/Eula/constellation4.png","Data/Characters/Eula/constellation5.png","Data/Characters/Eula/constellation6.png","Data/Characters/Eula/skill.png","Data/Characters/Eula/burst.png","Data/Characters/Eula/passive1.png","Data/Characters/Eula/passive2.png","Data/Characters/Eula/passive3.png","Data/Characters/Eula/index.tsx","Data/Characters/Fischl/Character_Fischl_Card.jpg","Data/Characters/Fischl/Icon.png","Data/Characters/Fischl/IconSide.png","Data/Characters/Fischl/Banner.png","Data/Characters/Fischl/constellation1.png","Data/Characters/Fischl/constellation2.png","Data/Characters/Fischl/constellation3.png","Data/Characters/Fischl/constellation4.png","Data/Characters/Fischl/constellation5.png","Data/Characters/Fischl/constellation6.png","Data/Characters/Fischl/skill.png","Data/Characters/Fischl/burst.png","Data/Characters/Fischl/passive1.png","Data/Characters/Fischl/passive2.png","Data/Characters/Fischl/passive3.png","Data/Characters/Fischl/index.tsx","Data/Characters/Ganyu/Character_Ganyu_Card.png","Data/Characters/Ganyu/Icon.png","Data/Characters/Ganyu/IconSide.png","Data/Characters/Ganyu/Banner.png","Data/Characters/Ganyu/constellation1.png","Data/Characters/Ganyu/constellation2.png","Data/Characters/Ganyu/constellation3.png","Data/Characters/Ganyu/constellation4.png","Data/Characters/Ganyu/constellation5.png","Data/Characters/Ganyu/constellation6.png","Data/Characters/Ganyu/skill.png","Data/Characters/Ganyu/burst.png","Data/Characters/Ganyu/passive1.png","Data/Characters/Ganyu/passive2.png","Data/Characters/Ganyu/passive3.png","Data/Characters/Ganyu/index.tsx","Data/Characters/Gorou/Character_Gorou_Card.jpg","Data/Characters/Gorou/Icon.png","Data/Characters/Gorou/IconSide.png","Data/Characters/Gorou/Banner.png","Data/Characters/Gorou/constellation1.png","Data/Characters/Gorou/constellation2.png","Data/Characters/Gorou/constellation3.png","Data/Characters/Gorou/constellation4.png","Data/Characters/Gorou/constellation5.png","Data/Characters/Gorou/constellation6.png","Data/Characters/Gorou/skill.png","Data/Characters/Gorou/burst.png","Data/Characters/Gorou/passive1.png","Data/Characters/Gorou/passive2.png","Data/Characters/Gorou/passive3.png","Data/Characters/Gorou/index.tsx","Data/Characters/HuTao/Character_Hu_Tao_Card.jpg","Data/Characters/HuTao/Icon.png","Data/Characters/HuTao/IconSide.png","Data/Characters/HuTao/Banner.png","Data/Characters/HuTao/constellation1.png","Data/Characters/HuTao/constellation2.png","Data/Characters/HuTao/constellation3.png","Data/Characters/HuTao/constellation4.png","Data/Characters/HuTao/constellation5.png","Data/Characters/HuTao/constellation6.png","Data/Characters/HuTao/skill.png","Data/Characters/HuTao/burst.png","Data/Characters/HuTao/passive1.png","Data/Characters/HuTao/passive2.png","Data/Characters/HuTao/passive3.png","Data/Characters/HuTao/index.tsx","Data/Characters/Jean/Character_Jean_Card.jpg","Data/Characters/Jean/Icon.png","Data/Characters/Jean/IconSide.png","Data/Characters/Jean/Banner.png","Data/Characters/Jean/constellation1.png","Data/Characters/Jean/constellation2.png","Data/Characters/Jean/constellation3.png","Data/Characters/Jean/constellation4.png","Data/Characters/Jean/constellation5.png","Data/Characters/Jean/constellation6.png","Data/Characters/Jean/skill.png","Data/Characters/Jean/burst.png","Data/Characters/Jean/passive1.png","Data/Characters/Jean/passive2.png","Data/Characters/Jean/passive3.png","Data/Characters/Jean/index.tsx","Data/Characters/KaedeharaKazuha/Character_Kazuha_Card.png","Data/Characters/KaedeharaKazuha/Icon.png","Data/Characters/KaedeharaKazuha/IconSide.png","Data/Characters/KaedeharaKazuha/Banner.png","Data/Characters/KaedeharaKazuha/constellation1.png","Data/Characters/KaedeharaKazuha/constellation2.png","Data/Characters/KaedeharaKazuha/constellation3.png","Data/Characters/KaedeharaKazuha/constellation4.png","Data/Characters/KaedeharaKazuha/constellation5.png","Data/Characters/KaedeharaKazuha/constellation6.png","Data/Characters/KaedeharaKazuha/skill.png","Data/Characters/KaedeharaKazuha/burst.png","Data/Characters/KaedeharaKazuha/passive1.png","Data/Characters/KaedeharaKazuha/passive2.png","Data/Characters/KaedeharaKazuha/passive3.png","Data/Characters/KaedeharaKazuha/index.tsx","Data/Characters/Kaeya/Character_Kaeya_Card.jpg","Data/Characters/Kaeya/Icon.png","Data/Characters/Kaeya/IconSide.png","Data/Characters/Kaeya/Banner.png","Data/Characters/Kaeya/constellation1.png","Data/Characters/Kaeya/constellation2.png","Data/Characters/Kaeya/constellation3.png","Data/Characters/Kaeya/constellation4.png","Data/Characters/Kaeya/constellation5.png","Data/Characters/Kaeya/constellation6.png","Data/Characters/Kaeya/skill.png","Data/Characters/Kaeya/burst.png","Data/Characters/Kaeya/passive1.png","Data/Characters/Kaeya/passive2.png","Data/Characters/Kaeya/passive3.png","Data/Characters/Kaeya/index.tsx","Data/Characters/KamisatoAyaka/Character_Kamisato_Ayaka_Card.png","Data/Characters/KamisatoAyaka/Icon.png","Data/Characters/KamisatoAyaka/IconSide.png","Data/Characters/KamisatoAyaka/Banner.png","Data/Characters/KamisatoAyaka/constellation1.png","Data/Characters/KamisatoAyaka/constellation2.png","Data/Characters/KamisatoAyaka/constellation3.png","Data/Characters/KamisatoAyaka/constellation4.png","Data/Characters/KamisatoAyaka/constellation5.png","Data/Characters/KamisatoAyaka/constellation6.png","Data/Characters/KamisatoAyaka/skill.png","Data/Characters/KamisatoAyaka/burst.png","Data/Characters/KamisatoAyaka/sprint.png","Data/Characters/KamisatoAyaka/passive1.png","Data/Characters/KamisatoAyaka/passive2.png","Data/Characters/KamisatoAyaka/passive3.png","Data/Characters/KamisatoAyaka/index.tsx","Data/Characters/Keqing/Character_Keqing_Card.jpg","Data/Characters/Keqing/Icon.png","Data/Characters/Keqing/IconSide.png","Data/Characters/Keqing/Banner.png","Data/Characters/Keqing/constellation1.png","Data/Characters/Keqing/constellation2.png","Data/Characters/Keqing/constellation3.png","Data/Characters/Keqing/constellation4.png","Data/Characters/Keqing/constellation5.png","Data/Characters/Keqing/constellation6.png","Data/Characters/Keqing/skill.png","Data/Characters/Keqing/burst.png","Data/Characters/Keqing/passive1.png","Data/Characters/Keqing/passive2.png","Data/Characters/Keqing/passive3.png","Data/Characters/Keqing/index.tsx","Data/Characters/Klee/Character_Klee_Card.jpg","Data/Characters/Klee/Icon.png","Data/Characters/Klee/IconSide.png","Data/Characters/Klee/Banner.png","Data/Characters/Klee/constellation6.png","Data/Characters/Klee/constellation1.png","Data/Characters/Klee/constellation2.png","Data/Characters/Klee/constellation3.png","Data/Characters/Klee/constellation5.png","Data/Characters/Klee/constellation4.png","Data/Characters/Klee/passive3.png","Data/Characters/Klee/skill.png","Data/Characters/Klee/passive1.png","Data/Characters/Klee/passive2.png","Data/Characters/Klee/burst.png","Data/Characters/Klee/index.tsx","Data/Characters/KujouSara/Character_Kujou_Sara_Card.jpg","Data/Characters/KujouSara/Icon.png","Data/Characters/KujouSara/IconSide.png","Data/Characters/KujouSara/Banner.png","Data/Characters/KujouSara/constellation1.png","Data/Characters/KujouSara/constellation2.png","Data/Characters/KujouSara/constellation3.png","Data/Characters/KujouSara/constellation4.png","Data/Characters/KujouSara/constellation5.png","Data/Characters/KujouSara/constellation6.png","Data/Characters/KujouSara/skill.png","Data/Characters/KujouSara/burst.png","Data/Characters/KujouSara/passive1.png","Data/Characters/KujouSara/passive2.png","Data/Characters/KujouSara/passive3.png","Data/Characters/Lisa/Character_Lisa_Card.jpg","Data/Characters/Lisa/Icon.png","Data/Characters/Lisa/IconSide.png","Data/Characters/Lisa/Banner.png","Data/Characters/Lisa/constellation1.png","Data/Characters/Lisa/constellation2.png","Data/Characters/Lisa/constellation3.png","Data/Characters/Lisa/constellation4.png","Data/Characters/Lisa/constellation5.png","Data/Characters/Lisa/constellation6.png","Data/Characters/Lisa/skill.png","Data/Characters/Lisa/burst.png","Data/Characters/Lisa/passive1.png","Data/Characters/Lisa/passive2.png","Data/Characters/Lisa/passive3.png","Data/Characters/Lisa/index.tsx","Data/Characters/Mona/Character_Mona_Card.jpg","Data/Characters/Mona/Icon.png","Data/Characters/Mona/IconSide.png","Data/Characters/Mona/Banner.png","Data/Characters/Mona/constellation1.png","Data/Characters/Mona/constellation2.png","Data/Characters/Mona/constellation3.png","Data/Characters/Mona/constellation4.png","Data/Characters/Mona/constellation5.png","Data/Characters/Mona/constellation6.png","Data/Characters/Mona/skill.png","Data/Characters/Mona/burst.png","Data/Characters/Mona/sprint.png","Data/Characters/Mona/passive1.png","Data/Characters/Mona/passive2.png","Data/Characters/Mona/passive3.png","Data/Characters/Mona/index.tsx","Data/Characters/Ningguang/Character_Ningguang_Card.jpg","Data/Characters/Ningguang/Icon.png","Data/Characters/Ningguang/IconSide.png","Data/Characters/Ningguang/Banner.png","Data/Characters/Ningguang/constellation1.png","Data/Characters/Ningguang/constellation2.png","Data/Characters/Ningguang/constellation3.png","Data/Characters/Ningguang/constellation4.png","Data/Characters/Ningguang/constellation5.png","Data/Characters/Ningguang/constellation6.png","Data/Characters/Ningguang/skill.png","Data/Characters/Ningguang/burst.png","Data/Characters/Ningguang/passive1.png","Data/Characters/Ningguang/passive2.png","Data/Characters/Ningguang/passive3.png","Data/Characters/Ningguang/index.tsx","Data/Characters/Noelle/Character_Noelle_Card.jpg","Data/Characters/Noelle/Icon.png","Data/Characters/Noelle/IconSide.png","Data/Characters/Noelle/Banner.png","Data/Characters/Noelle/constellation1.png","Data/Characters/Noelle/constellation2.png","Data/Characters/Noelle/constellation3.png","Data/Characters/Noelle/constellation4.png","Data/Characters/Noelle/constellation5.png","Data/Characters/Noelle/constellation6.png","Data/Characters/Noelle/skill.png","Data/Characters/Noelle/burst.png","Data/Characters/Noelle/passive1.png","Data/Characters/Noelle/passive2.png","Data/Characters/Noelle/passive3.png","Data/Characters/Noelle/index.tsx","Data/Characters/Qiqi/Character_Qiqi_Card.jpg","Data/Characters/Qiqi/Icon.png","Data/Characters/Qiqi/IconSide.png","Data/Characters/Qiqi/Banner.png","Data/Characters/Qiqi/constellation1.png","Data/Characters/Qiqi/constellation2.png","Data/Characters/Qiqi/constellation3.png","Data/Characters/Qiqi/constellation4.png","Data/Characters/Qiqi/constellation5.png","Data/Characters/Qiqi/constellation6.png","Data/Characters/Qiqi/skill.png","Data/Characters/Qiqi/burst.png","Data/Characters/Qiqi/passive1.png","Data/Characters/Qiqi/passive2.png","Data/Characters/Qiqi/passive3.png","Data/Characters/Qiqi/index.tsx","Data/Characters/RaidenShogun/Character_Raiden_Shogun_Card.png","Data/Characters/RaidenShogun/Icon.png","Data/Characters/RaidenShogun/IconSide.png","Data/Characters/RaidenShogun/Banner.png","Data/Characters/RaidenShogun/constellation1.png","Data/Characters/RaidenShogun/constellation2.png","Data/Characters/RaidenShogun/constellation3.png","Data/Characters/RaidenShogun/constellation4.png","Data/Characters/RaidenShogun/constellation5.png","Data/Characters/RaidenShogun/constellation6.png","Data/Characters/RaidenShogun/skill.png","Data/Characters/RaidenShogun/burst.png","Data/Characters/RaidenShogun/passive1.png","Data/Characters/RaidenShogun/passive2.png","Data/Characters/RaidenShogun/passive3.png","Data/Characters/RaidenShogun/index.tsx","Data/Characters/Razor/Character_Razor_Card.jpg","Data/Characters/Razor/Icon.png","Data/Characters/Razor/IconSide.png","Data/Characters/Razor/Banner.png","Data/Characters/Razor/constellation1.png","Data/Characters/Razor/constellation2.png","Data/Characters/Razor/constellation3.png","Data/Characters/Razor/constellation4.png","Data/Characters/Razor/constellation5.png","Data/Characters/Razor/constellation6.png","Data/Characters/Razor/skill.png","Data/Characters/Razor/burst.png","Data/Characters/Razor/passive1.png","Data/Characters/Razor/passive2.png","Data/Characters/Razor/passive3.png","Data/Characters/Razor/index.tsx","Data/Characters/Rosaria/Character_Rosaria_Card.png","Data/Characters/Rosaria/Icon.png","Data/Characters/Rosaria/IconSide.png","Data/Characters/Rosaria/Banner.png","Data/Characters/Rosaria/constellation1.png","Data/Characters/Rosaria/constellation2.png","Data/Characters/Rosaria/constellation3.png","Data/Characters/Rosaria/constellation4.png","Data/Characters/Rosaria/constellation5.png","Data/Characters/Rosaria/constellation6.png","Data/Characters/Rosaria/skill.png","Data/Characters/Rosaria/burst.png","Data/Characters/Rosaria/passive1.png","Data/Characters/Rosaria/passive2.png","Data/Characters/Rosaria/passive3.png","Data/Characters/Rosaria/index.tsx","Data/Characters/SangonomiyaKokomi/Character_Sangonomiya_Kokomi_Card.jpg","Data/Characters/SangonomiyaKokomi/Icon.png","Data/Characters/SangonomiyaKokomi/IconSide.png","Data/Characters/SangonomiyaKokomi/Banner.png","Data/Characters/SangonomiyaKokomi/constellation1.png","Data/Characters/SangonomiyaKokomi/constellation2.png","Data/Characters/SangonomiyaKokomi/constellation3.png","Data/Characters/SangonomiyaKokomi/constellation4.png","Data/Characters/SangonomiyaKokomi/constellation5.png","Data/Characters/SangonomiyaKokomi/constellation6.png","Data/Characters/SangonomiyaKokomi/skill.png","Data/Characters/SangonomiyaKokomi/burst.png","Data/Characters/SangonomiyaKokomi/passive.png","Data/Characters/SangonomiyaKokomi/passive1.png","Data/Characters/SangonomiyaKokomi/passive2.png","Data/Characters/SangonomiyaKokomi/passive3.png","Data/Characters/SangonomiyaKokomi/index.tsx","Data/Characters/Sayu/Character_Sayu_Card.png","Data/Characters/Sayu/Icon.png","Data/Characters/Sayu/IconSide.png","Data/Characters/Sayu/Banner.png","Data/Characters/Sayu/constellation1.png","Data/Characters/Sayu/constellation2.png","Data/Characters/Sayu/constellation3.png","Data/Characters/Sayu/constellation4.png","Data/Characters/Sayu/constellation5.png","Data/Characters/Sayu/constellation6.png","Data/Characters/Sayu/skill.png","Data/Characters/Sayu/burst.png","Data/Characters/Sayu/passive1.png","Data/Characters/Sayu/passive2.png","Data/Characters/Sayu/passive3.png","Data/Characters/Sayu/index.tsx","Data/Characters/Sucrose/Character_Sucrose_Card.jpg","Data/Characters/Sucrose/Icon.png","Data/Characters/Sucrose/IconSide.png","Data/Characters/Sucrose/Banner.png","Data/Characters/Sucrose/constellation1.png","Data/Characters/Sucrose/constellation2.png","Data/Characters/Sucrose/constellation3.png","Data/Characters/Sucrose/constellation4.png","Data/Characters/Sucrose/constellation5.png","Data/Characters/Sucrose/constellation6.png","Data/Characters/Sucrose/skill.png","Data/Characters/Sucrose/burst.png","Data/Characters/Sucrose/passive1.png","Data/Characters/Sucrose/passive2.png","Data/Characters/Sucrose/passive3.png","Data/Characters/Sucrose/index.tsx","Data/Characters/Tartaglia/Character_Tartaglia_Card.png","Data/Characters/Tartaglia/Icon.png","Data/Characters/Tartaglia/IconSide.png","Data/Characters/Tartaglia/Banner.png","Data/Characters/Tartaglia/constellation1.png","Data/Characters/Tartaglia/constellation2.png","Data/Characters/Tartaglia/constellation3.png","Data/Characters/Tartaglia/constellation4.png","Data/Characters/Tartaglia/constellation5.png","Data/Characters/Tartaglia/constellation6.png","Data/Characters/Tartaglia/skill.png","Data/Characters/Tartaglia/burst.png","Data/Characters/Tartaglia/passive1.png","Data/Characters/Tartaglia/passive2.png","Data/Characters/Tartaglia/passive3.png","Data/Characters/Tartaglia/index.tsx","Data/Characters/Thoma/Character_Thoma_Card.jpg","Data/Characters/Thoma/Icon.png","Data/Characters/Thoma/IconSide.png","Data/Characters/Thoma/Banner.png","Data/Characters/Thoma/constellation1.png","Data/Characters/Thoma/constellation2.png","Data/Characters/Thoma/constellation3.png","Data/Characters/Thoma/constellation4.png","Data/Characters/Thoma/constellation5.png","Data/Characters/Thoma/constellation6.png","Data/Characters/Thoma/skill.png","Data/Characters/Thoma/burst.png","Data/Characters/Thoma/passive1.png","Data/Characters/Thoma/passive2.png","Data/Characters/Thoma/passive3.png","Data/Characters/Thoma/index.tsx","Data/Characters/Traveler/Traveler_Female_Card.jpg","Data/Characters/Traveler/Icon.png","Data/Characters/Traveler/IconSide.png","Data/Characters/Traveler/anemo/constellation1.png","Data/Characters/Traveler/anemo/constellation2.png","Data/Characters/Traveler/anemo/constellation3.png","Data/Characters/Traveler/anemo/constellation4.png","Data/Characters/Traveler/anemo/constellation5.png","Data/Characters/Traveler/anemo/constellation6.png","Data/Characters/Traveler/anemo/skill.png","Data/Characters/Traveler/anemo/burst.png","Data/Characters/Traveler/anemo/passive1.png","Data/Characters/Traveler/anemo/passive2.png","Data/Characters/Traveler/anemo/index.tsx","Data/Characters/Traveler/geo/constellation1.png","Data/Characters/Traveler/geo/constellation2.png","Data/Characters/Traveler/geo/constellation3.png","Data/Characters/Traveler/geo/constellation4.png","Data/Characters/Traveler/geo/constellation5.png","Data/Characters/Traveler/geo/constellation6.png","Data/Characters/Traveler/geo/skill.png","Data/Characters/Traveler/geo/burst.png","Data/Characters/Traveler/geo/passive1.png","Data/Characters/Traveler/geo/passive2.png","Data/Characters/Traveler/geo/index.tsx","Data/Characters/Traveler/electro/constellation1.png","Data/Characters/Traveler/electro/constellation2.png","Data/Characters/Traveler/electro/constellation3.png","Data/Characters/Traveler/electro/constellation4.png","Data/Characters/Traveler/electro/constellation5.png","Data/Characters/Traveler/electro/constellation6.png","Data/Characters/Traveler/electro/skill.png","Data/Characters/Traveler/electro/burst.png","Data/Characters/Traveler/electro/passive1.png","Data/Characters/Traveler/electro/passive2.png","Data/Characters/Traveler/electro/index.tsx","Data/Characters/Traveler/index.tsx","Data/Characters/Venti/Character_Venti_Card.jpg","Data/Characters/Venti/Icon.png","Data/Characters/Venti/IconSide.png","Data/Characters/Venti/Banner.png","Data/Characters/Venti/constellation1.png","Data/Characters/Venti/constellation2.png","Data/Characters/Venti/constellation3.png","Data/Characters/Venti/constellation4.png","Data/Characters/Venti/constellation5.png","Data/Characters/Venti/constellation6.png","Data/Characters/Venti/skill.png","Data/Characters/Venti/burst.png","Data/Characters/Venti/passive1.png","Data/Characters/Venti/passive2.png","Data/Characters/Venti/passive3.png","Data/Characters/Venti/index.tsx","Data/Characters/Xiao/Character_Xiao_Card.jpg","Data/Characters/Xiao/Icon.png","Data/Characters/Xiao/IconSide.png","Data/Characters/Xiao/Banner.png","Data/Characters/Xiao/constellation1.png","Data/Characters/Xiao/constellation2.png","Data/Characters/Xiao/constellation3.png","Data/Characters/Xiao/constellation4.png","Data/Characters/Xiao/constellation5.png","Data/Characters/Xiao/constellation6.png","Data/Characters/Xiao/skill.png","Data/Characters/Xiao/burst.png","Data/Characters/Xiao/passive1.png","Data/Characters/Xiao/passive2.png","Data/Characters/Xiao/passive3.png","Data/Characters/Xiao/index.tsx","Data/Characters/Xiangling/Character_Xiangling_Card.jpg","Data/Characters/Xiangling/Icon.png","Data/Characters/Xiangling/IconSide.png","Data/Characters/Xiangling/Banner.png","Data/Characters/Xiangling/constellation1.png","Data/Characters/Xiangling/constellation2.png","Data/Characters/Xiangling/constellation3.png","Data/Characters/Xiangling/constellation4.png","Data/Characters/Xiangling/constellation5.png","Data/Characters/Xiangling/constellation6.png","Data/Characters/Xiangling/skill.png","Data/Characters/Xiangling/burst.png","Data/Characters/Xiangling/passive1.png","Data/Characters/Xiangling/passive2.png","Data/Characters/Xiangling/passive3.png","Data/Characters/Xiangling/index.tsx","Data/Characters/Xingqiu/Character_Xingqiu_Card.jpg","Data/Characters/Xingqiu/Icon.png","Data/Characters/Xingqiu/IconSide.png","Data/Characters/Xingqiu/Banner.png","Data/Characters/Xingqiu/constellation1.png","Data/Characters/Xingqiu/constellation2.png","Data/Characters/Xingqiu/constellation3.png","Data/Characters/Xingqiu/constellation4.png","Data/Characters/Xingqiu/constellation5.png","Data/Characters/Xingqiu/constellation6.png","Data/Characters/Xingqiu/skill.png","Data/Characters/Xingqiu/burst.png","Data/Characters/Xingqiu/passive1.png","Data/Characters/Xingqiu/passive2.png","Data/Characters/Xingqiu/passive3.png","Data/Characters/Xingqiu/index.tsx","Data/Characters/Xinyan/Character_Xinyan_Card.jpg","Data/Characters/Xinyan/Icon.png","Data/Characters/Xinyan/IconSide.png","Data/Characters/Xinyan/Banner.png","Data/Characters/Xinyan/constellation1.png","Data/Characters/Xinyan/constellation2.png","Data/Characters/Xinyan/constellation3.png","Data/Characters/Xinyan/constellation4.png","Data/Characters/Xinyan/constellation5.png","Data/Characters/Xinyan/constellation6.png","Data/Characters/Xinyan/skill.png","Data/Characters/Xinyan/burst.png","Data/Characters/Xinyan/passive1.png","Data/Characters/Xinyan/passive2.png","Data/Characters/Xinyan/passive3.png","Data/Characters/Xinyan/index.tsx","Data/Characters/YaeMiko/Character_Yae_Miko_Card.png","Data/Characters/YaeMiko/Icon.png","Data/Characters/YaeMiko/IconSide.png","Data/Characters/YaeMiko/Banner.png","Data/Characters/YaeMiko/constellation1.png","Data/Characters/YaeMiko/constellation2.png","Data/Characters/YaeMiko/constellation3.png","Data/Characters/YaeMiko/constellation4.png","Data/Characters/YaeMiko/constellation5.png","Data/Characters/YaeMiko/constellation6.png","Data/Characters/YaeMiko/skill.png","Data/Characters/YaeMiko/burst.png","Data/Characters/YaeMiko/passive1.png","Data/Characters/YaeMiko/passive2.png","Data/Characters/YaeMiko/passive3.png","Data/Characters/YaeMiko/index.tsx","Data/Characters/Yanfei/Character_Yanfei_Card.png","Data/Characters/Yanfei/Icon.png","Data/Characters/Yanfei/IconSide.png","Data/Characters/Yanfei/Banner.png","Data/Characters/Yanfei/constellation1.png","Data/Characters/Yanfei/constellation2.png","Data/Characters/Yanfei/constellation3.png","Data/Characters/Yanfei/constellation4.png","Data/Characters/Yanfei/constellation5.png","Data/Characters/Yanfei/constellation6.png","Data/Characters/Yanfei/skill.png","Data/Characters/Yanfei/burst.png","Data/Characters/Yanfei/passive1.png","Data/Characters/Yanfei/passive2.png","Data/Characters/Yanfei/passive3.png","Data/Characters/Yanfei/index.tsx","Data/Characters/Yoimiya/Character_Yoimiya_Card.png","Data/Characters/Yoimiya/Icon.png","Data/Characters/Yoimiya/IconSide.png","Data/Characters/Yoimiya/Banner.png","Data/Characters/Yoimiya/constellation1.png","Data/Characters/Yoimiya/constellation2.png","Data/Characters/Yoimiya/constellation3.png","Data/Characters/Yoimiya/constellation4.png","Data/Characters/Yoimiya/constellation5.png","Data/Characters/Yoimiya/constellation6.png","Data/Characters/Yoimiya/skill.png","Data/Characters/Yoimiya/burst.png","Data/Characters/Yoimiya/passive1.png","Data/Characters/Yoimiya/passive2.png","Data/Characters/Yoimiya/passive3.png","Data/Characters/Yoimiya/index.tsx","Data/Characters/Zhongli/Character_Zhongli_Card.png","Data/Characters/Zhongli/Icon.png","Data/Characters/Zhongli/IconSide.png","Data/Characters/Zhongli/Banner.png","Data/Characters/Zhongli/constellation1.png","Data/Characters/Zhongli/constellation2.png","Data/Characters/Zhongli/constellation3.png","Data/Characters/Zhongli/constellation4.png","Data/Characters/Zhongli/constellation5.png","Data/Characters/Zhongli/constellation6.png","Data/Characters/Zhongli/skill.png","Data/Characters/Zhongli/burst.png","Data/Characters/Zhongli/passive1.png","Data/Characters/Zhongli/passive2.png","Data/Characters/Zhongli/passive3.png","Data/Characters/Zhongli/index.tsx","Data/Characters/index.ts","Util/DocumentUtil.ts"],"names":["tr","strKey","Translate","ns","key18","char","name","cardImg","card","thumbImg","thumb","thumbImgSide","thumbSide","bannerImg","banner","rarity","data_gen","star","elementKey","weaponTypeKey","gender","constellationName","title","baseStat","base","baseStatCurve","curves","ascensions","talent","formula","sheets","auto","img","normalSrc","sections","text","fields","data","normal","hitArr","map","percentArr","i","formulaText","stats","tlvl","Stat","printStat","getTalentStatKey","variant","getTalentStatKeyVariant","charged","atk1","atk2","value","plungeDocSection","skill","press","blossom","canShow","ascension","hitModeMultiKey","hitMode","blossom50","burst","dmg","Array","keys","constellation","passive1","talentTemplate","passive2","conditional","key","partyBuff","header","conditionalHeader","description","eleMas","passive3","constellation1","c1","constellation2","c2","constellation3","c3","constellation4","c4","plunging_dmg_","constellation5","c5","constellation6","c6","dmg_","basicDMGFormulaText","percent","skillKey","elemental","charTr","sgt","bowChargedDocSection","bomblet","atkDec","fixed","unit","atkDecDur","cd","states","normal_dmg_","coil1","coil2","coil3","coil4","infusionSelf","rushDur","cost","conditionalValues","character","Aloy","e","maxStack","atk_","a1","duration","num","condEleKey","cryo_dmg_","hp","detonationDMG","dmgPerWave","totDMG","moveSPD_","burst_critRate_","staminaGlidingDec_","path","KeyPath","AratakiItto","normalDocSection","akSlash","def","akSlashA4","akFinal","akFinalA4","ss","sSlash","stam","modifiers","atk","defConv","atkSPD_","atkSpd","Object","fromEntries","allElementsWithPhy","ele","resDec","def_","Typography","color","hpFlat","regenPerHit","contHP","contHPFlat","contRegen","staminaDec_","hydro_dmg_","flat","regen","claymoreChargedDocSection","shieldElectro","shield","onHit","hit1","hit2","charged_dmg_","lightningDMG","dmgRed","electro_enemyRes_","Bennett","chargedHitsDocSection","healHP","healHPFlat","atkBonus","atkRatio","enerRech_","pyro_dmg_","infusionAura","infusionDuration","cryo_enemyRes_","burst_dmg_","hit2b","hit3","hit3b","shieldHp","shieldFlat","shieldCryo","shieldHoldCryo","shieldHold","dmgPerPaw","durationPerPaw","continuousDmg","hpPercent","incHeal_","skill_dmg_","Eula","values","count","pressDMG","cdPress","holdDMG","cdHold","g","c","cyroResDec","physical_enemyRes_","brandDMG","q","stacks","stateKey","toString","val","baseDMG","stackDMG","statKey","dmg50","physical_dmg_","aimedShot","aimShot","fullAimedShot","fullAimedShotOz","oz","activeChar","addDmg","aimShot1","Ganyu","reactionMode","frostflake","frostflakeBloom","skill_def_","dmgA4","g1","g2","st","g3","geo_dmg_","burst_def_","dmgCollapse","heal_def_","heal","HuTao","chargedDocSection","dmgC2","atk_inc","low_dmg","low_regen","critRate_","physical_res_","anemo_res_","geo_res_","electro_res_","hydro_res_","pyro_res_","cryo_res_","dmg_hold","field_dmg","heal_atk","heal_flat","regen_atk","regen_flat","anemo_enemyRes_","KaedeharaKazuha","plunging","low","high","stat","hold","pdmg","plow","phigh","dot","absorbableEle","eleKey","add","getStatName","staminaSprintDec_","bonus","normal_critRate_","charged_critRate_","hit","cutting","bloom","sprint","enemyDEFRed_","stilleto","slashing","thunderclasp_slash","thunderclap_slashing","consec_slash","last","electro_dmg_","electro_","jumpyDmg","mineDmg","KujouSara","cluster","stack0","stack1","stack2","stack3","summon","Mona","bubble_explosion","omen_duration","electrocharged_dmg_","vaporize_dmg_","swirl_dmg_","jade","inheri_hp","dmg_per_gem","Noelle","skill_dmg","shield_def_","shield_flat","heal_trigger","burst_dmg","staminaChargedDec_","hitregen","continuousregen","herald","healing","RaidenShogun","burstDMGFormulaText","intial","resolveStack","getResolve","resolve","resolve_","ratioText","enemyLevelMultiC2","skillDMGFormulaText","skillDMG","coorDMG","eleBurConv","enerCost","energyCosts","hit41","hit42","hit5","charged1","charged2","plunge","plungeLow","plungeHigh","enerGen","resolveStacks","a4","eleDMG","atkspd","hitNum","Rosaria","critConv","burstOn","SangonomiyaKokomi","c2On","ncText","hpText","p2","heal_ratio","flatMap","nBonus","cBonus","dmgHP","heal_","s_heal_","regenC2","sBonus","nc_heal_","passive","hp_","hydro_","skillPercent","kick_press","kick_hold","basic","Sayu","ele_dmg","ele_kick","muji_dmg","muji_heal_","muji_heal","Sucrose","em","riptide","flash","skillDmg","slash","melee","ranged","blast","autoBoost","shieldHp_","shieldPyro","maxShieldHp_","maxShieldHp","maxShield","maxShieldPyro","dmgCollapseA4","shieldDuration","shield_","auto_","talentSheet","initial_dmg","initial_max","storm_dmg","storm_max","Traveler_anemo","windAuto","exp","geoAuto","Traveler","electro","enerRechInc","enerRegen","thunder","thunder3","talents","anemo","geo","toFixed","hit_bonus","full","full_bonus","launch","Venti","Boolean","gutterBottom","component","swirlTicks","className","anemo_dmg_","atk_bonus","pyro_enemyRes_","hit1RainCutter","hit2RainCutter","hydro_enemyRes_","spinning","spinningDEF","final","finalDEF","_","lvl1","lvl2","lvl3","lvl4","lvl1EM","lvl2EM","lvl3EM","lvl4EM","thunderbolt","kindling","Yoimiya","fixed_atk_","var_atk_","t","lowHP","highHP","steeleDMG","steeleDMGHP","resonanceDMG","resonanceDMGHP","holdDMGHP","shieldBase","shieldMaxHP","k","petriDur","finalHP","characters","Albedo","Amber","Barbara","Beidou","Chongyun","Diluc","Diona","Fischl","Gorou","Jean","Kaeya","KamisatoAyaka","Keqing","Klee","Lisa","Ningguang","Qiqi","Razor","Tartaglia","Thoma","Xiao","Xiangling","Xingqiu","Xinyan","YaeMiko","Yanfei","Zhongli","forEach","talentSheetElement","documentSectionsProcessing","section","fieldProcessing"],"mappings":"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","file":"static/js/15.37d8f415.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Character_Albedo_Card.33ed5485.png\";","export default __webpack_public_path__ + \"static/media/Icon.2cda2f11.png\";","export default __webpack_public_path__ + \"static/media/IconSide.e7a82126.png\";","export default __webpack_public_path__ + \"static/media/Banner.ca93b015.png\";","export default __webpack_public_path__ + \"static/media/constellation1.c5875341.png\";","export default __webpack_public_path__ + \"static/media/constellation2.4f89feae.png\";","export default __webpack_public_path__ + \"static/media/constellation3.0b2ea3e4.png\";","export default __webpack_public_path__ + \"static/media/constellation4.bfc82d8d.png\";","export default __webpack_public_path__ + \"static/media/constellation5.8a9cf395.png\";","export default __webpack_public_path__ + \"static/media/constellation6.0c05a4a7.png\";","export default __webpack_public_path__ + \"static/media/skill.0b2ea3e4.png\";","export default __webpack_public_path__ + \"static/media/burst.a816bf3a.png\";","export default __webpack_public_path__ + \"static/media/passive1.9feb0308.png\";","export default __webpack_public_path__ + \"static/media/passive2.a344d48a.png\";","export default __webpack_public_path__ + \"static/media/passive3.d49af955.png\";","import card from './Character_Albedo_Card.png'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant, } from \"../../../Build/Build\"\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { conditionalHeader, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Albedo_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"geo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"M\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [{\r\n          text: tr(`auto.fields.normal`),\r\n          fields: data.normal.hitArr.map((percentArr, i) =>\r\n          ({\r\n            text: `${i + 1}-Hit DMG`,\r\n            formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n            formula: formula.normal[i],\r\n            variant: stats => getTalentStatKeyVariant(\"normal\", stats)\r\n          }))\r\n        }, {\r\n          text: tr(\"auto.fields.charged\"),\r\n          fields: [{\r\n            text: `Charged 1-Hit DMG`,\r\n            formulaText: stats => <span>{data.charged.atk1[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n            formula: formula.charged.atk1,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }, {\r\n            text: `Charged 2-Hit DMG`,\r\n            formulaText: stats => <span>{data.charged.atk2[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n            formula: formula.charged.atk2,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }, {\r\n            text: `Stamina Cost`,\r\n            value: 20,\r\n          }]\r\n        }, plungeDocSection(tr, formula, data)]\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Place DMG\",\r\n            formulaText: stats => <span>{data.skill.press[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.press,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Transient Blossom DMG\",\r\n            formulaText: stats => <span>{data.skill.blossom[stats.tlvl.skill]}% {Stat.printStat(\"finalDEF\", stats)} * {Stat.printStat(getTalentStatKey(\"skill\", stats) + \"_multi\", stats)}</span>,\r\n            formula: formula.skill.blossom,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension >= 1,\r\n            text: \"Transient Blossom DMG < 50% HP\",\r\n            formulaText: stats => {\r\n              const hitModeMultiKey = stats.hitMode === \"avgHit\" ? \"skill_avgHit_base_multi\" : stats.hitMode === \"critHit\" ? \"critHit_base_multi\" : \"\"\r\n              return <span>{data.skill.blossom[stats.tlvl.skill]}% {Stat.printStat(\"finalDEF\", stats)} * {(hitModeMultiKey ? <span>{Stat.printStat(hitModeMultiKey, stats)} * </span> : \"\")}( {Stat.printStat(\"geo_skill_hit_base_multi\", stats)} + 25%) * {Stat.printStat(\"enemyLevel_multi\", stats)} * {Stat.printStat(\"geo_enemyRes_multi\", stats)}</span>\r\n            },\r\n            formula: formula.skill.blossom50,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }]\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Burst DMG\",\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          },\r\n          ...[...Array(4).keys()].map(i => i + 1).map(i => ({\r\n            canShow: stats => stats.constellation >= 2,\r\n            text: `Burst DMG C2 ${i} Stack`,\r\n            formulaText: stats => <span>( {data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(\"finalATK\", stats)} + {30 * i}% {Stat.printStat(\"finalDEF\", stats)}) * {Stat.printStat(getTalentStatKey(\"burst\", stats) + \"_multi\", stats)}</span>,\r\n            formula: formula.burst[`dmg${i}c2`],\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          })),\r\n          {\r\n            text: \"Fatal Blossom DMG\",\r\n            formulaText: stats => <span>{data.burst.blossom[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.blossom,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          },\r\n          ...[...Array(4).keys()].map(i => i + 1).map(i => ({\r\n            canShow: stats => stats.constellation >= 2,\r\n            text: `Fatal Blossom DMG C2 ${i} Stack`,\r\n            formulaText: stats => <span>( {data.burst.blossom[stats.tlvl.burst]}% {Stat.printStat(\"finalATK\", stats)} + {30 * i}% {Stat.printStat(\"finalDEF\", stats)}) * {Stat.printStat(getTalentStatKey(\"burst\", stats) + \"_multi\", stats)}</span>,\r\n            formula: formula.burst[`blossom${i}c2`],\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          })), {\r\n            text: \"CD\",\r\n            value: \"12s\"\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 40\r\n          }]\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          conditional: { // Homuncular Nature\r\n            key: \"a4\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            name: <span>Using <strong>Rite of Progeniture: Tectonic Tide</strong></span>,\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"passive2\", tr, passive2),\r\n            description: tr(\"passive2.description\"),\r\n            stats: { eleMas: 125, }\r\n          },\r\n        }],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          conditional: { // Descent Of Divinity\r\n            key: \"c4\",\r\n            canShow: stats => stats.constellation >= 4,\r\n            name: \"Active party members within the Solar Isotoma field\",\r\n            partyBuff: \"partyActive\",\r\n            header: conditionalHeader(\"constellation4\", tr, c4),\r\n            description: tr(\"constellation4.description\"),\r\n            stats: { plunging_dmg_: 30, }\r\n          },\r\n        }],\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: tr(\"constellation6.description\"),\r\n          conditional: { // Dust Of Purification\r\n            key: \"c6\",\r\n            canShow: stats => stats.constellation >= 6,\r\n            name: \"Active party members within the Solar Isotoma field who are protected by a shield created by Crystallize\",\r\n            partyBuff: \"partyActive\",\r\n            header: conditionalHeader(\"constellation6\", tr, c6),\r\n            description: tr(\"constellation6.description\"),\r\n            stats: {\r\n              dmg_: 17,\r\n            }\r\n          }\r\n        }],\r\n      }\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Aloy_Card.b3c74f31.png\";","export default __webpack_public_path__ + \"static/media/Icon.1dcde779.png\";","export default __webpack_public_path__ + \"static/media/IconSide.1ed05396.png\";","export default __webpack_public_path__ + \"static/media/Banner.6027d28a.png\";","export default __webpack_public_path__ + \"static/media/constellation1.e8a96b7e.png\";","export default __webpack_public_path__ + \"static/media/constellation2.e8a96b7e.png\";","export default __webpack_public_path__ + \"static/media/constellation3.e8a96b7e.png\";","export default __webpack_public_path__ + \"static/media/constellation4.e8a96b7e.png\";","export default __webpack_public_path__ + \"static/media/constellation5.e8a96b7e.png\";","export default __webpack_public_path__ + \"static/media/constellation6.e8a96b7e.png\";","export default __webpack_public_path__ + \"static/media/skill.053ced8c.png\";","export default __webpack_public_path__ + \"static/media/burst.91e20a42.png\";","export default __webpack_public_path__ + \"static/media/passive1.ba4655b9.png\";","export default __webpack_public_path__ + \"static/media/passive2.639ebbc0.png\";","export default __webpack_public_path__ + \"static/media/passive3.dd5a5110.png\";","import { getTalentStatKey } from \"../Build/Build\";\r\nimport Stat from \"../Stat\";\r\nimport { ElementKey } from \"../Types/consts\";\r\nimport { BasicStats } from \"../Types/stats\";\r\n\r\nexport function basicDMGFormulaText(percent: number, stats: BasicStats, skillKey: string, elemental?: \"physical\" | ElementKey) {\r\n  return <span>{percent}% {Stat.printStat(getTalentStatKey(skillKey, stats, elemental), stats)} </span>\r\n}","import card from './Character_Aloy_Card.png'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { bowChargedDocSection, conditionalHeader, normalSrc, plungeDocSection, sgt, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport { basicDMGFormulaText } from '../../../Util/FormulaTextUtil'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Aloy_gen\" key18={strKey} />\r\nconst charTr = (strKey: string) => <Translate ns=\"char_Aloy\" key18={strKey} />\r\n\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: 5,//data_gen.star, TODO: not in datamine\r\n  elementKey: \"cryo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          {\r\n            text: tr(\"auto.fields.normal\"),\r\n            fields: data.normal.hitArr.map((percentArr, i) =>\r\n            ({\r\n              text: <span>{sgt(`normal.hit${i + (i < 1 ? 1 : 0)}`)} {(i === 0 || i === 1) ? <span>({i + 1})</span> : \"\"}</span>,\r\n              formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n              formula: formula.normal[i],\r\n              variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n            }))\r\n          },\r\n          bowChargedDocSection(tr, formula, data, \"cryo\"),\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: tr(\"skill.skillParams.0\"),\r\n            formulaText: stats => basicDMGFormulaText(data.skill.dmg[stats.tlvl.skill], stats, \"skill\"),\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: tr(\"skill.skillParams.1\"),\r\n            formulaText: stats => basicDMGFormulaText(data.skill.bomblet[stats.tlvl.skill], stats, \"skill\"),\r\n            formula: formula.skill.bomblet,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: tr(\"skill.skillParams.2\"),\r\n            value: stats => data.skill.atkDec[stats.tlvl.skill],\r\n            fixed: 1,\r\n            unit: \"%\"\r\n          }, {\r\n            text: tr(\"skill.skillParams.3\"),\r\n            value: data.skill.atkDecDur,\r\n            unit: \"s\"\r\n          }, {\r\n            text: tr(\"skill.skillParams.7\"),\r\n            value: data.skill.cd,\r\n            unit: \"s\"\r\n          }],\r\n          conditional: { //Gengu StormCall\r\n            key: \"e\",\r\n            name: charTr(\"skill.coil\"),\r\n            states: {\r\n              c1: {\r\n                name: charTr(\"skill.coil1\"),\r\n                stats: stats => ({\r\n                  normal_dmg_: data.skill.coil1[stats.tlvl.skill]\r\n                }),\r\n              },\r\n              c2: {\r\n                name: charTr(\"skill.coil2\"),\r\n                stats: stats => ({\r\n                  normal_dmg_: data.skill.coil2[stats.tlvl.skill]\r\n                })\r\n              },\r\n              c3: {\r\n                name: charTr(\"skill.coil3\"),\r\n                stats: stats => ({\r\n                  normal_dmg_: data.skill.coil3[stats.tlvl.skill]\r\n                })\r\n              },\r\n              c4: {\r\n                name: charTr(\"skill.rush\"),\r\n                stats: stats => ({\r\n                  normal_dmg_: data.skill.coil4[stats.tlvl.skill],\r\n                  infusionSelf: \"cryo\",\r\n                }),\r\n                fields: [{\r\n                  text: tr(\"skill.skillParams.6\"),\r\n                  value: data.skill.rushDur,\r\n                  unit: \"s\"\r\n                },]\r\n              }\r\n            },\r\n          },\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: tr(\"burst.skillParams.0\"),\r\n            formulaText: stats => basicDMGFormulaText(data.burst.dmg[stats.tlvl.burst], stats, \"burst\"),\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.1\"),\r\n            value: data.burst.cd,\r\n            unit: \"s\"\r\n          }, {\r\n            text: tr(\"burst.skillParams.2\"),\r\n            value: data.burst.cost,\r\n          }]\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          conditional: {\r\n            key: \"a1\",\r\n            canShow: stats => {\r\n              if (stats.ascension < 1) return false\r\n              const [num,] = stats.conditionalValues?.character?.Aloy?.e ?? []\r\n              if (!num) return false\r\n              return true\r\n            },\r\n            maxStack: 0,\r\n            stats: {\r\n              atk_: 16\r\n            },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: data.a1.duration,\r\n              unit: \"s\"\r\n            }],\r\n          },\r\n        }, {\r\n          conditional: {\r\n            key: \"a1p\",\r\n            partyBuff: \"partyOnly\",\r\n            header: conditionalHeader(\"passive1\", tr, passive1),\r\n            description: tr(\"passive1.description\"),\r\n            name: \"When Aloy receives the Coil effect from Frozen Wilds\",\r\n            canShow: stats => stats.ascension >= 1,\r\n            stats: { atk_: 8 },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: data.a1.duration,\r\n              unit: \"s\"\r\n            }],\r\n          }\r\n        }],\r\n      },\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          conditional: {\r\n            key: \"a4\",\r\n            canShow: stats => {\r\n              if (stats.ascension < 4) return false\r\n              const [num, condEleKey] = stats.conditionalValues?.character?.Aloy?.e ?? []\r\n              return !!num && condEleKey === \"c4\"\r\n            },\r\n            name: charTr(\"skill.rushDur\"),\r\n            maxStack: 10,\r\n            stats: {\r\n              cryo_dmg_: 3.5\r\n            }\r\n          }\r\n        }],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","import card from './Character_Kujou_Sara_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { bowChargedDocSection, conditionalHeader, normalDocSection, normalSrc, plungeDocSection, st, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport { basicDMGFormulaText } from '../../../Util/FormulaTextUtil'\r\nimport { KeyPath } from '../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../formula'\r\nimport { Typography } from '@mui/material'\r\nconst path = KeyPath<FormulaPathBase, any>().character.KujouSara\r\nconst tr = (strKey: string) => <Translate ns=\"char_KujouSara_gen\" key18={strKey} />\r\nconst charTr = (strKey: string) => <Translate ns=\"char_KujouSara\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"electro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          bowChargedDocSection(tr, formula, data, \"electro\"),\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [\r\n            {\r\n              text: tr(\"skill.skillParams.0\"),\r\n              formulaText: stats => basicDMGFormulaText(data.skill.dmg[stats.tlvl.skill], stats, \"skill\"),\r\n              formula: formula.skill.dmg,\r\n              variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n            }, {\r\n              text: tr(\"skill.skillParams.2\"),\r\n              value: data.skill.duration,\r\n              unit: \"s\"\r\n            }, {\r\n              text: tr(\"skill.skillParams.3\"),\r\n              value: data.skill.cd,\r\n              unit: \"s\"\r\n            }],\r\n          conditional: { //Gengu StormCall\r\n            key: \"e\",\r\n            partyBuff: \"partyActive\",\r\n            header: conditionalHeader(\"skill\", tr, skill),\r\n            description: tr(\"skill.description\"),\r\n            name: charTr(\"skill.ambush\"),\r\n            stats: {\r\n              modifiers: { atk: [path.skill.atkBonus()] },\r\n            },\r\n            fields: [{\r\n              text: st(\"increase.atk\"),\r\n              formulaText: stats => <span>{data.skill.atkRatio[stats.tlvl.skill]}% {Stat.printStat(\"baseATK\", stats, true)}</span>,\r\n              formula: formula.skill.atkBonus\r\n            },]\r\n          }\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: tr(\"burst.skillParams.0\"),\r\n            formulaText: stats => basicDMGFormulaText(data.burst.dmg[stats.tlvl.burst], stats, \"burst\"),\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.1\"),\r\n            formulaText: stats => basicDMGFormulaText(data.burst.cluster[stats.tlvl.burst], stats, \"burst\"),\r\n            formula: formula.burst.cluster,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.2\"),\r\n            value: data.burst.cd,\r\n            unit: \"s\"\r\n          }, {\r\n            text: tr(\"burst.skillParams.3\"),\r\n            value: data.burst.cost,\r\n          }]\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: {\r\n        name: tr(\"constellation2.name\"),\r\n        img: c2,\r\n        sections: [{\r\n          text: tr(\"constellation2.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.constellation >= 2,\r\n            text: tr(\"skill.skillParams.0\"),\r\n            formulaText: stats => <span>0.3 * {data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)} </span>,\r\n            formula: formula.c2.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }]\r\n        }],\r\n      },\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: stats => stats.constellation < 6 ? tr(\"constellation6.description\") :\r\n            <span>\r\n              {tr(\"constellation6.description\")}\r\n              <Typography color=\"warning.main\">This skill needs more system changes before it can be implemented.</Typography>\r\n            </span>,\r\n        }],\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Amber_Card.d17ffc29.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.b126eb7b.png\";","export default __webpack_public_path__ + \"static/media/IconSide.77e6717d.png\";","export default __webpack_public_path__ + \"static/media/Banner.2cdbb2b2.png\";","export default __webpack_public_path__ + \"static/media/constellation1.3c335cd9.png\";","export default __webpack_public_path__ + \"static/media/constellation2.70aa701f.png\";","export default __webpack_public_path__ + \"static/media/constellation3.f60277da.png\";","export default __webpack_public_path__ + \"static/media/constellation4.2a0d9cf2.png\";","export default __webpack_public_path__ + \"static/media/constellation5.4a650d4d.png\";","export default __webpack_public_path__ + \"static/media/constellation6.1b9980ac.png\";","export default __webpack_public_path__ + \"static/media/skill.4a650d4d.png\";","export default __webpack_public_path__ + \"static/media/burst.748623cc.png\";","export default __webpack_public_path__ + \"static/media/passive1.107252aa.png\";","export default __webpack_public_path__ + \"static/media/passive2.52d128a6.png\";","export default __webpack_public_path__ + \"static/media/passive3.8c7dabc4.png\";","import card from './Character_Amber_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { bowChargedDocSection, conditionalHeader, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Amber_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"pyro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [{\r\n          text: <span><strong>Normal Attack</strong> Perform up to 5 consecutive shots with a bow.</span>,\r\n          fields: data.normal.hitArr.map((percentArr, i) =>\r\n          ({\r\n            text: `${i + 1}-Hit DMG`,\r\n            formulaText: stats => <span>{percentArr[stats.tlvl.auto]} % {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)} </span>,\r\n            formula: formula.normal[i],\r\n            variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n          }))\r\n        }, bowChargedDocSection(tr, formula, data, \"pyro\"),\r\n        plungeDocSection(tr, formula, data)],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Inherited HP\",\r\n            formulaText: stats => <span>{data.skill.hp[stats.tlvl.skill]} % {Stat.printStat(\"finalHP\", stats)} </span>,\r\n            formula: formula.skill.hp,\r\n          }, {\r\n            text: \"Explosion DMG\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]} % {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)} </span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.constellation >= 2,\r\n            text: \"Manual Detonation DMG\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]} % + 200 % {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)} </span>,\r\n            formula: formula.skill.detonationDMG,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.constellation >= 4,\r\n            text: \"Charges\",\r\n            value: 2,\r\n          }, {\r\n            text: \"CD\",\r\n            value: stats => \"15s\" + (stats.constellation >= 4 ? \" -20%\" : \"\"),\r\n          }]\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"DMG Per Wave\",\r\n            formulaText: stats => <span>{data.burst.dmgPerWave[stats.tlvl.burst]} % {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)} </span>,\r\n            formula: formula.burst.dmgPerWave,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Rain DMG\",\r\n            formulaText: stats => <span>{data.burst.totDMG[stats.tlvl.burst]} % {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)} </span>,\r\n            formula: formula.burst.totDMG,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension >= 1,\r\n            text: \"CRIT Rate Bonus\",\r\n            value: \"10%\"\r\n          }, {\r\n            canShow: stats => stats.ascension >= 1,\r\n            text: \"AoE Range Bonus\",\r\n            value: \"30%\"\r\n          }, {\r\n            text: \"Duration\",\r\n            value: \"2s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"12s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 40,\r\n          },],\r\n          conditional: { // Wildfire\r\n            key: \"c6\",\r\n            canShow: stats => stats.constellation >= 6,\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"constellation6\", tr, c6),\r\n            description: tr(\"constellation6.description\"),\r\n            name: tr(\"constellation6.name\"),\r\n            stats: {\r\n              atk_: 15,\r\n              moveSPD_: 15\r\n            },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"10s\",\r\n            }]\r\n          },\r\n        }, {\r\n          conditional: {\r\n            key: \"c6s\",\r\n            canShow: stats => stats.ascension >= 1,\r\n            maxStack: 0,\r\n            stats: { burst_critRate_: 10 }\r\n          }\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          conditional: { // Precise Shot\r\n            key: \"a4\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            name: \"Aim shot hit on weak spots\",\r\n            stats: {\r\n              atk_: 15,\r\n            },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"10s\",\r\n            }]\r\n          }\r\n        }],\r\n      },\r\n      passive3: {\r\n        name: tr(\"passive3.name\"),\r\n        img: passive3,\r\n        sections: [{\r\n          conditional: {\r\n            key: \"p3\",\r\n            partyBuff: \"partyOnly\",\r\n            maxStack: 0,\r\n            header: conditionalHeader(\"passive3\", tr, passive3),\r\n            description: tr(\"passive3.description\"),\r\n            name: tr(\"passive3.name\"),\r\n            stats: { staminaGlidingDec_: 10 }\r\n          }\r\n        }],\r\n      },\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Arataki_Itto_Card.fc4d216c.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.d0a583ce.png\";","export default __webpack_public_path__ + \"static/media/IconSide.2c5b0231.png\";","export default __webpack_public_path__ + \"static/media/Banner.b0741559.png\";","export default __webpack_public_path__ + \"static/media/constellation1.0940c5ae.png\";","export default __webpack_public_path__ + \"static/media/constellation2.2f9450ab.png\";","export default __webpack_public_path__ + \"static/media/constellation3.50fc1f02.png\";","export default __webpack_public_path__ + \"static/media/constellation4.ca79c473.png\";","export default __webpack_public_path__ + \"static/media/constellation5.d997042d.png\";","export default __webpack_public_path__ + \"static/media/constellation6.fa6fb9e0.png\";","export default __webpack_public_path__ + \"static/media/skill.50fc1f02.png\";","export default __webpack_public_path__ + \"static/media/burst.0a6d1859.png\";","export default __webpack_public_path__ + \"static/media/passive1.9772c105.png\";","export default __webpack_public_path__ + \"static/media/passive2.8a5850bf.png\";","export default __webpack_public_path__ + \"static/media/passive3.71f75292.png\";","import card from './Character_Arataki_Itto_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { conditionalHeader, normalDocSection, normalSrc, plungeDocSection, sgt, talentTemplate } from '../SheetUtil'\r\nimport { KeyPath } from '../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../formula'\r\nimport { allElementsWithPhy, WeaponTypeKey } from '../../../Types/consts'\r\nimport { Typography } from '@mui/material'\r\n\r\nconst path = KeyPath<FormulaPathBase, any>().character.AratakiItto\r\nconst tr = (strKey: string) => <Translate ns=\"char_AratakiItto_gen\" key18={strKey} />\r\nconst charTr = (strKey: string) => <Translate ns=\"char_AratakiItto\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"geo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          {\r\n            text: tr(\"auto.fields.charged\"),\r\n            fields: [{\r\n              text: tr(\"auto.skillParams.4\"),\r\n              canShow: stats => stats.ascension < 4,\r\n              formulaText: stats => <span>{data.charged.akSlash[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n              formula: formula.charged.akSlash,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n            }, {\r\n              text: tr(\"auto.skillParams.4\"),\r\n              canShow: stats => stats.ascension >= 4,\r\n              formulaText: stats => <span>( {data.charged.akSlash[stats.tlvl.auto]}% {Stat.printStat(\"finalATK\", stats)} + {data.passive2.def}% {Stat.printStat(\"finalDEF\", stats)} ) * {Stat.printStat(getTalentStatKey(\"charged\", stats) + \"_multi\", stats)}</span>,\r\n              formula: formula.charged.akSlashA4,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n            }, {\r\n              text: tr(\"auto.skillParams.5\"),\r\n              canShow: stats => stats.ascension < 4,\r\n              formulaText: stats => <span>{data.charged.akFinal[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n              formula: formula.charged.akFinal,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n            }, {\r\n              text: tr(\"auto.skillParams.5\"),\r\n              canShow: stats => stats.ascension >= 4,\r\n              formulaText: stats => <span>( {data.charged.akFinal[stats.tlvl.auto]}% {Stat.printStat(\"finalATK\", stats)} + {data.passive2.def}% {Stat.printStat(\"finalDEF\", stats)} ) * {Stat.printStat(getTalentStatKey(\"charged\", stats) + \"_multi\", stats)}</span>,\r\n              formula: formula.charged.akFinalA4,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n            }, {\r\n              text: tr(\"auto.skillParams.6\"),\r\n              value: data.ss.duration,\r\n              unit: \"s\"\r\n            }, {\r\n              text: tr(\"auto.skillParams.7\"),\r\n              formulaText: stats => <span>{data.charged.sSlash[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n              formula: formula.charged.sSlash,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n            }, {\r\n              text: tr(\"auto.skillParams.8\"),\r\n              value: data.charged.stam,\r\n            }]\r\n          },\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [\r\n            {\r\n              text: tr(\"skill.skillParams.0\"),\r\n              formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats) + \"_multi\", stats)} * {Stat.printStat(\"finalDEF\", stats)}</span>,\r\n              formula: formula.skill.dmg,\r\n              variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n            }, {\r\n              text: tr(\"skill.skillParams.1\"),\r\n              formulaText: stats => <span>{data.skill.hp[stats.tlvl.skill]}% {Stat.printStat(\"finalHP\", stats)}</span>,\r\n              formula: formula.skill.hp,\r\n              variant: \"success\",\r\n            }, {\r\n              text: tr(\"skill.skillParams.2\"),\r\n              value: data.skill.duration,\r\n              unit: \"s\"\r\n            }, {\r\n              text: tr(\"skill.skillParams.3\"),\r\n              value: data.skill.cd,\r\n              unit: \"s\"\r\n            }\r\n          ],\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: tr(\"burst.skillParams.3\"),\r\n            value: data.burst.cd,\r\n            unit: \"s\"\r\n          }, {\r\n            text: tr(\"burst.skillParams.4\"),\r\n            value: data.burst.cost,\r\n            unit: \"s\"\r\n          }],\r\n          conditional: { // Sweeping Time\r\n            key: \"q\",\r\n            name: tr(\"burst.name\"),\r\n            maxStack: 1,\r\n            stats: stats => ({\r\n              modifiers: { atk: [path.burst.defConv()] },\r\n              infusionSelf: \"geo\",\r\n              atkSPD_: data.burst.atkSpd[stats.tlvl.burst],\r\n              ...Object.fromEntries(allElementsWithPhy.map(ele => [`${ele}_res_`, -data.burst.resDec[stats.tlvl.burst]]))\r\n            }),\r\n            fields: [{\r\n              text: tr(\"burst.skillParams.0\"),\r\n              formulaText: stats => <span>{data.burst.defConv[stats.tlvl.burst]}% {Stat.printStat(\"finalDEF\", stats, true)}</span>,\r\n              formula: formula.burst.defConv,\r\n            }, {\r\n              text: tr(\"burst.skillParams.2\"),\r\n              value: data.burst.duration,\r\n              unit: \"s\"\r\n            }]\r\n          }\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          conditional: {\r\n            key: \"a1\",\r\n            canShow: stats => stats.ascension >= 1,\r\n            name: charTr(\"a1.name\"),\r\n            maxStack: 3,\r\n            stats: {\r\n              atkSPD_: 10\r\n            }\r\n          },\r\n        }],\r\n      },\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          conditional: {\r\n            key: \"c4\",\r\n            canShow: stats => stats.constellation >= 4,\r\n            partyBuff: \"partyActive\",\r\n            header: conditionalHeader(\"constellation4\", tr, c4),\r\n            description: tr(\"constellation4.description\"),\r\n            name: charTr(\"c4.name\"),\r\n            stats: {\r\n              def_: data.constellation4.def_,\r\n              atk_: data.constellation4.atk_,\r\n            },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: data.constellation4.duration,\r\n              unit: \"s\"\r\n            }]\r\n          }\r\n        }]\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: stats => stats.constellation < 6 ? tr(\"constellation6.description\") :\r\n            <span>\r\n              {tr(\"constellation6.description\")}\r\n              <Typography color=\"warning.main\">This skill needs more system changes before it can be implemented.</Typography>\r\n            </span>,\r\n        }],\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Barbara_Card.7acacdaa.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.3aa043e0.png\";","export default __webpack_public_path__ + \"static/media/IconSide.df3039e7.png\";","export default __webpack_public_path__ + \"static/media/Banner.e2568dcd.png\";","export default __webpack_public_path__ + \"static/media/constellation1.cda710f5.png\";","export default __webpack_public_path__ + \"static/media/constellation2.6265014c.png\";","export default __webpack_public_path__ + \"static/media/constellation3.49ff2a72.png\";","export default __webpack_public_path__ + \"static/media/constellation4.cbd49429.png\";","export default __webpack_public_path__ + \"static/media/constellation5.c3f736c2.png\";","export default __webpack_public_path__ + \"static/media/constellation6.5ea898e3.png\";","export default __webpack_public_path__ + \"static/media/skill.c3f736c2.png\";","export default __webpack_public_path__ + \"static/media/burst.883ddb79.png\";","export default __webpack_public_path__ + \"static/media/passive1.428bc430.png\";","export default __webpack_public_path__ + \"static/media/passive2.36c32615.png\";","export default __webpack_public_path__ + \"static/media/passive3.0159e62d.png\";","import card from './Character_Barbara_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { conditionalHeader, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Barbara_gen\" key18={strKey} />\r\n\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"hydro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [{\r\n          text: tr(`auto.fields.normal`),\r\n          fields: data.normal.hitArr.map((percentArr, i) =>\r\n          ({\r\n            text: `${i + 1}-Hit DMG`,\r\n            formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n            formula: formula.normal[i],\r\n            variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n          }))\r\n        }, {\r\n          text: tr(\"auto.fields.charged\"),\r\n          fields: [{\r\n            text: `Charged Attack DMG`,\r\n            formulaText: stats => <span>{data.charged.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n            formula: formula.charged.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }, {\r\n            text: `Stamina Cost`,\r\n            value: `50`,\r\n          }]\r\n        },\r\n        plungeDocSection(tr, formula, data)],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"HP Regeneration Per Hit\",\r\n            formulaText: stats => <span>( {data.skill.hp[stats.tlvl.skill]}% {Stat.printStat(\"finalHP\", stats)} + {data.skill.hpFlat[stats.tlvl.skill]} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.skill.regenPerHit,\r\n            variant: \"success\"\r\n          }, {\r\n            text: \"Continuous Regeneration\",\r\n            formulaText: stats => <span>( {data.skill.contHP[stats.tlvl.skill]}% {Stat.printStat(\"finalHP\", stats)} + {data.skill.contHPFlat[stats.tlvl.skill]} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.skill.contRegen,\r\n            variant: \"success\"\r\n          }, {\r\n            text: \"Droplet DMG\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Duration\",\r\n            value: stats => \"15s\" + (stats.ascension >= 4 ? \" (+1s when your active character gains an Elemental Orb/Particle, up to 5s)\" : \"\"),\r\n          }, {\r\n            text: \"CD\",\r\n            value: stats => \"32s\" + (stats.constellation >= 2 ? \" -15%\" : \"\"),\r\n          }]\r\n        }, {\r\n          conditional: { // Glorious Season\r\n            key: \"a1\",\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"passive1\", tr, passive1),\r\n            description: tr(\"passive1.description\"),\r\n            canShow: stats => stats.ascension >= 1,\r\n            name: <span>Within <b>Let the Show Begin</b>'s Melody Loop</span>,\r\n            stats: { staminaDec_: 12 }\r\n          },\r\n        }, {\r\n          conditional: { // VitalityBurst\r\n            key: \"c2\",\r\n            partyBuff: \"partyActive\",\r\n            header: conditionalHeader(\"constellation2\", tr, c2),\r\n            description: tr(\"constellation2.description\"),\r\n            canShow: stats => stats.constellation >= 2,\r\n            name: <span>During <b>Let the Show Begin</b></span>,\r\n            stats: { hydro_dmg_: 15 }\r\n          }\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Regeneration\",\r\n            formulaText: stats => <span>( {data.burst.hp[stats.tlvl.burst]}% {Stat.printStat(\"finalHP\", stats)} + {data.burst.flat[stats.tlvl.burst]} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.burst.regen,\r\n            variant: \"success\"\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"20s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 80,\r\n          }]\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Beidou_Card.fe206e42.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.25814c27.png\";","export default __webpack_public_path__ + \"static/media/IconSide.6dfc837d.png\";","export default __webpack_public_path__ + \"static/media/Banner.a0298e84.png\";","export default __webpack_public_path__ + \"static/media/constellation1.1a623cee.png\";","export default __webpack_public_path__ + \"static/media/constellation2.d255bf23.png\";","export default __webpack_public_path__ + \"static/media/constellation3.3e81dd23.png\";","export default __webpack_public_path__ + \"static/media/constellation4.1f407824.png\";","export default __webpack_public_path__ + \"static/media/constellation5.9affe363.png\";","export default __webpack_public_path__ + \"static/media/constellation6.fcb15aef.png\";","export default __webpack_public_path__ + \"static/media/skill.90ff69b7.png\";","export default __webpack_public_path__ + \"static/media/burst.75ab14ee.png\";","export default __webpack_public_path__ + \"static/media/passive1.73bd61e1.png\";","export default __webpack_public_path__ + \"static/media/passive2.804e59c5.png\";","export default __webpack_public_path__ + \"static/media/passive3.358ebfaa.png\";","import card from './Character_Beidou_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { claymoreChargedDocSection, conditionalHeader, normalDocSection, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport ColorText from '../../../Components/ColoredText'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Beidou_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"electro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          claymoreChargedDocSection(tr, formula, data),\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: <ColorText color=\"electro\">Shield DMG Absorption</ColorText>,\r\n            formulaText: stats => <span>( {data.skill.hp[stats.tlvl.skill]}% {Stat.printStat(\"finalHP\", stats)} + {data.skill.flat[stats.tlvl.skill]} ) * (100% + {Stat.printStat(\"shield_\", stats)}) * (250% <ColorText color=\"electro\">Electro Absorption</ColorText>)</span>,\r\n            formula: formula.skill.shieldElectro,\r\n            variant: \"electro\"\r\n          }, {\r\n            text: \"Shield DMG Absorption\",\r\n            formulaText: stats => <span>( {data.skill.hp[stats.tlvl.skill]}% {Stat.printStat(\"finalHP\", stats)} + {data.skill.flat[stats.tlvl.skill]} ) * (100% + {Stat.printStat(\"shield_\", stats)})</span>,\r\n            formula: formula.skill.shield,\r\n          }, {\r\n            text: \"Base DMG\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"1-Hit Taken\",\r\n            formulaText: stats => <span>( {data.skill.dmg[stats.tlvl.skill]}% + {data.skill.onHit[stats.tlvl.skill]}% )  {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.hit1,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"2-Hit Taken\",\r\n            formulaText: stats => <span>( {data.skill.dmg[stats.tlvl.skill]}% + 2 * {data.skill.onHit[stats.tlvl.skill]}% ) {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.hit2,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"7.5s\",\r\n          }],\r\n          conditional: { // Lightning Storm\r\n            key: \"a4\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            name: <span>Unleashing <b>Tidecaller</b> with its maximum DMG Bonus</span>,\r\n            stats: {\r\n              normal_dmg_: 15,\r\n              charged_dmg_: 15,\r\n              atkSPD_: 15,\r\n            },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"10s\",\r\n            }, {\r\n              text: \"Reduced delay before Charged Attacks\",\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Lightning DMG\",\r\n            formulaText: stats => <span>{data.burst.lightningDMG[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.lightningDMG,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"DMG Reduction\",\r\n            value: stats => data.burst.dmgRed[stats.tlvl.burst] + \"%\",\r\n          }, {\r\n            text: \"Duration\",\r\n            value: \"15s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"20s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 80,\r\n          }],\r\n          conditional: { // Bane Evil\r\n            key: \"c6\",\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"constellation6\", tr, c6),\r\n            description: tr(\"constellation6.description\"),\r\n            canShow: stats => stats.constellation >= 6,\r\n            name: <span>During the duration of <b>Stormbreaker</b></span>,\r\n            stats: { electro_enemyRes_: -15, }\r\n          }\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: {\r\n        name: tr(\"constellation1.name\"),\r\n        img: c1,\r\n        sections: [{\r\n          text: tr(\"constellation1.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.constellation >= 1,\r\n            text: <ColorText color=\"electro\">Shield DMG Absorption</ColorText>,\r\n            formulaText: stats => <span>16% {Stat.printStat(\"finalHP\", stats)} * (100% + {Stat.printStat(\"shield_\", stats)}) * (250% <ColorText color=\"electro\">Electro Absorption</ColorText>)</span>,\r\n            formula: formula.constellation1.shieldElectro,\r\n            variant: \"electro\"\r\n          }, {\r\n            canShow: stats => stats.constellation >= 1,\r\n            text: \"Shield DMG Absorption\",\r\n            formulaText: stats => <span>16% {Stat.printStat(\"finalHP\", stats)} * (100% + {Stat.printStat(\"shield_\", stats)})</span>,\r\n            formula: formula.constellation1.shield,\r\n          },]\r\n        }],\r\n      },\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          fields: [{\r\n            text: \"Electro DMG\",\r\n            formulaText: stats => <span>20% {Stat.printStat(getTalentStatKey(\"electro\", stats), stats)}</span>,\r\n            formula: formula.constellation4.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"electro\", stats),\r\n          }]\r\n        }],\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Bennett_Card.88d7ad1d.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.9e2b2a2b.png\";","export default __webpack_public_path__ + \"static/media/IconSide.dec98672.png\";","export default __webpack_public_path__ + \"static/media/Banner.ba04826b.png\";","export default __webpack_public_path__ + \"static/media/constellation1.3732e059.png\";","export default __webpack_public_path__ + \"static/media/constellation2.0ba1e376.png\";","export default __webpack_public_path__ + \"static/media/constellation3.2ef6da49.png\";","export default __webpack_public_path__ + \"static/media/constellation4.c56a9daf.png\";","export default __webpack_public_path__ + \"static/media/constellation5.56a2ec69.png\";","export default __webpack_public_path__ + \"static/media/constellation6.8e23fb7a.png\";","export default __webpack_public_path__ + \"static/media/skill.89cce24e.png\";","export default __webpack_public_path__ + \"static/media/burst.d700f8db.png\";","export default __webpack_public_path__ + \"static/media/passive1.14a0132b.png\";","export default __webpack_public_path__ + \"static/media/passive2.97631d95.png\";","export default __webpack_public_path__ + \"static/media/passive3.8db78b0c.png\";","import card from './Character_Bennett_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { chargedHitsDocSection, conditionalHeader, normalDocSection, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { KeyPath } from '../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../formula'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\n\r\nconst path = KeyPath<FormulaPathBase, any>().character.Bennett\r\nconst tr = (strKey: string) => <Translate ns=\"char_Bennett_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"pyro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"M\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          chargedHitsDocSection(tr, formula, data),\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [\r\n            ...[[\"press\", \"Press DMG\"], [\"lvl1hit1\", \"Lvl 1 1st Hit DMG\"], [\"lvl1hit2\", \"Lvl 1 2nd Hit DMG\"], [\"lvl2hit1\", \"Lvl 2 1st Hit DMG\"], [\"lvl2hit2\", \"Lvl 2 2nd Hit DMG\"], [\"explosion\", \"Explosion DMG\"]].map(([key, text]) => ({\r\n              text,\r\n              formulaText: stats => <span>{data.skill[key][stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n              formula: formula.skill[key],\r\n              variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n            })), {\r\n              text: \"CD\",\r\n              value: stats => stats.ascension >= 1 ? \"4s / 6s/ 8s\" : \"5s / 7.5s/ 10s\",\r\n            }, {\r\n              text: <span>CD in <b>Fantastic Voyage</b>'s circle</span>,\r\n              value: \"2s / 3s/ 4s\",\r\n            }]\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Continuous Regeneration Per Sec\",\r\n            formulaText: stats => <span>( {data.burst.healHP[stats.tlvl.burst]}% Max HP + {data.burst.healHPFlat[stats.tlvl.burst]} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.burst.regen,\r\n            variant: \"success\",\r\n          }, {\r\n            text: \"Duration\",\r\n            value: \"12s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"15s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 60,\r\n          }],\r\n          conditional: { // Fantastic Voyage\r\n            key: \"q\",\r\n            name: tr(\"burst.name\"),\r\n            partyBuff: \"partyActive\",\r\n            header: conditionalHeader(\"burst\", tr, burst),\r\n            description: tr(\"burst.description\"),\r\n            stats: {\r\n              modifiers: { atk: [path.burst.atkBonus()] },\r\n            },\r\n            fields: [{\r\n              text: \"ATK Bonus\",\r\n              formulaText: stats => <span>{stats.constellation < 1 ? data.burst.atkRatio[stats.tlvl.burst] : `(${data.burst.atkRatio[stats.tlvl.burst]} + 20)`}% {Stat.printStat(\"baseATK\", stats, true)}</span>,\r\n              formula: formula.burst.atkBonus\r\n            },]\r\n          },\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: {\r\n        name: tr(\"constellation2.name\"),\r\n        img: c2,\r\n        sections: [{\r\n          text: tr(\"constellation2.description\"),\r\n          conditional: { // Impasse Conqueror\r\n            key: \"c2\",\r\n            canShow: stats => stats.constellation >= 2,\r\n            name: \"When HP falls below 70%\",\r\n            stats: { enerRech_: 30 }\r\n          },\r\n        }],\r\n      },\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: tr(\"constellation6.description\"),\r\n          conditional: { // Fire Ventures With Me\r\n            key: \"c6\",\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"constellation6\", tr, c6),\r\n            description: tr(\"constellation6.description\"),\r\n            canShow: stats => stats.constellation >= 6,\r\n            name: \"Sword, Claymore, or Polearm-wielding characters inside Fantastic Voyage's radius\",\r\n            stats: { pyro_dmg_: 15, infusionAura: \"pyro\" }\r\n          }\r\n        }],\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Chongyun_Card.5c6a3b9f.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.0a665772.png\";","export default __webpack_public_path__ + \"static/media/IconSide.23baaa3d.png\";","export default __webpack_public_path__ + \"static/media/Banner.0373bdc8.png\";","export default __webpack_public_path__ + \"static/media/constellation1.010b4d63.png\";","export default __webpack_public_path__ + \"static/media/constellation2.a2696094.png\";","export default __webpack_public_path__ + \"static/media/constellation3.dd3c8839.png\";","export default __webpack_public_path__ + \"static/media/constellation4.56d58b01.png\";","export default __webpack_public_path__ + \"static/media/constellation5.7cfe1a85.png\";","export default __webpack_public_path__ + \"static/media/constellation6.cd392df1.png\";","export default __webpack_public_path__ + \"static/media/skill.7cfe1a85.png\";","export default __webpack_public_path__ + \"static/media/burst.790bbcc8.png\";","export default __webpack_public_path__ + \"static/media/passive1.7b8a7d74.png\";","export default __webpack_public_path__ + \"static/media/passive2.f3f217d1.png\";","export default __webpack_public_path__ + \"static/media/passive3.32b68928.png\";","import card from './Character_Chongyun_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { claymoreChargedDocSection, conditionalHeader, normalDocSection, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Chongyun_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"cryo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"M\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          claymoreChargedDocSection(tr, formula, data),\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Infusion Duration\",\r\n            value: stats => `${data.skill.infusionDuration[stats.tlvl.skill]}s`,\r\n          }, {\r\n            text: \"Field Duration\",\r\n            value: \"10s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"15s\",\r\n          }],\r\n          conditional: {\r\n            key: \"e\",\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"skill\", tr, skill),\r\n            description: tr(\"skill.description\"),\r\n            name: \"All Sword, Claymore and Polearm-wielding characters within Frost Field\",\r\n            stats: stats => ({\r\n              infusionAura: \"cryo\",\r\n              ...(stats.ascension >= 1 ? { atkSPD_: 8 } : {})\r\n            })\r\n          }\r\n        }, {\r\n          conditional: { // Rimechaser Blade\r\n            key: \"a4\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            name: \"Opponents hit by Rimechase Blade\",\r\n            stats: { cryo_enemyRes_: -10 },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"8s\",\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"12s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 40,\r\n          }, {\r\n            text: \"Spirit Blades Summoned\",\r\n            value: stats => stats.constellation < 6 ? 3 : 4\r\n          }],\r\n          conditional: { // Rally of Four Blades\r\n            key: \"c6\",\r\n            canShow: stats => stats.constellation >= 6,\r\n            name: \"Enemy with lower MaxHP% than Chongyun\",\r\n            stats: { burst_dmg_: 15 }\r\n          }\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: \"Summoned Sword DMG\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.passive2.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }]\r\n        }],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: {\r\n        name: tr(\"constellation1.name\"),\r\n        img: c1,\r\n        sections: [{\r\n          text: tr(\"constellation1.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.constellation >= 1,\r\n            text: \"Ice Blade DMG\",\r\n            formulaText: stats => <span>50% {Stat.printStat(getTalentStatKey(\"elemental\", stats), stats)}</span>,\r\n            formula: formula.constellation1.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"elemental\", stats),\r\n          }]\r\n        }]\r\n      },\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Diluc_Card.d2358b68.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.90fea457.png\";","export default __webpack_public_path__ + \"static/media/IconSide.6e5e5730.png\";","export default __webpack_public_path__ + \"static/media/Banner.e4146e57.png\";","export default __webpack_public_path__ + \"static/media/constellation1.757ae2c7.png\";","export default __webpack_public_path__ + \"static/media/constellation2.d64b9e80.png\";","export default __webpack_public_path__ + \"static/media/constellation3.b4c0f0f6.png\";","export default __webpack_public_path__ + \"static/media/constellation4.1d82ec00.png\";","export default __webpack_public_path__ + \"static/media/constellation5.0a3fb9d8.png\";","export default __webpack_public_path__ + \"static/media/constellation6.6276e6d7.png\";","export default __webpack_public_path__ + \"static/media/skill.b4c0f0f6.png\";","export default __webpack_public_path__ + \"static/media/burst.0ac0da78.png\";","export default __webpack_public_path__ + \"static/media/passive1.8a8bf18c.png\";","export default __webpack_public_path__ + \"static/media/passive2.d829969f.png\";","export default __webpack_public_path__ + \"static/media/passive3.6c3acbd1.png\";","import card from './Character_Diluc_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { claymoreChargedDocSection, normalDocSection, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Diluc_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"pyro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"M\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          claymoreChargedDocSection(tr, formula, data),\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [\r\n            ...[[\"hit1\", \"1-Hit DMG\"], [\"hit2\", \"2-Hit DMG\"], [\"hit3\", \"3-Hit DMG\"]].map(([key, text]) => ({\r\n              text,\r\n              formulaText: stats => <span>{formula.skill[key][stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n              formula: formula.skill[key],\r\n              variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n            })),\r\n            {\r\n              canShow: stats => stats.constellation >= 4,\r\n              text: \"2-Hit DMG(Boosted)\",\r\n              formulaText: stats => <span>{data.skill.hit2[stats.tlvl.skill]}% + 40% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n              formula: formula.skill.hit2b,\r\n              variant: stats => getTalentStatKeyVariant(\"skill\", stats)\r\n            }, {\r\n              canShow: stats => stats.constellation >= 4,\r\n              text: \"3-Hit DMG(Boosted)\",\r\n              formulaText: stats => <span>{data.skill.hit3[stats.tlvl.skill]}% + 40% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n              formula: formula.skill.hit3b,\r\n              variant: stats => getTalentStatKeyVariant(\"skill\", stats)\r\n            }, {\r\n              text: \"CD\",\r\n              value: \"12s\",\r\n            }]\r\n        }, {\r\n          conditional: { // Flaming Sword Nemesis of Dark\r\n            key: \"c6\",\r\n            canShow: stats => stats.constellation >= 6,\r\n            name: <span>After casting <b>Searing Onslaught</b></span>,\r\n            stats: {\r\n              normal_dmg_: 30,\r\n              atkSPD_: 30,\r\n            },\r\n            fields: [{\r\n              text: \"Next 2 Normal Attack within\",\r\n              value: \"6s\",\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [\r\n            ...[[\"slashing\", \"Slashing DMG\"], [\"dot\", \"DoT\"], [\"explosion\", \"Explosion DMG\"]].map(([key, text]) => ({\r\n              text,\r\n              formulaText: stats => <span>{formula.burst[key][stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n              formula: formula.burst[key],\r\n              variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n            })),\r\n            {\r\n              text: \"CD\",\r\n              value: \"12s\",\r\n            }, {\r\n              text: \"Energy Cost\",\r\n              value: 40,\r\n            }],\r\n          conditional: {//Dawn\r\n            key: \"q\",\r\n            name: <b>Dawn</b>,\r\n            stats: stats => ({\r\n              infusionSelf: \"pyro\",\r\n              ...stats.ascension >= 4 && { pyro_dmg_: 20 } // Blessing of Phoenix\r\n            }),\r\n            fields: [{\r\n              text: \"Infusion Duration\",\r\n              value: stats => \"8s\" + (stats.ascension > 4 ? \" + 4s\" : \"\"),\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: {\r\n        name: tr(\"constellation1.name\"),\r\n        img: c1,\r\n        sections: [{\r\n          text: tr(\"constellation1.description\"),\r\n          conditional: { // Conviction\r\n            key: \"c1\",\r\n            canShow: stats => stats.constellation >= 1,\r\n            name: \"Enemies with >50% HP\",\r\n            stats: { dmg_: 15 },\r\n          },\r\n        }],\r\n      },\r\n      constellation2: {\r\n        name: tr(\"constellation2.name\"),\r\n        img: c2,\r\n        sections: [{\r\n          text: tr(\"constellation2.description\"),\r\n          conditional: { // SearingEmber\r\n            key: \"c2\",\r\n            canShow: stats => stats.constellation >= 2,\r\n            name: \"Take DMG\",\r\n            maxStack: 3,\r\n            stats: {\r\n              atk_: 10,\r\n              atkSPD_: 5\r\n            },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"10s\",\r\n            }]\r\n          }\r\n        }],\r\n      },\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Diona_Card.0c68591f.png\";","export default __webpack_public_path__ + \"static/media/Icon.22ff0013.png\";","export default __webpack_public_path__ + \"static/media/IconSide.b0606b97.png\";","export default __webpack_public_path__ + \"static/media/Banner.e82598c6.png\";","export default __webpack_public_path__ + \"static/media/constellation1.8201fd2d.png\";","export default __webpack_public_path__ + \"static/media/constellation2.08dd46c8.png\";","export default __webpack_public_path__ + \"static/media/constellation3.a36218a8.png\";","export default __webpack_public_path__ + \"static/media/constellation4.cbdb0130.png\";","export default __webpack_public_path__ + \"static/media/constellation5.66f96786.png\";","export default __webpack_public_path__ + \"static/media/constellation6.b96813be.png\";","export default __webpack_public_path__ + \"static/media/skill.66f96786.png\";","export default __webpack_public_path__ + \"static/media/burst.cdb7f6c4.png\";","export default __webpack_public_path__ + \"static/media/passive1.09c55734.png\";","export default __webpack_public_path__ + \"static/media/passive2.3e321879.png\";","export default __webpack_public_path__ + \"static/media/passive3.0159e62d.png\";","import card from './Character_Diona_Card.png'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { bowChargedDocSection, conditionalHeader, normalDocSection, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport ColorText from '../../../Components/ColoredText'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Diona_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"cryo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          bowChargedDocSection(tr, formula, data, \"cryo\"),\r\n          plungeDocSection(tr, formula, data)\r\n        ]\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: <ColorText color=\"cryo\">Shield DMG Absorption</ColorText>,\r\n            formulaText: stats => <span>( {data.skill.shieldHp[stats.tlvl.skill]}% {Stat.printStat(\"finalHP\", stats)} + {data.skill.shieldFlat[stats.tlvl.skill]} ) * (100% + {Stat.printStat(\"shield_\", stats)}) * (250% <ColorText color=\"cryo\">Cryo Absorption</ColorText>){stats.constellation >= 2 ? \" * 115%\" : \"\"}</span>,\r\n            formula: formula.skill.shieldCryo,\r\n            variant: \"cryo\"\r\n          }, {\r\n            text: \"Shield DMG Absorption\",\r\n            formulaText: stats => <span>( {data.skill.shieldHp[stats.tlvl.skill]}% {Stat.printStat(\"finalHP\", stats)} + {data.skill.shieldFlat[stats.tlvl.skill]} ) * (100% + {Stat.printStat(\"shield_\", stats)}){stats.constellation >= 2 ? \" * 115%\" : \"\"}</span>,\r\n            formula: formula.skill.shield,\r\n          }, {\r\n            text: <ColorText color=\"cryo\">Hold Shield DMG Absorption</ColorText>,\r\n            formulaText: stats => <span>( {data.skill.shieldHp[stats.tlvl.skill]}% {Stat.printStat(\"finalHP\", stats)} + {data.skill.shieldFlat[stats.tlvl.skill]} ) * (100% + {Stat.printStat(\"shield_\", stats)}) * (250% <ColorText color=\"cryo\">Cryo Absorption</ColorText>) * 175%{stats.constellation >= 2 ? \" * 115%\" : \"\"}</span>,\r\n            formula: formula.skill.shieldHoldCryo,\r\n            variant: \"cryo\"\r\n          }, {\r\n            text: \"Hold Shield DMG Absorption\",\r\n            formulaText: stats => <span>( {data.skill.shieldHp[stats.tlvl.skill]}% {Stat.printStat(\"finalHP\", stats)} + {data.skill.shieldFlat[stats.tlvl.skill]} ) * (100% + {Stat.printStat(\"shield_\", stats)}) * 175%{stats.constellation >= 2 ? \" * 115%\" : \"\"}</span>,\r\n            formula: formula.skill.shieldHold,\r\n          }, {\r\n            text: \"Icy Paw DMG\",\r\n            formulaText: stats => <span>{data.skill.dmgPerPaw[stats.tlvl.skill]}%{stats.constellation >= 2 ? \" + 15%\" : \"\"} {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Duration per Paw\",\r\n            value: stats => `${data.skill.durationPerPaw[stats.tlvl.skill]}s`,\r\n          }, {\r\n            text: \"Press CD\",\r\n            value: \"6s\",\r\n          }, {\r\n            text: \"Hold CD\",\r\n            value: \"15s\",\r\n          }],\r\n          conditional: { // IcyPawsShield\r\n            key: \"a1\",\r\n            canShow: stats => stats.ascension >= 1,\r\n            name: \"Characters Shielded\",\r\n            partyBuff: \"partyActive\",\r\n            header: conditionalHeader(\"passive1\", tr, passive1),\r\n            description: tr(\"passive1.description\"),\r\n            stats: {\r\n              moveSPD_: 10,\r\n              staminaDec_: 10\r\n            },\r\n          },\r\n        }]\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Continuous Field DMG\",\r\n            formulaText: stats => <span>{data.burst.continuousDmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.continuousDmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"HP Regeneration Over Time\",\r\n            formulaText: stats => <span>( {data.burst.hpPercent[stats.tlvl.burst]}% {Stat.printStat(\"finalHP\", stats)} + {data.burst.hpFlat[stats.tlvl.burst]} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.burst.regen,\r\n            variant: \"success\",\r\n          }, {\r\n            text: \"Duration\",\r\n            value: \"12s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"20s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 80,\r\n          }],\r\n          conditional: { // CatsTailClosingTimeBelow50 (near)\r\n            key: \"c6n\",\r\n            canShow: stats => stats.constellation >= 6,\r\n            name: \"Characters within radius below or equal 50% HP\",\r\n            partyBuff: \"partyActive\",\r\n            header: conditionalHeader(\"constellation6\", tr, c6),\r\n            description: tr(\"constellation6.description\"),\r\n            stats: { incHeal_: 30 },\r\n          },\r\n        }, {\r\n          conditional: { // TailClosingTimeAbove50 (far)\r\n            key: \"c6f\",\r\n            canShow: stats => stats.constellation >= 6,\r\n            name: \"Characters within radius above 50% HP\",\r\n            partyBuff: \"partyActive\",\r\n            header: conditionalHeader(\"constellation6\", tr, c6),\r\n            description: tr(\"constellation6.description\"),\r\n            stats: { eleMas: 200 },\r\n          }\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),//TODO: enemy atk decrease\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: {\r\n        name: tr(\"constellation2.name\"),\r\n        img: c2,\r\n        sections: [{\r\n          text: tr(\"constellation2.description\"),\r\n          conditional: {\r\n            key: \"c2\",\r\n            canShow: stats => stats.constellation >= 2,\r\n            maxStack: 0,\r\n            stats: { skill_dmg_: 15 }\r\n          }\r\n        }],\r\n      },\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Eula_Card.0ffc72fe.png\";","export default __webpack_public_path__ + \"static/media/Icon.4c47e698.png\";","export default __webpack_public_path__ + \"static/media/IconSide.06c5894c.png\";","export default __webpack_public_path__ + \"static/media/Banner.139577d6.png\";","export default __webpack_public_path__ + \"static/media/constellation1.6c44dbba.png\";","export default __webpack_public_path__ + \"static/media/constellation2.6b98a5e5.png\";","export default __webpack_public_path__ + \"static/media/constellation3.f81d46ca.png\";","export default __webpack_public_path__ + \"static/media/constellation4.a85d4036.png\";","export default __webpack_public_path__ + \"static/media/constellation5.50e10471.png\";","export default __webpack_public_path__ + \"static/media/constellation6.e112b6f0.png\";","export default __webpack_public_path__ + \"static/media/skill.50e10471.png\";","export default __webpack_public_path__ + \"static/media/burst.e3ff66c9.png\";","export default __webpack_public_path__ + \"static/media/passive1.5b36a8ee.png\";","export default __webpack_public_path__ + \"static/media/passive2.590fed8a.png\";","export default __webpack_public_path__ + \"static/media/passive3.bb77996f.png\";","import card from './Character_Eula_Card.png'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { claymoreChargedDocSection, normalSrc, plungeDocSection, sgt, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Eula_gen\" key18={strKey} />\r\nconst Eula = (strKey: string) => <Translate ns=\"char_Eula\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"cryo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [{\r\n          text: tr(\"auto.fields.normal\"),\r\n          fields: data.normal.hitArr.map((percentArr, i) =>\r\n          ({\r\n            text: <span>{sgt(`normal.hit${i + 1}`)} {i === 2 || i === 4 ? <span>(<Translate ns=\"sheet\" key18=\"hits\" values={{ count: 2 }} />)</span> : \"\"}</span>,\r\n            formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n            formula: formula.normal[i],\r\n            variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n          }))\r\n        },\r\n        claymoreChargedDocSection(tr, formula, data),\r\n        plungeDocSection(tr, formula, data)],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: sgt(\"press.dmg\"),\r\n            formulaText: stats => <span>{data.skill.pressDMG[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.pressDMG,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: sgt(\"press.cd\"),\r\n            value: data.skill.cdPress,\r\n            unit: \"s\"\r\n          }, {\r\n            text: sgt(\"hold.dmg\"),\r\n            formulaText: stats => <span>{data.skill.holdDMG[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.holdDMG,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: sgt(\"hold.cd\"),\r\n            value: stats => stats.constellation >= 2 ? data.skill.cdPress : data.skill.cdHold,\r\n            unit: \"s\"\r\n          },],\r\n          conditional: {\r\n            key: \"e\",\r\n            name: Eula(\"skillC.name\"),\r\n            states: {\r\n              g: {//grimheart\r\n                name: Eula(\"skillC.grimheart.name\"),\r\n                stats: { def_: 30 },\r\n                fields: [{\r\n                  text: Eula(\"skillC.grimheart.int\"),\r\n                }, {\r\n                  text: tr(\"skill.grimheartDuration\"),\r\n                  value: \"18s\"\r\n                }, {\r\n                  text: sgt(\"maxStacks\"),\r\n                  value: 2\r\n                }]\r\n              },\r\n              c: {//consumed\r\n                name: Eula(\"skillC.consumed\"),\r\n                stats: stats => ({\r\n                  cryo_enemyRes_: -data.skill.cyroResDec[stats.tlvl.skill],\r\n                  physical_enemyRes_: -data.skill.cyroResDec[stats.tlvl.skill],\r\n                }),\r\n                fields: [{\r\n                  text: sgt(\"duration\"),\r\n                  value: \"7s\"\r\n                }]\r\n              }\r\n            }\r\n          },\r\n        }, {\r\n          fields: [{\r\n            text: tr(\"skill.brandDMG\"),\r\n            formulaText: stats => <span>{data.skill.brandDMG[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.brandDMG,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }],\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: sgt(\"burstDMG\"),\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: sgt(\"cd\"),\r\n            value: data.burst.cd,\r\n            unit: \"s\"\r\n          }, {\r\n            text: sgt(\"energyCost\"),\r\n            value: data.burst.cost,\r\n          }, {\r\n            text: sgt(\"duration\"),\r\n            value: 7,\r\n            unit: \"s\"\r\n          }],\r\n          conditional: {\r\n            key: \"q\",\r\n            name: Eula(\"burstC.name\"),\r\n            states: Object.fromEntries([...Array(31).keys()].map(i =>\r\n              [i, {\r\n                name: i === 0 ? sgt(\"baseDMG\") : <Translate ns=\"sheet\" key18=\"stack\" values={{ count: i }} />,\r\n                fields: [{//above 50%\r\n                  text: <span>{Eula(\"burstC.name\")} {i === 0 ? sgt(\"baseDMG\") : <Translate ns=\"sheet\" key18=\"stack\" values={{ count: i }} />}</span>,\r\n                  canShow: stats => {\r\n                    if (i < 5 && stats.constellation >= 6) return false\r\n                    const [stacks, stateKey] = stats.conditionalValues?.character?.Eula?.q ?? []\r\n                    return !!stacks && stateKey === i.toString()\r\n                  },\r\n                  formulaText: stats => {\r\n                    const val = i === 0 ? <span>{data.burst.baseDMG[stats.tlvl.burst]}%</span> : <span>( {data.burst.baseDMG[stats.tlvl.burst]}% + {i} * {data.burst.stackDMG[stats.tlvl.burst]}% )</span>\r\n                    const statKey = getTalentStatKey(\"burst\", stats, \"physical\")\r\n                    return <span>{val} {Stat.printStat(statKey, stats)}</span>\r\n                  },\r\n                  formula: formula.burst[i],\r\n                  variant: stats => getTalentStatKeyVariant(\"burst\", stats, \"physical\"),\r\n                }, {//below 50%\r\n                  text: <span>{Eula(\"burstC.name\")} {i === 0 ? sgt(\"baseDMG\") : <Translate ns=\"sheet\" key18=\"stack\" values={{ count: i }} />} <Translate ns=\"sheet\" key18=\"lessPercentHP\" values={{ percent: 50 }} /></span>,\r\n                  canShow: stats => {\r\n                    if (stats.constellation < 4) return false\r\n                    if (i < 5 && stats.constellation >= 6) return false\r\n                    const [stacks, stateKey] = stats.conditionalValues?.character?.Eula?.q ?? []\r\n                    return !!stacks && stateKey === i.toString()\r\n                  },\r\n                  formulaText: stats => {\r\n                    const val = i === 0 ? <span>{data.burst.baseDMG[stats.tlvl.burst]}%</span> : <span>( {data.burst.baseDMG[stats.tlvl.burst]}% + {i} * {data.burst.stackDMG[stats.tlvl.burst]}% )</span>\r\n                    const hitModeMultiKey = stats.hitMode === \"avgHit\" ? \"skill_avgHit_base_multi\" : stats.hitMode === \"critHit\" ? \"critHit_base_multi\" : \"\"\r\n                    return <span>{val} {Stat.printStat(\"finalATK\", stats)} * {(hitModeMultiKey ? <span>{Stat.printStat(hitModeMultiKey, stats)} * </span> : \"\")}( {Stat.printStat(\"physical_burst_hit_base_multi\", stats)} + 25%) * {Stat.printStat(\"enemyLevel_multi\", stats)} * {Stat.printStat(\"physical_enemyRes_multi\", stats)}</span>\r\n                  },\r\n                  formula: formula.burst[`${i}_50`],\r\n                  variant: stats => getTalentStatKeyVariant(\"burst\", stats, \"physical\"),\r\n                }, {\r\n                  canShow: stats => stats.constellation >= 6,\r\n                  text: Eula(\"burstC.start5\")\r\n                }, {\r\n                  canShow: stats => stats.constellation >= 6,\r\n                  text: Eula(\"burstC.addStacks\")\r\n                }]\r\n              }])),\r\n          },\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.ascension >= 1,\r\n            text: Eula(\"passive1\"),\r\n            formulaText: stats => <span>50% * {data.burst.baseDMG[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats, \"physical\"), stats)}</span>,\r\n            formula: formula.passive1.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats, \"physical\")\r\n          }, {//below 50% hp\r\n            canShow: stats => stats.constellation >= 4,\r\n            text: <span>{Eula(\"passive1\")} <Translate ns=\"sheet\" key18=\"lessPercentHP\" values={{ percent: 50 }} /></span>,\r\n            formulaText: stats => {\r\n              const hitModeMultiKey = stats.hitMode === \"avgHit\" ? \"skill_avgHit_base_multi\" : stats.hitMode === \"critHit\" ? \"critHit_base_multi\" : \"\"\r\n              return <span>50% * {data.burst.baseDMG[stats.tlvl.burst]}% {Stat.printStat(\"finalATK\", stats)} * {(hitModeMultiKey ? <span>{Stat.printStat(hitModeMultiKey, stats)} * </span> : \"\")}( {Stat.printStat(\"physical_burst_hit_base_multi\", stats)} + 25%) * {Stat.printStat(\"enemyLevel_multi\", stats)} * {Stat.printStat(\"physical_enemyRes_multi\", stats)}</span>\r\n            },\r\n            formula: formula.passive1.dmg50,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats, \"physical\")\r\n          }]\r\n        }],\r\n      },\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: {\r\n        name: tr(\"constellation1.name\"),\r\n        img: c1,\r\n        sections: [{\r\n          text: tr(\"constellation1.description\"),\r\n          conditional: {\r\n            key: \"c1\",\r\n            name: Eula(\"c1C.name\"),\r\n            canShow: stats => stats.constellation >= 1,\r\n            stats: {\r\n              physical_dmg_: 30\r\n            },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: Eula(\"c1C.durationStack\"),\r\n            }]\r\n          }\r\n        }]\r\n      },\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    }\r\n  }\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Fischl_Card.10be47a2.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.00b175c4.png\";","export default __webpack_public_path__ + \"static/media/IconSide.91965c66.png\";","export default __webpack_public_path__ + \"static/media/Banner.a8b3ad8f.png\";","export default __webpack_public_path__ + \"static/media/constellation1.2770cd23.png\";","export default __webpack_public_path__ + \"static/media/constellation2.6d92f077.png\";","export default __webpack_public_path__ + \"static/media/constellation3.b614b64a.png\";","export default __webpack_public_path__ + \"static/media/constellation4.9728b46b.png\";","export default __webpack_public_path__ + \"static/media/constellation5.7130548a.png\";","export default __webpack_public_path__ + \"static/media/constellation6.ff8de39c.png\";","export default __webpack_public_path__ + \"static/media/skill.ea835e52.png\";","export default __webpack_public_path__ + \"static/media/burst.f340eb0d.png\";","export default __webpack_public_path__ + \"static/media/passive1.12f808db.png\";","export default __webpack_public_path__ + \"static/media/passive2.a7464b12.png\";","export default __webpack_public_path__ + \"static/media/passive3.8db78b0c.png\";","import card from './Character_Fischl_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { normalDocSection, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport ColorText from '../../../Components/ColoredText'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Fischl_gen\" key18={strKey} />\r\n\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"electro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          {\r\n            text: tr(\"auto.fields.charged\"),\r\n            fields: [{\r\n              text: `Aimed Shot DMG`,\r\n              formulaText: stats => <span>{data.charged.aimedShot[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n              formula: formula.charged.aimShot,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n            }, {\r\n              text: `Fully-Charged Aimed Shot DMG`,\r\n              formulaText: stats => <span>{data.charged.fullAimedShot[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats, \"electro\"), stats)}</span>,\r\n              formula: formula.charged.fullAimedShot,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats, \"electro\"),\r\n            }, {\r\n              canShow: stats => stats.ascension >= 1,\r\n              text: <span>Full Aimed Shot on Oz <ColorText color=\"electro\">AoE</ColorText></span>,\r\n              formulaText: stats => <span>152.7% * {data.charged.fullAimedShot[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats, \"electro\"), stats)}</span>,\r\n              formula: formula.charged.fullAimedShotOz,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats, \"electro\"),\r\n            }]\r\n          },\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Oz's ATK DMG\",\r\n            formulaText: stats => <span>{data.skill.oz[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.oz,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Summoning DMG\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}%{stats.constellation >= 2 ? \" + 200%\" : \"\"} {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.constellation >= 6,\r\n            text: \"Attack with Active Character\",\r\n            formulaText: stats => <span>30% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.activeChar,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Duration\",\r\n            value: stats => stats.constellation < 6 ? \"10s\" : \"10s + 2s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"25s\",\r\n          }, {\r\n            canShow: stats => stats.constellation >= 2,\r\n            text: \"AoE Increase\",\r\n            value: \"50%\",\r\n          }]\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Falling Thunder DMG\",\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            canShow: stats => stats.constellation >= 4,\r\n            text: \"Additional AoE Damage\",\r\n            formulaText: stats => <span>222% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.addDmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            canShow: stats => stats.constellation >= 4,\r\n            text: \"HP Recovered\",\r\n            formulaText: stats => <span>( 20% {Stat.printStat(\"finalHP\", stats)} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.burst.regen,\r\n            variant: \"success\"\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"15s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 60,\r\n          },]\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: \"Thundering Retribution\",\r\n            formulaText: stats => <span>80% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.passive2.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }]\r\n        }],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: {\r\n        name: tr(\"constellation1.name\"),\r\n        img: c1,\r\n        sections: [{\r\n          text: tr(\"constellation1.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.constellation >= 1,\r\n            text: \"Joint Attack DMG\",\r\n            formulaText: stats => <span>22% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n            formula: formula.constellation1.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n          }]\r\n        }],\r\n      },\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Ganyu_Card.7fed6f9d.png\";","export default __webpack_public_path__ + \"static/media/Icon.c778ed40.png\";","export default __webpack_public_path__ + \"static/media/IconSide.80966cb4.png\";","export default __webpack_public_path__ + \"static/media/Banner.6367e050.png\";","export default __webpack_public_path__ + \"static/media/constellation1.1c9c469f.png\";","export default __webpack_public_path__ + \"static/media/constellation2.eab089d7.png\";","export default __webpack_public_path__ + \"static/media/constellation3.c42057ff.png\";","export default __webpack_public_path__ + \"static/media/constellation4.75835e8e.png\";","export default __webpack_public_path__ + \"static/media/constellation5.5f03af42.png\";","export default __webpack_public_path__ + \"static/media/constellation6.38ae2c80.png\";","export default __webpack_public_path__ + \"static/media/skill.5f03af42.png\";","export default __webpack_public_path__ + \"static/media/burst.cc9591cb.png\";","export default __webpack_public_path__ + \"static/media/passive1.71a400af.png\";","export default __webpack_public_path__ + \"static/media/passive2.807a61cb.png\";","export default __webpack_public_path__ + \"static/media/passive3.48c65ca0.png\";","import card from './Character_Ganyu_Card.png'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\n\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { conditionalHeader, normalDocSection, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Ganyu_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"cryo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          {\r\n            text: tr(\"auto.fields.charged\"),\r\n            fields: [{\r\n              text: `Aimed Shot`,\r\n              formulaText: stats => <span>{data.charged.aimedShot[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n              formula: formula.charged.aimShot,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n            }, {\r\n              text: `Aimed Shot Charge Level 1`,\r\n              formulaText: stats => <span>{data.charged.aimShot1[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats, \"cryo\"), stats)}</span>,\r\n              formula: formula.charged.aimShot1,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats, \"cryo\"),\r\n            }, {\r\n              text: `Frostflake Arrow DMG`,\r\n              formulaText: stats => {\r\n                if (stats.hitMode === \"avgHit\") {\r\n                  const [conditionalNum] = stats.conditionalValues?.character?.Ganyu?.a1 ?? []\r\n                  if (conditionalNum) {\r\n                    const statKey = `cryo${stats.reactionMode === \"cryo_melt\" ? \"_melt\" : \"\"}_charged_hit`\r\n                    return <span>{data.charged.frostflake[stats.tlvl.auto]}% {Stat.printStat(statKey, stats)} * (1 + Min( 100% , 20% + {Stat.printStat(\"critRate_\", stats)} + {Stat.printStat(\"charged_critRate_\", stats)} ) * {Stat.printStat(\"critDMG_\", stats)} )</span>\r\n                  }\r\n                }\r\n                return <span>{data.charged.frostflake[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats, \"cryo\"), stats)}</span>\r\n              },\r\n              formula: formula.charged.frostflake,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats, \"cryo\"),\r\n            }, {\r\n              text: `Frostflake Arrow Bloom DMG`,\r\n              formulaText: stats => {\r\n                if (stats.hitMode === \"avgHit\") {\r\n                  const [conditionalNum] = stats.conditionalValues?.character?.Ganyu?.a1 ?? []\r\n                  if (conditionalNum) {\r\n                    const statKey = `cryo${stats.reactionMode === \"cryo_melt\" ? \"_melt\" : \"\"}_charged_hit`\r\n                    return <span>{data.charged.frostflakeBloom[stats.tlvl.auto]}% {Stat.printStat(statKey, stats)} * (1 + Min( 100% , 20% + {Stat.printStat(\"critRate_\", stats)} + {Stat.printStat(\"charged_critRate_\", stats)} ) * {Stat.printStat(\"critDMG_\", stats)} )</span>\r\n                  }\r\n                }\r\n                return <span>{data.charged.frostflakeBloom[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats, \"cryo\"), stats)}</span>\r\n              },\r\n              formula: formula.charged.frostflakeBloom,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats, \"cryo\"),\r\n            },],\r\n            conditional: { // UndividedHeart\r\n              key: \"a1\",\r\n              canShow: stats => stats.ascension >= 1,\r\n              name: <span>After firing a <b>Frostflake</b> Arrow</span>,\r\n              fields: [{\r\n                text: \"Frostflake CRIT Rate\",\r\n                value: \"+20%\",\r\n              }, {\r\n                text: \"Duration\",\r\n                value: \"5s\",\r\n              }]\r\n            },\r\n          }, {\r\n            conditional: { // DewDrinker\r\n              key: \"c1\",\r\n              canShow: stats => stats.constellation >= 1,\r\n              name: <span>Opponent taking DMG from a Charge Level 2 <b>Frostflake Arrow</b> or <b>Frostflake Arrow Bloom</b> decreases opponents</span>,\r\n              stats: { cryo_enemyRes_: -15 },\r\n            },\r\n          },\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Inherited HP\",\r\n            formulaText: stats => <span>{data.skill.hp[stats.tlvl.skill]}% {Stat.printStat(\"finalHP\", stats)}</span>,\r\n            formula: formula.skill.hp,\r\n            variant: \"success\",\r\n          }, {\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Duration\",\r\n            value: \"6s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"10s\",\r\n          }, {\r\n            canShow: stats => stats.constellation >= 2,\r\n            text: \"Charges\",\r\n            value: 2\r\n          }]\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Ice Shard DMG\",\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Duration\",\r\n            value: \"15s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"15s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 60,\r\n          }],\r\n          conditional: { // Harmony\r\n            key: \"a4\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            partyBuff: \"partyActive\",\r\n            header: conditionalHeader(\"passive2\", tr, passive2),\r\n            description: tr(\"passive2.description\"),\r\n            name: <span>Active members in the AoE of <b>Celestial Shower</b></span>,\r\n            stats: { cryo_dmg_: 20 },\r\n          },\r\n        }, {\r\n          conditional: { // WestwardSojourn\r\n            key: \"c4\",\r\n            canShow: stats => stats.constellation >= 4,\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"constellation4\", tr, c4),\r\n            description: tr(\"constellation4.description\"),\r\n            name: <span>Opponents standing within the AoE of <b>Celestial Shower</b></span>,\r\n            maxStack: 5,\r\n            stats: { dmg_: 5 },\r\n            fields: [{\r\n              text: \"Effect Linger Duration\",\r\n              value: \"3s\"\r\n            }]\r\n          }\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Gorou_Card.4e926de2.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.b8f26adb.png\";","export default __webpack_public_path__ + \"static/media/IconSide.15683a4e.png\";","export default __webpack_public_path__ + \"static/media/Banner.791d5db1.png\";","export default __webpack_public_path__ + \"static/media/constellation1.336255bd.png\";","export default __webpack_public_path__ + \"static/media/constellation2.d7a601af.png\";","export default __webpack_public_path__ + \"static/media/constellation3.27e237d4.png\";","export default __webpack_public_path__ + \"static/media/constellation4.257f351c.png\";","export default __webpack_public_path__ + \"static/media/constellation5.17b93a2b.png\";","export default __webpack_public_path__ + \"static/media/constellation6.bb1f7622.png\";","export default __webpack_public_path__ + \"static/media/skill.27e237d4.png\";","export default __webpack_public_path__ + \"static/media/burst.4d609d5a.png\";","export default __webpack_public_path__ + \"static/media/passive1.1dde9711.png\";","export default __webpack_public_path__ + \"static/media/passive2.a09c80c3.png\";","export default __webpack_public_path__ + \"static/media/passive3.e0975f25.png\";","import card from './Character_Gorou_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { bowChargedDocSection, conditionalHeader, normalSrc, plungeDocSection, sgt, st, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport { Typography } from '@mui/material'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Gorou_gen\" key18={strKey} />\r\nconst charTr = (strKey: string) => <Translate ns=\"char_Gorou\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"geo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"M\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [{\r\n          text: tr(\"auto.fields.normal\"),\r\n          fields: data.normal.hitArr.map((percentArr, i) =>\r\n          ({\r\n            text: <span>{sgt(`normal.hit${i + 1}`)} {i === 2 ? <span>(<Translate ns=\"sheet\" key18=\"hits\" values={{ count: 2 }} />)</span> : \"\"}</span>,\r\n            formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n            formula: formula.normal[i],\r\n            variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n          }))\r\n        },\r\n        bowChargedDocSection(tr, formula, data, \"geo\"),\r\n        plungeDocSection(tr, formula, data)],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: tr(\"skill.skillParams.0\"),\r\n            canShow: stats => stats.ascension < 4,\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: tr(\"skill.skillParams.0\"),\r\n            canShow: stats => stats.ascension >= 4,\r\n            formulaText: stats => <span>( {data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(\"finalATK\", stats)} + {data.passive2.skill_def_}% {Stat.printStat(\"finalDEF\", stats)} ) * {Stat.printStat(getTalentStatKey(\"skill\", stats) + \"_multi\", stats)}</span>,\r\n            formula: formula.skill.dmgA4,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: tr(\"skill.skillParams.3\"),\r\n            value: data.skill.duration,\r\n          }, {\r\n            text: tr(\"skill.skillParams.4\"),\r\n            value: data.skill.cd,\r\n            unit: \"s\"\r\n          },],\r\n          conditional: {\r\n            key: \"e\",\r\n            partyBuff: \"partyActive\",\r\n            header: conditionalHeader(\"skill\", tr, skill),\r\n            description: tr(\"skill.description\"),\r\n            name: charTr(\"e.name\"),\r\n            states: {\r\n              g1: {\r\n                name: charTr(\"e.g1\"),\r\n                stats: stats => ({\r\n                  def: data.skill.def_[stats.tlvl.skill]\r\n                })\r\n              },\r\n              g2: {\r\n                name: charTr(\"e.g2\"),\r\n                stats: stats => ({\r\n                  def: data.skill.def_[stats.tlvl.skill]\r\n                }),\r\n                fields: [{\r\n                  text: st(\"incInterRes\"),\r\n                }],\r\n              },\r\n              g3: {\r\n                name: charTr(\"e.g3\"),\r\n                stats: stats => ({\r\n                  def: data.skill.def_[stats.tlvl.skill],\r\n                  geo_dmg_: data.skill.geo_dmg_[stats.tlvl.skill],\r\n                }),\r\n                fields: [{\r\n                  text: st(\"incInterRes\"),\r\n                }],\r\n              },\r\n            }\r\n          }\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: tr(\"burst.skillParams.0\"),\r\n            formulaText: stats => <span>{stats.ascension >= 4 ? `( ${data.burst.dmg[stats.tlvl.skill]}% + ${data.passive2.burst_def_}% )` : `${data.burst.dmg[stats.tlvl.skill]}%`} {Stat.printStat(\"finalDEF\", stats)} * {Stat.printStat(getTalentStatKey(\"burst\", stats) + \"_multi\", stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.1\"),\r\n            formulaText: stats => <span>{stats.ascension >= 4 ? `( ${data.burst.dmgCollapse[stats.tlvl.skill]}% + ${data.passive2.burst_def_}% )` : `${data.burst.dmgCollapse[stats.tlvl.skill]}%`} {Stat.printStat(\"finalDEF\", stats)} * {Stat.printStat(getTalentStatKey(\"burst\", stats) + \"_multi\", stats)}</span>,\r\n            formula: formula.burst.dmgCollapse,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.2\"),\r\n            value: data.burst.duration,\r\n            unit: \"s\"\r\n          }, {\r\n            text: tr(\"burst.skillParams.3\"),\r\n            value: data.burst.cd,\r\n            unit: \"s\"\r\n          }, {\r\n            text: tr(\"burst.skillParams.4\"),\r\n            value: data.burst.cost,\r\n          },],\r\n          conditional: {\r\n            key: \"a1\",\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"passive1\", tr, passive1),\r\n            description: tr(\"passive1.description\"),\r\n            name: charTr(\"a1.name\"),\r\n            stats: { def_: data.passive1.def_ },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: data.passive1.duration,\r\n              unit: \"s\"\r\n            }]\r\n          }\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          fields: [{\r\n            text: sgt(\"healing\"),\r\n            formulaText: stats => <span>{data.constellation4.heal_def_}% {Stat.printStat(\"finalDEF\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.constellation4.heal,\r\n            variant: \"success\"\r\n          }]\r\n        }]\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: stats => stats.constellation < 6 ? tr(\"constellation6.description\") :\r\n            <span>\r\n              {tr(\"constellation6.description\")}\r\n              <Typography color=\"warning.main\">This skill needs more system changes before it can be implemented.</Typography>\r\n            </span>,\r\n        }],\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default char;","export default __webpack_public_path__ + \"static/media/Character_Hu_Tao_Card.917148e1.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.fa97c7a6.png\";","export default __webpack_public_path__ + \"static/media/IconSide.f81b13dd.png\";","export default __webpack_public_path__ + \"static/media/Banner.a19a248a.png\";","export default __webpack_public_path__ + \"static/media/constellation1.54f61d4b.png\";","export default __webpack_public_path__ + \"static/media/constellation2.3a5234c6.png\";","export default __webpack_public_path__ + \"static/media/constellation3.9ec88e30.png\";","export default __webpack_public_path__ + \"static/media/constellation4.6ec4d597.png\";","export default __webpack_public_path__ + \"static/media/constellation5.0f9c00c0.png\";","export default __webpack_public_path__ + \"static/media/constellation6.b3de371b.png\";","export default __webpack_public_path__ + \"static/media/skill.9ec88e30.png\";","export default __webpack_public_path__ + \"static/media/burst.cce2881e.png\";","export default __webpack_public_path__ + \"static/media/passive1.822483d8.png\";","export default __webpack_public_path__ + \"static/media/passive2.8a494632.png\";","export default __webpack_public_path__ + \"static/media/passive3.f54ef4b0.png\";","import card from './Character_Hu_Tao_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { chargedDocSection, conditionalHeader, normalSrc, plungeDocSection, sgt, st, talentTemplate } from '../SheetUtil'\r\nimport { KeyPath } from '../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../formula'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\n\r\nconst path = KeyPath<FormulaPathBase, any>().character.HuTao\r\nconst tr = (strKey: string) => <Translate ns=\"char_HuTao_gen\" key18={strKey} />\r\n\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"pyro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          {\r\n            text: <span>{tr(`auto.fields.normal`)} <small><i>Note: the 5th attack hits twice.</i></small></span>,\r\n            fields: data.normal.hitArr.map((percentArr, i) =>\r\n            ({\r\n              text: sgt(`normal.hit${i + (i < 5 ? 1 : 0)}`),\r\n              formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n              formula: formula.normal[i],\r\n              variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n            }))\r\n          },\r\n          chargedDocSection(tr, formula, data),\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: <span>\r\n            {tr(\"skill.description\")}\r\n          </span>,\r\n          fields: [{\r\n            text: \"Activation Cost\",\r\n            value: \"30% Current HP\",\r\n          }, {\r\n            canShow: stats => stats.constellation < 2,\r\n            text: \"Blood Blossom DMG\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.constellation >= 2,\r\n            text: \"Blood Blossom DMG (C2)\",\r\n            formulaText: stats => <span>( {data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(\"finalATK\", stats)} + 10% {Stat.printStat(\"finalHP\", stats)} ) * {Stat.printStat(getTalentStatKey(\"skill\", stats) + \"_multi\", stats)}</span>,\r\n            formula: formula.skill.dmgC2,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Blood Blossom Duration\",\r\n            value: \"8s\",\r\n          }, {\r\n            text: \"Duration\",\r\n            value: \"9s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"16s\",\r\n          },],\r\n          conditional: { // GuideToAfterlife\r\n            key: \"e\",\r\n            name: \"Guide to Afterlife Voyage\",\r\n            stats: {\r\n              modifiers: { atk: [path.skill.atk_inc()] },\r\n              infusionSelf: \"pyro\",\r\n            },\r\n            fields: [{\r\n              text: st(\"increase.atk\"),\r\n              formulaText: stats => <span>min( {data.skill.atk_inc[stats.tlvl.skill]}% {Stat.printStat(\"finalHP\", stats, true)}, 400% {Stat.printStat(\"baseATK\", stats, true)} )</span>,\r\n              formula: formula.skill.atk_inc,\r\n            },]\r\n          },\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Low HP Skill DMG\",\r\n            formulaText: stats => <span>{data.burst.low_dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.low_dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Skill HP Regeneration\",\r\n            formulaText: stats => <span>( {data.burst.regen[stats.tlvl.burst]}% {Stat.printStat(\"finalHP\", stats)} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.burst.regen,\r\n            variant: \"success\",\r\n          }, {\r\n            text: \"Low HP Skill Regeneration\",\r\n            formulaText: stats => <span>( {data.burst.low_regen[stats.tlvl.burst]}% {Stat.printStat(\"finalHP\", stats)} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.burst.low_regen,\r\n            variant: \"success\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"15s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 60,\r\n          }, {\r\n            canShow: stats => stats.constellation >= 2,\r\n            text: \"Apply the Blood Blossom effect\",\r\n          }]\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          conditional: { // Flutter By\r\n            key: \"a1p\",\r\n            partyBuff:\"partyOnly\",\r\n            header: conditionalHeader(\"passive1\", tr, passive1),\r\n            description: tr(\"passive1.description\"),\r\n            canShow: stats => stats.ascension >= 1,\r\n            name: <span>When a <strong>Paramita Papilio</strong> state activated by <strong>Guide to Afterlife</strong> ends</span>,\r\n            stats: {\r\n              critRate_: 12,\r\n            },\r\n          },\r\n        }],\r\n      },\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          conditional: { // SanguineRouge\r\n            key: \"a4\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            name: \"HP is equal to or less than 50%\",\r\n            stats: {\r\n              pyro_dmg_: 33,\r\n            },\r\n          },\r\n        }],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          conditional: { // Flutter By\r\n            key: \"c4\",\r\n            partyBuff:\"partyOnly\",\r\n            header: conditionalHeader(\"constellation4\", tr, c4),\r\n            description: tr(\"constellation4.description\"),\r\n            canShow: stats => stats.constellation >= 4,\r\n            name: <span>Upon defeating an enemy affected by a <strong>Blood Blossom</strong> that Hu Tao applied herself</span>,\r\n            stats: {\r\n              critRate_: 12,\r\n            },\r\n          },\r\n        }],\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: tr(\"constellation6.description\"),\r\n          conditional: { // ButterflysEmbrace\r\n            key: \"c6\",\r\n            canShow: stats => stats.constellation >= 6,\r\n            name: \"HP drops below 25%, or suffers a lethal strike\",\r\n            stats: {\r\n              physical_res_: 200,\r\n              anemo_res_: 200,\r\n              geo_res_: 200,\r\n              electro_res_: 200,\r\n              hydro_res_: 200,\r\n              pyro_res_: 200,\r\n              cryo_res_: 200,\r\n              critRate_: 100,\r\n            },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"10s\"\r\n            }, {\r\n              text: \"CD\",\r\n              value: \"60s\"\r\n            }]\r\n          }\r\n        }],\r\n      }\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Jean_Card.0020d1f9.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.f753a687.png\";","export default __webpack_public_path__ + \"static/media/IconSide.d4812006.png\";","export default __webpack_public_path__ + \"static/media/Banner.3256b2a2.png\";","export default __webpack_public_path__ + \"static/media/constellation1.bde21db2.png\";","export default __webpack_public_path__ + \"static/media/constellation2.959201ef.png\";","export default __webpack_public_path__ + \"static/media/constellation3.a81d461e.png\";","export default __webpack_public_path__ + \"static/media/constellation4.1122e151.png\";","export default __webpack_public_path__ + \"static/media/constellation5.d2f13553.png\";","export default __webpack_public_path__ + \"static/media/constellation6.d6961868.png\";","export default __webpack_public_path__ + \"static/media/skill.d2f13553.png\";","export default __webpack_public_path__ + \"static/media/burst.2f249639.png\";","export default __webpack_public_path__ + \"static/media/passive1.df700ef4.png\";","export default __webpack_public_path__ + \"static/media/passive2.37978c17.png\";","export default __webpack_public_path__ + \"static/media/passive3.0159e62d.png\";","import card from './Character_Jean_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { chargedDocSection, conditionalHeader, normalDocSection, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Jean_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"anemo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          chargedDocSection(tr, formula, data, 20),\r\n          plungeDocSection(tr, formula, data)\r\n        ]\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Gale Blade DMG\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.constellation >= 1,\r\n            text: \"Gale Blade DMG (Holding)\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)} * 140%</span>,\r\n            formula: formula.skill.dmg_hold,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Stamina Consumption (Hold)\",\r\n            value: \"20/s\",\r\n          }, {\r\n            text: \"Max Hold Duration\",\r\n            value: \"5s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"6s\",\r\n          }]\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>{data.burst.skill[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.skill,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Entering/Exiting DMG\",\r\n            formulaText: stats => <span>{data.burst.field_dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.field_dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Regeneration\",\r\n            formulaText: stats => <span>( {data.burst.heal_atk[stats.tlvl.burst]}% {Stat.printStat(\"finalATK\", stats)} + {data.burst.heal_flat[stats.tlvl.burst]} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.burst.heal,\r\n            variant: \"success\",\r\n          }, {\r\n            text: \"Continuous Regeneration\",\r\n            formulaText: stats => <span>( {data.burst.regen_atk[stats.tlvl.burst]}% {Stat.printStat(\"finalATK\", stats)} + {data.burst.regen_flat[stats.tlvl.burst]} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.burst.regen,\r\n            variant: \"success\",\r\n          }, {\r\n            text: \"Duration\",\r\n            value: \"11s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"20s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 80,\r\n          }]\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: \"Heal per Auto\",\r\n            formulaText: stats => <span>15% {Stat.printStat(\"finalATK\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.passive1.dmg,\r\n            variant: \"success\",\r\n          }]\r\n        }],\r\n      },\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: {\r\n        name: tr(\"constellation2.name\"),\r\n        img: c2,\r\n        sections: [{\r\n          text: tr(\"constellation2.description\"),\r\n          conditional: { // People's Aegis\r\n            key: \"c2\",\r\n            canShow: stats => stats.constellation >= 2,\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"constellation2\", tr, c2),\r\n            description: tr(\"constellation2.description\"),\r\n            name: \"Jean pick up Elemental Orb/Particle\",\r\n            stats: {\r\n              moveSPD_: 15,\r\n              atkSPD_: 15\r\n            },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"15s\"\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          conditional: { // Lands of Dandelion\r\n            key: \"c4\",\r\n            canShow: stats => stats.constellation >= 4,\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"constellation4\", tr, c4),\r\n            description: tr(\"constellation4.description\"),\r\n            name: \"Opponents within the field created by Dandelion Breeze\",\r\n            stats: { anemo_enemyRes_: -40 },\r\n          },\r\n        }],\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: tr(\"constellation6.description\"),\r\n          conditional: { // Lion's Fang, Fair Protector of Mondstandt\r\n            key: \"c6\",\r\n            canShow: stats => stats.constellation >= 6,\r\n            name: \"WIthin field created by Dandelion Breeze\",\r\n            fields: [{\r\n              text: \"Incoming DMG Decrease\",\r\n              value: \"35%\" //TODO: incoming dmg stat,\r\n            }]\r\n          }\r\n        }],\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Kazuha_Card.0dd97246.png\";","export default __webpack_public_path__ + \"static/media/Icon.fc7d5d73.png\";","export default __webpack_public_path__ + \"static/media/IconSide.409d7442.png\";","export default __webpack_public_path__ + \"static/media/Banner.d334fcb1.png\";","export default __webpack_public_path__ + \"static/media/constellation1.eba05def.png\";","export default __webpack_public_path__ + \"static/media/constellation2.99f250de.png\";","export default __webpack_public_path__ + \"static/media/constellation3.fe15c23c.png\";","export default __webpack_public_path__ + \"static/media/constellation4.4be95339.png\";","export default __webpack_public_path__ + \"static/media/constellation5.4f5bb9fc.png\";","export default __webpack_public_path__ + \"static/media/constellation6.b8d04a02.png\";","export default __webpack_public_path__ + \"static/media/skill.fe15c23c.png\";","export default __webpack_public_path__ + \"static/media/burst.c0346e9f.png\";","export default __webpack_public_path__ + \"static/media/passive1.37e9f644.png\";","export default __webpack_public_path__ + \"static/media/passive2.98be404f.png\";","export default __webpack_public_path__ + \"static/media/passive3.b4e1fa9b.png\";","import card from './Character_Kazuha_Card.png'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { DocumentSection, ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { conditionalHeader, normalSrc, sgt, st, talentTemplate } from '../SheetUtil'\r\nimport { absorbableEle } from '../dataUtil'\r\nimport { KeyPath } from '../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../formula'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport ColorText from '../../../Components/ColoredText'\r\n\r\nconst path = KeyPath<FormulaPathBase, any>().character.KaedeharaKazuha\r\nconst tr = (strKey: string) => <Translate ns=\"char_KaedeharaKazuha_gen\" key18={strKey} />\r\n\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"anemo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"M\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [{\r\n          text: tr(\"auto.fields.normal\"),\r\n          fields: data.normal.hitArr.map((percentArr, i) =>\r\n          ({\r\n            text: <span>{sgt(`normal.hit${i + (i < 5 ? 1 : 0)}`)} {i === 2 ? \"(1)\" : i === 3 ? \"(2)\" : i === 5 ? <span>(<Translate ns=\"sheet\" key18=\"hits\" values={{ count: 3 }} />)</span> : \"\"}</span>,\r\n            formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n            formula: formula.normal[i],\r\n            variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n          }))\r\n        }, {\r\n          text: tr(\"auto.fields.charged\"),\r\n          fields: [{\r\n            text: sgt(`normal.hit${1}`),\r\n            formulaText: stats => <span>{data.charged.hit1[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n            formula: formula.charged.hit1,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }, {\r\n            text: sgt(`normal.hit${2}`),\r\n            formulaText: stats => <span>{data.charged.hit2[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n            formula: formula.charged.hit2,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }, {\r\n            text: sgt(\"charged.stamina\"),\r\n            value: 20,\r\n          }]\r\n        }, {\r\n          text: tr(\"auto.fields.plunging\"),\r\n          fields: [{\r\n            text: sgt(`plunging.dmg`),\r\n            formulaText: stats => <span>{data.plunging.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n            formula: formula.plunging.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n          }, {\r\n            text: sgt(\"plunging.low\"),\r\n            formulaText: stats => <span>{data.plunging.low[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n            formula: formula.plunging.low,\r\n            variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n          }, {\r\n            text: sgt(\"plunging.high\"),\r\n            formulaText: stats => <span>{data.plunging.high[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n            formula: formula.plunging.high,\r\n            variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n          }]\r\n        }],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: sgt(\"press.dmg\"),\r\n            formulaText: stats => <span>{data.skill.press[stats.tlvl.skill]} % {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)} </span>,\r\n            formula: formula.skill.press,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: sgt(\"press.cd\"),\r\n            value: stat => stat.constellation >= 1 ? \"6s - 10%\" : \"6s\",\r\n          }, {\r\n            text: sgt(\"hold.dmg\"),\r\n            formulaText: stats => <span>{data.skill.hold[stats.tlvl.skill]} % {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)} </span>,\r\n            formula: formula.skill.hold,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: sgt(\"hold.cd\"),\r\n            value: stat => stat.constellation >= 1 ? \"9s - 10%\" : \"9s\",\r\n          }, {\r\n            canShow: stat => stat.constellation >= 1,\r\n            text: <Translate ns=\"char_KaedeharaKazuha\" key18=\"c1\" />,\r\n          }]\r\n        }, {\r\n          fields: [{\r\n            text: sgt(`plunging.dmg`),\r\n            formulaText: stats => <span>{data.plunging.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n            formula: formula.skill.pdmg,\r\n            variant: stats => getTalentStatKeyVariant(\"plunging\", stats, \"anemo\"),\r\n          }, {\r\n            text: sgt(\"plunging.low\"),\r\n            formulaText: stats => <span>{data.plunging.low[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n            formula: formula.skill.plow,\r\n            variant: stats => getTalentStatKeyVariant(\"plunging\", stats, \"anemo\"),\r\n          }, {\r\n            text: sgt(\"plunging.high\"),\r\n            formulaText: stats => <span>{data.plunging.high[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n            formula: formula.skill.phigh,\r\n            variant: stats => getTalentStatKeyVariant(\"plunging\", stats, \"anemo\"),\r\n          }]\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: tr(\"burst.slashdmg\"),\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]} % {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)} </span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: sgt(`dot`),\r\n            formulaText: stats => <span>{data.burst.dot[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dot,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: sgt(\"duration\"),\r\n            value: \"8s\",\r\n          }, {\r\n            text: sgt(\"cd\"),\r\n            value: \"15s\",\r\n          }, {\r\n            text: sgt(\"energyCost\"),\r\n            value: 60,\r\n          }]\r\n        }, {\r\n          conditional: { // Absorption\r\n            key: \"q\",\r\n            name: st(\"eleAbsor\"),\r\n            states: Object.fromEntries(absorbableEle.map(eleKey => [eleKey, {\r\n              name: <ColorText color={eleKey}>{sgt(`element.${eleKey}`)}</ColorText>,\r\n              fields: [{\r\n                canShow: stats => {\r\n                  const [num, condEleKey] = stats.conditionalValues?.character?.KaedeharaKazuha?.q ?? []\r\n                  return !!num && condEleKey === eleKey\r\n                },\r\n                text: st(\"absorDot\"),\r\n                formulaText: stats => <span>{data.burst.add[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats, eleKey), stats)}</span>,\r\n                formula: formula.burst[eleKey],\r\n                variant: eleKey\r\n              }],\r\n            }]))\r\n          },\r\n        }, {\r\n          conditional: {\r\n            key: \"c2\",\r\n            canShow: stats => stats.constellation >= 2,\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"constellation2\", tr, c2),\r\n            description: tr(\"constellation2.description\"),\r\n            name: <Translate ns=\"char_KaedeharaKazuha\" key18=\"c2\" />,\r\n            stats: { eleMas: 200 }\r\n          },\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          conditional: {// Soumon Swordsmanship\r\n            key: \"a1\",\r\n            canShow: stats => stats.ascension >= 1,\r\n            name: st(\"eleAbsor\"),\r\n            states: Object.fromEntries(absorbableEle.map(eleKey => [eleKey, {\r\n              name: <ColorText color={eleKey}>{sgt(`element.${eleKey}`)}</ColorText>,\r\n              fields: [{\r\n                canShow: stats => {\r\n                  const [num, condEleKey] = stats.conditionalValues?.character?.KaedeharaKazuha?.a1 ?? []\r\n                  return !!num && condEleKey === eleKey\r\n                },\r\n                text: sgt(\"addEleDMG\"),\r\n                formulaText: stats => <span>200% {Stat.printStat(getTalentStatKey(\"plunging\", stats, eleKey), stats)}</span>,\r\n                formula: formula.passive1[eleKey],\r\n                variant: eleKey\r\n              }],\r\n            }]))\r\n          },\r\n        }],\r\n      },\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n        }, ...absorbableEle.map(eleKey => ({\r\n          conditional: { // Poetics of Fuubutsu\r\n            key: `a4${eleKey}`,\r\n            canShow: stats => stats.ascension >= 4,\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"passive2\", tr, passive2),\r\n            description: tr(\"passive2.description\"),\r\n            name: <Translate ns=\"char_KaedeharaKazuha\" key18={`a4.name_${eleKey}`} />,\r\n            stats: { modifiers: { [`${eleKey}_dmg_`]: [[...path.passive2(), eleKey]] } },\r\n            fields: [{\r\n              text: Stat.getStatName(`${eleKey}_dmg_`),\r\n              formulaText: stats => <span>0.04% {Stat.printStat(\"eleMas\", stats, true)}</span>,\r\n              formula: formula.passive2[eleKey],\r\n              variant: eleKey,\r\n              fixed: 1,\r\n              unit: \"%\"\r\n            }, {\r\n              text: sgt(\"duration\"),\r\n              value: \"8s\",\r\n            }]\r\n          },\r\n        } as DocumentSection))],\r\n      },\r\n      passive3: {\r\n        name: tr(\"passive3.name\"),\r\n        img: passive3,\r\n        sections: [{\r\n          text: tr(\"passive3.description\"),\r\n          conditional: {\r\n            key: \"pas\",\r\n            maxStack: 0,\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"passive3\", tr, passive3),\r\n            description: tr(\"passive3.description\"),\r\n            stats: { staminaSprintDec_: 20 },\r\n          }\r\n        }],\r\n      },\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: tr(\"constellation6.description\"),\r\n          conditional: {//Crimson Momiji\r\n            key: \"c6\",\r\n            canShow: stats => stats.constellation >= 6,\r\n            name: <Translate ns=\"char_KaedeharaKazuha\" key18=\"c6.after\" />,\r\n            stats: {\r\n              modifiers: {\r\n                normal_dmg_: [path.constellation6.bonus()],\r\n                charged_dmg_: [path.constellation6.bonus()],\r\n                plunging_dmg_: [path.constellation6.bonus()],\r\n              },\r\n              infusionSelf: \"anemo\",\r\n            },\r\n            fields: [{\r\n              text: <Translate ns=\"char_KaedeharaKazuha\" key18=\"c6.bonus\" />,\r\n              formulaText: stats => <span>0.2% {Stat.printStat(\"eleMas\", stats, true)}</span>,\r\n              formula: formula.constellation6.bonus,\r\n              fixed: 1,\r\n              unit: \"%\"\r\n            }, {\r\n              text: sgt(\"duration\"),\r\n              value: \"5s\",\r\n            }]\r\n          }\r\n        }]\r\n      }\r\n    }\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Kaeya_Card.32e9801f.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.93b69ac7.png\";","export default __webpack_public_path__ + \"static/media/IconSide.8cc70f8f.png\";","export default __webpack_public_path__ + \"static/media/Banner.0375df53.png\";","export default __webpack_public_path__ + \"static/media/constellation1.82a5ef91.png\";","export default __webpack_public_path__ + \"static/media/constellation2.22b43158.png\";","export default __webpack_public_path__ + \"static/media/constellation3.6eceb68b.png\";","export default __webpack_public_path__ + \"static/media/constellation4.1b6ae590.png\";","export default __webpack_public_path__ + \"static/media/constellation5.d8111c20.png\";","export default __webpack_public_path__ + \"static/media/constellation6.33be21d5.png\";","export default __webpack_public_path__ + \"static/media/skill.6eceb68b.png\";","export default __webpack_public_path__ + \"static/media/burst.753054ca.png\";","export default __webpack_public_path__ + \"static/media/passive1.1028323d.png\";","export default __webpack_public_path__ + \"static/media/passive2.7360009f.png\";","export default __webpack_public_path__ + \"static/media/passive3.b4e1fa9b.png\";","import card from './Character_Kaeya_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { chargedHitsDocSection, conditionalHeader, normalDocSection, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport ColorText from '../../../Components/ColoredText'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Kaeya_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"cryo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"M\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          chargedHitsDocSection(tr, formula, data),\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats) + \"_multi\", stats)}</span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"6s\",\r\n          }],\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Icicles DMG\",\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Duration\",\r\n            value: \"8s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"15s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 60,\r\n          }, {\r\n            canShow: stats => stats.constellation >= 2,\r\n            text: \"Increase duration by 2.5s per opponent defeated during, up to 15s\"\r\n          }],\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          fields: [{\r\n            text: \"Healing\",\r\n            formulaText: stats => <span>15% {Stat.printStat(\"finalATK\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.passive1.dmg,\r\n            variant: \"success\",\r\n          }],\r\n        }],\r\n      },\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: {\r\n        name: tr(\"passive3.name\"),\r\n        img: passive3,\r\n        sections: [{\r\n          conditional: {\r\n            key: \"p3\",\r\n            maxStack: 0,\r\n            partyBuff: \"partyOnly\",\r\n            header: conditionalHeader(\"passive3\", tr, passive3),\r\n            description: tr(\"passive3.description\"),\r\n            name: tr(\"passive3.name\"),\r\n            stats: { staminaSprintDec_: 20 }\r\n          }\r\n        }],\r\n      },\r\n      constellation1: {\r\n        name: tr(\"constellation1.name\"),\r\n        img: c1,\r\n        sections: [{\r\n          text: tr(\"constellation1.description\"),\r\n          conditional: { // ColdBloodedStrike\r\n            key: \"c1\",\r\n            canShow: stats => stats.constellation >= 1,\r\n            name: <span>Opponent affected by <ColorText color=\"cryo\">Cryo</ColorText></span>,\r\n            stats: {\r\n              normal_critRate_: 15,\r\n              charged_critRate_: 15\r\n            }\r\n          }\r\n        }]\r\n      },\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.constellation >= 4,\r\n            text: <ColorText color=\"cryo\">Shield DMG Absorption</ColorText>,\r\n            formulaText: stats => <span>30% {Stat.printStat(\"finalHP\", stats)} * (100% + {Stat.printStat(\"shield_\", stats)}) * (250% <ColorText color=\"cryo\">Cryo Absorption</ColorText>)</span>,\r\n            formula: formula.constellation4.shieldCryo,\r\n            variant: \"cryo\"\r\n          }, {\r\n            canShow: stats => stats.constellation >= 4,\r\n            text: \"Shield DMG Absorption\",\r\n            formulaText: stats => <span>30% {Stat.printStat(\"finalHP\", stats)} * (100% + {Stat.printStat(\"shield_\", stats)})</span>,\r\n            formula: formula.constellation4.shield,\r\n          }, {\r\n            canShow: stats => stats.constellation >= 4,\r\n            text: \"Duration\",\r\n            value: \"20s\",\r\n          }, {\r\n            canShow: stats => stats.constellation >= 4,\r\n            text: \"CD\",\r\n            value: \"60s\",\r\n          }]\r\n        }]\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Kamisato_Ayaka_Card.41ee4451.png\";","export default __webpack_public_path__ + \"static/media/Icon.f1b9b4bf.png\";","export default __webpack_public_path__ + \"static/media/IconSide.729607fd.png\";","export default __webpack_public_path__ + \"static/media/Banner.1153c49b.png\";","export default __webpack_public_path__ + \"static/media/constellation1.6bb787c6.png\";","export default __webpack_public_path__ + \"static/media/constellation2.19bc0f51.png\";","export default __webpack_public_path__ + \"static/media/constellation3.f64195a7.png\";","export default __webpack_public_path__ + \"static/media/constellation4.d0f275b1.png\";","export default __webpack_public_path__ + \"static/media/constellation5.4233525f.png\";","export default __webpack_public_path__ + \"static/media/constellation6.146b0113.png\";","export default __webpack_public_path__ + \"static/media/skill.4233525f.png\";","export default __webpack_public_path__ + \"static/media/burst.f22c49b3.png\";","export default __webpack_public_path__ + \"static/media/sprint.1691fd4d.png\";","export default __webpack_public_path__ + \"static/media/passive1.d1416931.png\";","export default __webpack_public_path__ + \"static/media/passive2.b3544571.png\";","export default __webpack_public_path__ + \"static/media/passive3.d49af955.png\";","import card from './Character_Kamisato_Ayaka_Card.png'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport sprint from './sprint.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { normalSrc, plungeDocSection, sgt, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nconst tr = (strKey: string) => <Translate ns=\"char_KamisatoAyaka_gen\" key18={strKey} />\r\nconst charTr = (strKey: string) => <Translate ns=\"char_KamisatoAyaka\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"cryo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [{\r\n          text: tr(\"auto.fields.normal\"),\r\n          fields: data.normal.hitArr.map((percentArr, i) =>\r\n          ({\r\n            text: <span>{sgt(`normal.hit${i + 1}`)} {i === 3 ? <span>(<Translate ns=\"sheet\" key18=\"hits\" values={{ count: 3 }} />)</span> : \"\"}</span>,\r\n            formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n            formula: formula.normal[i],\r\n            variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n          }))\r\n        }, {\r\n          text: tr(\"auto.fields.charged\"),\r\n          fields: [{\r\n            text: <span>{sgt(\"charged.dmg\")} <span>(<Translate ns=\"sheet\" key18=\"hits\" values={{ count: 3 }} />)</span></span>,\r\n            formulaText: stats => <span>{data.charged.hit[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n            formula: formula.charged.hit,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }, {\r\n            text: sgt(\"charged.stamina\"),\r\n            value: 20,\r\n          }]\r\n        },\r\n        plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: sgt(\"skillDMG\"),\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats) + \"_multi\", stats)} * {Stat.printStat(\"finalDEF\", stats)}</span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: sgt(\"cd\"),\r\n            value: \"10s\",\r\n          }],\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: tr(\"burst.cutting\"),\r\n            formulaText: stats => <span>{data.burst.cutting[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.cutting,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.bloom\"),\r\n            formulaText: stats => <span>{data.burst.bloom[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.bloom,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: sgt(\"duration\"),\r\n            value: \"5s\",\r\n          }, {\r\n            text: sgt(\"cd\"),\r\n            value: \"20s\",\r\n          }, {\r\n            text: sgt(\"energyCost\"),\r\n            value: 80,\r\n          }]\r\n        }]\r\n      },\r\n      sprint: {\r\n        name: tr(\"sprint.name\"),\r\n        img: sprint,\r\n        sections: [{\r\n          text: tr(\"sprint.description\"),\r\n          fields: [{\r\n            text: \"Activation Stamina Consumption\",\r\n            value: 10,\r\n          }, {\r\n            text: \"Stamina Drain\",\r\n            value: \"15/s\",\r\n          }],\r\n          conditional: { //sprint\r\n            key: \"s\",\r\n            name: charTr(\"afterSprint\"),\r\n            stats: { infusionSelf: \"cryo\" },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: \"5s\"\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          conditional: {//After using Kamisato Art: Hyouka\r\n            key: \"a1\",\r\n            canShow: stats => stats.ascension >= 1,\r\n            name: charTr(\"afterSkill\"),\r\n            stats: {\r\n              normal_dmg_: 30,\r\n              charged_dmg_: 30,\r\n            },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: \"6s\"\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          conditional: { //sprint\r\n            key: \"a4\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            name: charTr(\"afterSprintCryo\"),\r\n            stats: { cryo_dmg_: 18 },\r\n            fields: [{ text: charTr(\"staminaRestore\") }]\r\n          },\r\n        }],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: {\r\n        name: tr(\"constellation2.name\"),\r\n        img: c2,\r\n        sections: [{\r\n          text: tr(\"constellation2.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.constellation >= 2,\r\n            text: charTr(\"snowflakeDMG\"),\r\n            formulaText: stats => <span>{data.burst.cutting[stats.tlvl.burst] / 5}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.constellation2.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          },]\r\n        }],\r\n\r\n      },\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          conditional: {\r\n            key: \"c4\",\r\n            canShow: stats => stats.constellation >= 4,\r\n            name: charTr(\"afterBurst\"),\r\n            stats: { enemyDEFRed_: 30 },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: \"6s\"\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: tr(\"constellation6.description\"),\r\n          conditional: {\r\n            key: \"c6\",\r\n            canShow: stats => stats.constellation >= 6,\r\n            name: charTr(\"afterSkill\"),\r\n            stats: { charged_dmg_: 298 },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: \"6s\"\r\n            }]\r\n          }\r\n        }],\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Keqing_Card.4bb17ff4.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.a2845229.png\";","export default __webpack_public_path__ + \"static/media/IconSide.f139c237.png\";","export default __webpack_public_path__ + \"static/media/Banner.7172734a.png\";","export default __webpack_public_path__ + \"static/media/constellation1.f9c53e29.png\";","export default __webpack_public_path__ + \"static/media/constellation2.96d71875.png\";","export default __webpack_public_path__ + \"static/media/constellation3.ccda9bf9.png\";","export default __webpack_public_path__ + \"static/media/constellation4.336e5d4a.png\";","export default __webpack_public_path__ + \"static/media/constellation5.ceab5b0c.png\";","export default __webpack_public_path__ + \"static/media/constellation6.47cd11d2.png\";","export default __webpack_public_path__ + \"static/media/skill.ceab5b0c.png\";","export default __webpack_public_path__ + \"static/media/burst.7b33cac2.png\";","export default __webpack_public_path__ + \"static/media/passive1.0f662c9c.png\";","export default __webpack_public_path__ + \"static/media/passive2.86138411.png\";","export default __webpack_public_path__ + \"static/media/passive3.32b68928.png\";","import card from './Character_Keqing_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport { normalSrc, talentTemplate } from '../SheetUtil'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Keqing_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"electro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [{\r\n          text: <span><strong>Normal Attack</strong> Perform up to 5 rapid strikes.</span>,\r\n          fields: data.normal.hitArr.map((percentArr, i) =>\r\n          ({\r\n            text: `${i + (i < 4 ? 1 : 0)}${i === 3 ? \".1\" : i === 4 ? \".2\" : \"\"}-Hit DMG`,\r\n            formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n            formula: formula.normal[i],\r\n            variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n          }))\r\n        }, {\r\n          text: <span><strong>Charged Attack</strong> Consumes a certain amount of Stamina to unleash 2 rapid sword strikes.</span>,\r\n          fields: [{\r\n            text: `Charged 1-Hit DMG`,\r\n            formulaText: stats => <span>{data.charged.hit1[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n            formula: formula.charged.hit1,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }, {\r\n            text: `Charged 2-Hit DMG`,\r\n            formulaText: stats => <span>{data.charged.hit2[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n            formula: formula.charged.hit2,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }, {\r\n            text: `Stamina Cost`,\r\n            value: data.charged.stam,\r\n          }]\r\n        }, {\r\n          text: <span><strong>Plunging Attack</strong> Plunges from mid-air to strike the ground below, damaging enemies along the path and dealing AoE DMG upon impact.</span>,\r\n          fields: [{\r\n            text: `Plunge DMG`,\r\n            formulaText: stats => <span>{data.plunging.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n            formula: formula.plunging.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n          }, {\r\n            text: `Low Plunge DMG`,\r\n            formulaText: stats => <span>{data.plunging.low[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n            formula: formula.plunging.low,\r\n            variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n          }, {\r\n            text: `High Plunge DMG`,\r\n            formulaText: stats => <span>{data.plunging.high[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n            formula: formula.plunging.high,\r\n            variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n          }]\r\n        }],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Lightning Stiletto DMG\",\r\n            formulaText: stats => <span>{data.skill.stilleto[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.stilleto,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Slashing DMG\",\r\n            formulaText: stats => <span>{data.skill.slashing[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.slashing,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Thunderclap Slash DMG\",\r\n            formulaText: stats => <span>{data.skill.thunderclasp_slash[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.thunderclap_slashing,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"CD\",\r\n            value: data.skill.cd,\r\n            fixed: 1,\r\n            unit: \"s\"\r\n          }]\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: <span>\r\n            {tr(\"burst.description\")}\r\n            <small>The <b>consecutive slashes</b> hits 8 times.</small>\r\n          </span>,\r\n          fields: [{\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>{data.burst.skill[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.skill,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Consecutive Slash DMG\",\r\n            formulaText: stats => <span>{data.burst.consec_slash[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.consec_slash,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Last Attack DMG\",\r\n            formulaText: stats => <span>{data.burst.last[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.last,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"CD\",\r\n            value: data.burst.cd,\r\n            unit: \"s\"\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: data.burst.cost,\r\n          }],\r\n          conditional: { // AristocraticDignity\r\n            key: \"a4\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            name: <span>Casting <b>Starward Sword</b></span>,\r\n            stats: {\r\n              critRate_: 15,\r\n              enerRech_: 15,\r\n            },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"8s\",\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          conditional: {\r\n            key: \"a1\",\r\n            canShow: stats => stats.ascension >= 1,\r\n            name: <span>Recasting <b>Stellar Restoration</b> while a Lightning Stiletto is present</span>,\r\n            stats: { infusionSelf: \"electro\" },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"5s\"\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: {\r\n        name: tr(\"constellation1.name\"),\r\n        img: c1,\r\n        sections: [{\r\n          text: tr(\"constellation1.description\"),\r\n          fields: [{\r\n            text: \" Thundering Might DMG\",\r\n            formulaText: stats => <span>{data.constellation1.dmg}% {Stat.printStat(getTalentStatKey(\"elemental\", stats), stats)}</span>,\r\n            formula: formula.constellation1.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"elemental\", stats),\r\n          }]\r\n        }],\r\n      },\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          conditional: { // Attunement\r\n            key: \"c4\",\r\n            canShow: stats => stats.constellation >= 4,\r\n            name: \"Trigger an Electro-related Elemental Reaction\",\r\n            stats: { atk_: data.constellation4.atk_ },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"10s\",\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: tr(\"constellation6.description\"),\r\n          conditional: { // Initating\r\n            key: \"c6\",\r\n            canShow: stats => stats.constellation >= 6,\r\n            name: \"Initiating Normal/Charged Attack, Skill or Burst\",\r\n            stats: { electro_dmg_: data.constellation6.electro_ },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: data.constellation6.duration,\r\n              unit: \"s\"\r\n            }]\r\n          }\r\n        }],\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Klee_Card.755947b3.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.adbcf58f.png\";","export default __webpack_public_path__ + \"static/media/IconSide.d408b738.png\";","export default __webpack_public_path__ + \"static/media/Banner.9e29b1ea.png\";","export default __webpack_public_path__ + \"static/media/constellation6.2e0aa7d4.png\";","export default __webpack_public_path__ + \"static/media/constellation1.a0eec447.png\";","export default __webpack_public_path__ + \"static/media/constellation2.5c8a9178.png\";","export default __webpack_public_path__ + \"static/media/constellation3.ca95ed4f.png\";","export default __webpack_public_path__ + \"static/media/constellation5.275e6c19.png\";","export default __webpack_public_path__ + \"static/media/constellation4.26e830a9.png\";","export default __webpack_public_path__ + \"static/media/passive3.1b44c3b5.png\";","export default __webpack_public_path__ + \"static/media/skill.995e81c9.png\";","export default __webpack_public_path__ + \"static/media/passive1.137eab67.png\";","export default __webpack_public_path__ + \"static/media/passive2.a9bf0e1e.png\";","export default __webpack_public_path__ + \"static/media/burst.0ea1182d.png\";","import { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport Stat from '../../../Stat'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport { chargedDocSection, conditionalHeader, normalDocSection, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport card from './Character_Klee_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c6 from './constellation6.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c5 from './constellation5.png'\r\nimport c4 from './constellation4.png'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport passive3 from './passive3.png'\r\nimport skill from './skill.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport burst from './burst.png'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Klee_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"pyro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          chargedDocSection(tr, formula, data, 50),\r\n          plungeDocSection(tr, formula, data),\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Jumpy Dumpty DMG\",\r\n            formulaText: stats => <span>{data.skill.jumpyDmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.jumpyDmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Mine DMG\",\r\n            formulaText: stats => <span>{data.skill.mineDmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.mineDmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Mine Duration\",\r\n            value: \"15s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"20s\",\r\n          }]\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Sparks 'n' Splash DMG\",\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Duration\",\r\n            value: \"10s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"15s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 60,\r\n          }]\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          conditional: { // PoundingSurprise\r\n            key: \"a1\",\r\n            canShow: stats => stats.ascension >= 1,\r\n            name: \"has Explosive Spark\",\r\n            stats: { charged_dmg_: 50 },\r\n            fields: [{ text: \"Next Charged attack cost no stamina\" }]\r\n          },\r\n        }],\r\n      },\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: {\r\n        name: tr(\"constellation1.name\"),\r\n        img: c1,\r\n        sections: [{\r\n          text: tr(\"constellation1.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.constellation >= 1,\r\n            text: \"Chained Reactions DMG\",\r\n            formulaText: stats => <span>120% x {data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.constellation1.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          },]\r\n        }],\r\n      },\r\n      constellation2: {\r\n        name: tr(\"constellation2.name\"),\r\n        img: c2,\r\n        sections: [{\r\n          text: tr(\"constellation2.description\"),\r\n          conditional: { // ExplosiveFrags\r\n            key: \"c2\",\r\n            canShow: stats => stats.constellation >= 2,\r\n            name: \"Hit by Jumpy Dumpty's mines\",\r\n            stats: { enemyDEFRed_: 23 },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"10s\",\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          fields: [{\r\n            text: \"Sparkly Explosion DMG\",\r\n            formulaText: stats => <span>555% {Stat.printStat(getTalentStatKey(\"elemental\", stats), stats)}</span>,\r\n            formula: formula.constellation4.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"elemental\", stats),\r\n          }]\r\n        }],\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: tr(\"constellation6.description\"),\r\n          conditional: { // BlazingDelight\r\n            key: \"c6\",\r\n            partyBuff: \"partyAll\",\r\n            canShow: stats => stats.constellation >= 6,\r\n            header: conditionalHeader(\"constellation6\", tr, c6),\r\n            description: tr(\"constellation6.description\"),\r\n            name: <span><strong>Sparks 'n' Splash</strong> is used</span>,\r\n            stats: { pyro_dmg_: 10 }\r\n          }\r\n        }],\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Kujou_Sara_Card.99f10679.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.481e0493.png\";","export default __webpack_public_path__ + \"static/media/IconSide.8b13dfc0.png\";","export default __webpack_public_path__ + \"static/media/Banner.ad15aad1.png\";","export default __webpack_public_path__ + \"static/media/constellation1.1044acb5.png\";","export default __webpack_public_path__ + \"static/media/constellation2.745dfd66.png\";","export default __webpack_public_path__ + \"static/media/constellation3.5e7df728.png\";","export default __webpack_public_path__ + \"static/media/constellation4.4cbfb54b.png\";","export default __webpack_public_path__ + \"static/media/constellation5.80be1166.png\";","export default __webpack_public_path__ + \"static/media/constellation6.4e6ffa7f.png\";","export default __webpack_public_path__ + \"static/media/skill.80be1166.png\";","export default __webpack_public_path__ + \"static/media/burst.06856b91.png\";","export default __webpack_public_path__ + \"static/media/passive1.ecefb70a.png\";","export default __webpack_public_path__ + \"static/media/passive2.2a65e008.png\";","export default __webpack_public_path__ + \"static/media/passive3.226a9159.png\";","export default __webpack_public_path__ + \"static/media/Character_Lisa_Card.295ea04c.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.0cb866e4.png\";","export default __webpack_public_path__ + \"static/media/IconSide.0433cc7d.png\";","export default __webpack_public_path__ + \"static/media/Banner.83f0b7a2.png\";","export default __webpack_public_path__ + \"static/media/constellation1.a1701065.png\";","export default __webpack_public_path__ + \"static/media/constellation2.bc2aca33.png\";","export default __webpack_public_path__ + \"static/media/constellation3.0d88a778.png\";","export default __webpack_public_path__ + \"static/media/constellation4.2c8dd3c4.png\";","export default __webpack_public_path__ + \"static/media/constellation5.97dace1a.png\";","export default __webpack_public_path__ + \"static/media/constellation6.25c421cb.png\";","export default __webpack_public_path__ + \"static/media/skill.97dace1a.png\";","export default __webpack_public_path__ + \"static/media/burst.1e411fef.png\";","export default __webpack_public_path__ + \"static/media/passive1.f60113cc.png\";","export default __webpack_public_path__ + \"static/media/passive2.2a3a83a7.png\";","export default __webpack_public_path__ + \"static/media/passive3.143e28cd.png\";","import card from './Character_Lisa_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { chargedDocSection, normalDocSection, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Lisa_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"electro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          chargedDocSection(tr, formula, data, 50),\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Press DMG\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"No Stack Hold\",\r\n            formulaText: stats => <span>{data.skill.stack0[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.stack0,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"1 Stack Hold\",\r\n            formulaText: stats => <span>{data.skill.stack1[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.stack1,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"2 Stack Hold\",\r\n            formulaText: stats => <span>{data.skill.stack2[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.stack2,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"3 Stack Hold\",\r\n            formulaText: stats => <span>{data.skill.stack3[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.stack3,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Press CD\",\r\n            value: \"1s\",\r\n          }, {\r\n            text: \"Hold CD\",\r\n            value: \"12s\",\r\n          }]\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Summon DMG\",\r\n            formulaText: stats => <span>{data.burst.summon[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.summon,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Discharge DMG\",\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Lightning Rose Duration\",\r\n            value: \"15s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"20s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 80,\r\n          }, {\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: <span>The DEF debuff is applied <strong>after</strong> the first lightning bolt.</span>\r\n          }],\r\n          conditional: { // StaticElectricityFieldDestiny\r\n            key: \"a4\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            name: \"Opponents hit by Lightning Rose\",\r\n            stats: { enemyDEFRed_: 15 },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"10s\",\r\n            }],\r\n          },\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: {\r\n        name: tr(\"constellation2.name\"),\r\n        img: c2,\r\n        sections: [{\r\n          text: tr(\"constellation2.description\"),\r\n          conditional: { // ElectromagneticField\r\n            key: \"c2\",\r\n            canShow: stats => stats.constellation >= 2,\r\n            name: \"Holding Violet Arc\",\r\n            stats: { def_: 25 },\r\n            fields: [{ text: \"Increase resistance to interruption\" }],\r\n          },\r\n        }],\r\n      },\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Mona_Card.7ef44015.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.364d6689.png\";","export default __webpack_public_path__ + \"static/media/IconSide.bb26436c.png\";","export default __webpack_public_path__ + \"static/media/Banner.d96fedd6.png\";","export default __webpack_public_path__ + \"static/media/constellation1.32b6dc81.png\";","export default __webpack_public_path__ + \"static/media/constellation2.003bc819.png\";","export default __webpack_public_path__ + \"static/media/constellation3.5e0d36f1.png\";","export default __webpack_public_path__ + \"static/media/constellation4.43545fae.png\";","export default __webpack_public_path__ + \"static/media/constellation5.70a512da.png\";","export default __webpack_public_path__ + \"static/media/constellation6.d735dc46.png\";","export default __webpack_public_path__ + \"static/media/skill.70a512da.png\";","export default __webpack_public_path__ + \"static/media/burst.d9218359.png\";","export default __webpack_public_path__ + \"static/media/sprint.69730c8c.png\";","export default __webpack_public_path__ + \"static/media/passive1.4a50f363.png\";","export default __webpack_public_path__ + \"static/media/passive2.fdaa68b4.png\";","export default __webpack_public_path__ + \"static/media/passive3.86d4a707.png\";","import card from './Character_Mona_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport sprint from './sprint.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { chargedDocSection, conditionalHeader, normalDocSection, normalSrc, plungeDocSection, sgt, talentTemplate } from '../SheetUtil'\r\nimport { KeyPath } from '../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../formula'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport ColorText from '../../../Components/ColoredText'\r\n\r\nconst path = KeyPath<FormulaPathBase, any>().character.Mona\r\nconst tr = (strKey: string) => <Translate ns=\"char_Mona_gen\" key18={strKey} />\r\n\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"hydro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          chargedDocSection(tr, formula, data, 50),\r\n          plungeDocSection(tr, formula, data),\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"DoT\",\r\n            formulaText: stats => <span>{data.skill.dot[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.dot,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Explosion DMG\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"12s\",\r\n          }]\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Illusory Bubble Duration\",\r\n            value: \"8s\",\r\n          }, {\r\n            text: \"Illusory Bubble Explosion DMG\",\r\n            formulaText: stats => <span>{data.burst.bubble_explosion[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.bubble_explosion,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"15s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 60,\r\n          }],\r\n          conditional: {\r\n            key: \"q\",\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"burst\", tr, burst),\r\n            description: tr(\"burst.description\"),\r\n            name: \"Omen\",\r\n            stats: stats => ({\r\n              dmg_: data.burst.dmg_[stats.tlvl.burst],\r\n            }),\r\n            fields: [{\r\n              text: \"Omen Duration\",\r\n              value: stats => `${data.burst.omen_duration[stats.tlvl.burst]}s`,\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      sprint: {\r\n        name: tr(\"sprint.name\"),\r\n        img: sprint,\r\n        sections: [{\r\n          text: tr(\"sprint.description\"),\r\n          fields: [{\r\n            text: \"Activation Stamina Consumption\",\r\n            value: 10,\r\n          }, {\r\n            text: \"Stamina Drain\",\r\n            value: \"15/s\",\r\n          }]\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.ascension >= 1,\r\n            text: \"Explosion DMG\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% * 50% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.passive1.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension >= 1,\r\n            text: \"Phantom Duration\",\r\n            value: \"2s\"\r\n          }]\r\n        }],\r\n      },\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: \"Hydro DMG Bonus\",\r\n            formulaText: stats => <span>20% {Stat.printStat(\"enerRech_\", stats, true)}</span>,\r\n            formula: formula.passive2.bonus,\r\n            fixed: 1,\r\n            unit: \"%\"\r\n          }],\r\n          conditional: {\r\n            key: \"a4\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            maxStack: 0,\r\n            stats: {\r\n              modifiers: { hydro_dmg_: [path.passive2.bonus()] },\r\n            },\r\n          }\r\n        }],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: {\r\n        name: tr(\"constellation1.name\"),\r\n        img: c1,\r\n        sections: [{\r\n          text: tr(\"constellation1.description\"),\r\n          conditional: { // \tProphecy of Submersion\r\n            key: \"c1\",\r\n            canShow: stats => stats.constellation >= 1,\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"constellation1\", tr, c1),\r\n            description: tr(\"constellation1.description\"),\r\n            name: <span>Any characters in the party hit an opponent affected by an <strong>Omen</strong></span>,\r\n            stats: {\r\n              electrocharged_dmg_: 15,\r\n              vaporize_dmg_: 15,\r\n              swirl_dmg_: 15\r\n            },\r\n            fields: [{\r\n              canShow: stats => stats.constellation >= 1,\r\n              text: <span><ColorText color=\"cryo\">Frozen</ColorText> Duration Increase</span>,\r\n              value: 15,\r\n              unit: \"%\",\r\n              variant: \"cryo\",\r\n            },]\r\n          },\r\n        }],\r\n      },\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          conditional: { // ProphecyOfOblivion\r\n            key: \"c4\",\r\n            canShow: stats => stats.constellation >= 4,\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"constellation4\", tr, c4),\r\n            description: tr(\"constellation4.description\"),\r\n            name: <span>Any characters in the party hit an opponent affected by an <strong>Omen</strong></span>,\r\n            stats: { critRate_: 15 },\r\n          },\r\n        }],\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: tr(\"constellation6.description\"),\r\n          conditional: { // RhetoricsOfCalamitas\r\n            key: \"c6\",\r\n            canShow: stats => stats.constellation >= 6,\r\n            name: <span>Upon entering <b>Illusory Torrent</b></span>,\r\n            maxStack: 3,\r\n            stats: { charged_dmg_: 60 },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: 8,\r\n              unit: \"s\"\r\n            }]\r\n          },\r\n        }],\r\n      }\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Ningguang_Card.28dbe486.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.d1488ce6.png\";","export default __webpack_public_path__ + \"static/media/IconSide.c893801b.png\";","export default __webpack_public_path__ + \"static/media/Banner.6616d8c1.png\";","export default __webpack_public_path__ + \"static/media/constellation1.581ba4da.png\";","export default __webpack_public_path__ + \"static/media/constellation2.c8013e64.png\";","export default __webpack_public_path__ + \"static/media/constellation3.a8702326.png\";","export default __webpack_public_path__ + \"static/media/constellation4.81caea06.png\";","export default __webpack_public_path__ + \"static/media/constellation5.7e311c58.png\";","export default __webpack_public_path__ + \"static/media/constellation6.8cde7ea2.png\";","export default __webpack_public_path__ + \"static/media/skill.67a75ac2.png\";","export default __webpack_public_path__ + \"static/media/burst.48aa0f51.png\";","export default __webpack_public_path__ + \"static/media/passive1.dc3318eb.png\";","export default __webpack_public_path__ + \"static/media/passive2.85eb8cf9.png\";","export default __webpack_public_path__ + \"static/media/passive3.57106021.png\";","import card from './Character_Ningguang_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { conditionalHeader, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport ColorText from '../../../Components/ColoredText'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Ningguang_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"geo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          {\r\n            text: stats => <span><strong>Normal Attack</strong> Shoots gems that deal <ColorText color=\"geo\">{stats.constellation >= 1 ? \"AoE \" : \"\"}Geo DMG</ColorText>. Upon hit, this grants Ningguang 1 Star Jade.</span>,\r\n            fields: [{\r\n              text: `Normal Attack DMG`,\r\n              formulaText: stats => <span>{data.normal.hit[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n              formula: formula.normal.hit,\r\n              variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n            }, {\r\n              canShow: stats => stats.constellation >= 1,\r\n              text: <span>Gems do <ColorText color=\"geo\">AoE Geo DMG</ColorText></span>,\r\n            }]\r\n          }, {\r\n            text: <span><strong>Charged Attack</strong> Consumes a certain amount of stamina to fire off a giant gem that deals <ColorText color=\"geo\">Geo DMG</ColorText>. If Ningguang has any Star Jades, unleashing a Charged Attack will cause the Star Jades to be fired at the enemy as well, dealing additional DMG.</span>,\r\n            fields: [{\r\n              text: `Charged Attack DMG`,\r\n              formulaText: stats => <span>{data.charged.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n              formula: formula.charged.dmg,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n            }, {\r\n              text: `DMG per Star Jade`,\r\n              formulaText: stats => <span>{data.charged.jade[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n              formula: formula.charged.jade,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n            }, {\r\n              text: `Stamina Cost`,\r\n              value: stats => <span>50{(stats.ascension >= 1 ? <span>; With <b>Star Jade</b>: 0</span> : \"\")}</span>,\r\n            }]\r\n          },\r\n          plungeDocSection(tr, formula, data),\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Inherited HP\",\r\n            formulaText: stats => <span>{data.skill.inheri_hp[stats.tlvl.skill]}% {Stat.printStat(\"finalHP\", stats)}</span>,\r\n            formula: formula.skill.inheri_hp,\r\n          }, {\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"12s\",\r\n          }, {\r\n            canShow: stats => stats.constellation >= 2,\r\n            text: \"Resets CD on shatter, every 6s\",\r\n          },]\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"DMG Per Gem\",\r\n            formulaText: stats => <span>{data.burst.dmg_per_gem[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg_per_gem,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"12s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 40,\r\n          }, {\r\n            canShow: stats => stats.constellation >= 6,\r\n            text: \"Star Jade gained\",\r\n            value: \"7\",\r\n          }]\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          conditional: { // StrategicReserve\r\n            key: \"a4\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"passive2\", tr, passive2),\r\n            description: tr(\"passive2.description\"),\r\n            name: <span>Passing through <b>Jade Screen</b></span>,\r\n            stats: { geo_dmg_: 12 },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"10s\",\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          conditional: { // ExquisiteBeTheJade\r\n            key: \"c4\",\r\n            canShow: stats => stats.constellation >= 4,\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"constellation4\", tr, c4),\r\n            description: tr(\"constellation4.description\"),\r\n            name: <span>Allies within 10m of <b>Jade Screen</b></span>,\r\n            fields: [{\r\n              text: \"Elemental DMG received\",//TODO: elemental dmg reduction\r\n              value: -10,\r\n              unit: \"%\"\r\n            }]\r\n          }\r\n        }],\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Noelle_Card.951911c1.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.2fc0be8b.png\";","export default __webpack_public_path__ + \"static/media/IconSide.027d368a.png\";","export default __webpack_public_path__ + \"static/media/Banner.6319a6ac.png\";","export default __webpack_public_path__ + \"static/media/constellation1.84a0bea3.png\";","export default __webpack_public_path__ + \"static/media/constellation2.e0a0b60b.png\";","export default __webpack_public_path__ + \"static/media/constellation3.a29e1e30.png\";","export default __webpack_public_path__ + \"static/media/constellation4.2235957e.png\";","export default __webpack_public_path__ + \"static/media/constellation5.6b3d99e5.png\";","export default __webpack_public_path__ + \"static/media/constellation6.6f20bec8.png\";","export default __webpack_public_path__ + \"static/media/skill.a29e1e30.png\";","export default __webpack_public_path__ + \"static/media/burst.59f685ce.png\";","export default __webpack_public_path__ + \"static/media/passive1.ba868f6a.png\";","export default __webpack_public_path__ + \"static/media/passive2.06522a7f.png\";","export default __webpack_public_path__ + \"static/media/passive3.1c4f9770.png\";","import card from './Character_Noelle_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { claymoreChargedDocSection, normalDocSection, normalSrc, plungeDocSection, sgt, talentTemplate } from '../SheetUtil'\r\nimport { KeyPath } from '../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../formula'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\n\r\nconst path = KeyPath<FormulaPathBase, any>().character.Noelle\r\nconst tr = (strKey: string) => <Translate ns=\"char_Noelle_gen\" key18={strKey} />\r\nconst Noelle = (strKey: string) => <Translate ns=\"char_Noelle\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"geo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          claymoreChargedDocSection(tr, formula, data),\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: sgt(\"skillDMG\"),\r\n            formulaText: stats => <span>{data.skill.skill_dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats) + \"_multi\", stats)} * {Stat.printStat(\"finalDEF\", stats)}</span>,\r\n            formula: formula.skill.skill_dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: sgt(\"dmgAbsorption\"),\r\n            formulaText: stats => <span>( {data.skill.shield_def_[stats.tlvl.skill]}% {Stat.printStat(\"finalDEF\", stats)} + {data.skill.shield_flat[stats.tlvl.skill]} ) * (100% + {Stat.printStat(\"shield_\", stats)}) * 150% All DMG Absorption</span>,\r\n            formula: formula.skill.shield,\r\n          }, {\r\n            text: sgt(\"healing\"),\r\n            formulaText: stats => <span>( {data.skill.heal_def_[stats.tlvl.skill]}% {Stat.printStat(\"finalDEF\", stats)} + {data.skill.heal_flat[stats.tlvl.skill]} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.skill.heal,\r\n            variant: \"success\"\r\n          }, {\r\n            text: tr(\"skill.triggerChance\"),\r\n            value: stats => <span>{data.skill.heal_trigger[stats.tlvl.skill]}% {stats.constellation >= 1 ? Noelle(\"c1chance\") : \"\"}</span>,\r\n          }, {\r\n            text: sgt(\"duration\"),\r\n            value: data.skill.duration,\r\n            unit: \"s\"\r\n          }, {\r\n            text: sgt(\"cd\"),\r\n            value: stats => stats.ascension > 4 ? Noelle(\"p4cd\") : `${data.skill.cd}s`,\r\n          }],\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: sgt(\"burstDMG\"),\r\n            formulaText: stats => <span>{data.burst.burst_dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.burst_dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: sgt(\"skillDMG\"),\r\n            formulaText: stats => <span>{data.burst.skill_dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.skill_dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: sgt(\"duration\"),\r\n            value: stats => stats.constellation >= 6 ? Noelle(\"c6duration\") : \"15s\",\r\n          }, {\r\n            text: sgt(\"cd\"),\r\n            value: data.burst.cd,\r\n            unit: \"s\"\r\n          }, {\r\n            text: sgt(\"energyCost\"),\r\n            value: data.burst.cost,\r\n            unit: \"s\"\r\n          }],\r\n          conditional: { // Sweeping Time\r\n            key: \"q\",\r\n            name: tr(\"burst.name\"),\r\n            maxStack: 1,\r\n            stats: {\r\n              modifiers: { atk: [path.burst.bonus()] },\r\n              infusionSelf: \"geo\",\r\n            },\r\n            fields: [{\r\n              text: Noelle(\"qlarger\")\r\n            }, {\r\n              text: tr(\"burst.atkBonus\"),\r\n              formulaText: stats => <span>{data.burst.bonus[stats.tlvl.burst]}% {stats.constellation >= 6 ? \"+50% \" : \"\"}{Stat.printStat(\"finalDEF\", stats, true)}</span>,\r\n              formula: formula.burst.bonus,\r\n            },]\r\n          }\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.ascension >= 1,\r\n            text: sgt(\"dmgAbsorption\"),\r\n            formulaText: stats => <span>400% {Stat.printStat(\"finalDEF\", stats)} * (100% + {Stat.printStat(\"shield_\", stats)}) * 150% All DMG Absorption</span>,\r\n            formula: formula.passive1.hp,\r\n          }, {\r\n            canShow: stats => stats.ascension >= 1,\r\n            text: sgt(\"cd\"),\r\n            value: \"60s\",\r\n          }]\r\n        }],\r\n      },\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: {\r\n        name: tr(\"constellation2.name\"),\r\n        img: c2,\r\n        sections: [{\r\n          text: tr(\"constellation2.description\"),\r\n          conditional: {\r\n            key: \"c2\",\r\n            maxStack: 0,\r\n            stats: {\r\n              charged_dmg_: 15,\r\n              staminaChargedDec_: 20,\r\n            }\r\n          }\r\n        }],\r\n      },\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.constellation >= 4,\r\n            text: \"Breastplate Shatter DMG\",\r\n            formulaText: stats => <span>400% {Stat.printStat(getTalentStatKey(\"elemental\", stats), stats)}</span>,\r\n            formula: formula.constellation4.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"elemental\", stats),\r\n          }]\r\n        }]\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Qiqi_Card.70653a4d.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.178b1336.png\";","export default __webpack_public_path__ + \"static/media/IconSide.bbfc1e2f.png\";","export default __webpack_public_path__ + \"static/media/Banner.9e4f0f05.png\";","export default __webpack_public_path__ + \"static/media/constellation1.e44c54f0.png\";","export default __webpack_public_path__ + \"static/media/constellation2.5777f470.png\";","export default __webpack_public_path__ + \"static/media/constellation3.28ff750a.png\";","export default __webpack_public_path__ + \"static/media/constellation4.c7924790.png\";","export default __webpack_public_path__ + \"static/media/constellation5.5a74d0f7.png\";","export default __webpack_public_path__ + \"static/media/constellation6.285df014.png\";","export default __webpack_public_path__ + \"static/media/skill.cbda44ae.png\";","export default __webpack_public_path__ + \"static/media/burst.2a96f30c.png\";","export default __webpack_public_path__ + \"static/media/passive1.d404c1d7.png\";","export default __webpack_public_path__ + \"static/media/passive2.ab4a1c6c.png\";","export default __webpack_public_path__ + \"static/media/passive3.2f58680d.png\";","import card from \"./Character_Qiqi_Card.jpg\";\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from \"./constellation1.png\";\r\nimport c2 from \"./constellation2.png\";\r\nimport c3 from \"./constellation3.png\";\r\nimport c4 from \"./constellation4.png\";\r\nimport c5 from \"./constellation5.png\";\r\nimport c6 from \"./constellation6.png\";\r\nimport skill from \"./skill.png\";\r\nimport burst from \"./burst.png\";\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from \"../../../Stat\";\r\nimport formula, { data } from \"./data\";\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from \"../../../Build/Build\";\r\nimport { ICharacterSheet } from \"../../../Types/character\";\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { chargedDocSection, normalSrc, plungeDocSection, talentTemplate } from \"../SheetUtil\";\r\nimport { WeaponTypeKey } from \"../../../Types/consts\";\r\nconst tr = (strKey: string) => <Translate ns=\"char_Qiqi_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"cryo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          {\r\n            text: <span>{tr(`auto.fields.normal`)} <small><i>Note: the 3rd and 4th attacks hit twice.</i></small></span>,\r\n            fields: data.normal.hitArr.map((percentArr, i) => ({\r\n              text: `${i + 1}-Hit DMG`,\r\n              formulaText: (i === 2 || i === 3) ?\r\n                stats => <span>( {percentArr[stats.tlvl.auto]}% + {percentArr[stats.tlvl.auto]}% ) {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span> :\r\n                stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n              formula: formula.normal[i],\r\n              variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n            })),\r\n          },\r\n          chargedDocSection(tr, formula, data, 20),\r\n          plungeDocSection(tr, formula, data),\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>{data.skill.hit[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.hit,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Regeneration on Hit\",\r\n            formulaText: stats => <span>( {data.skill.hitregen.atk[stats.tlvl.skill]}% {Stat.printStat(\"finalATK\", stats)} + {data.skill.hitregen.base[stats.tlvl.skill]} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.skill.hitregen,\r\n            variant: \"success\",\r\n          }, {\r\n            text: \"Continuous Regeneration\",\r\n            formulaText: stats => <span>( {data.skill.continuousregen.atk[stats.tlvl.skill]}% {Stat.printStat(\"finalATK\", stats)} + {data.skill.continuousregen.base[stats.tlvl.skill]} ) * {Stat.printStat(\"heal_multi\", stats)}            </span>,\r\n            formula: formula.skill.continuousregen,\r\n            variant: \"success\",\r\n          }, {\r\n            text: \"Herald of Frost DMG\",\r\n            formulaText: stats => <span>{data.skill.herald[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.herald,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Duration\",\r\n            value: \"15s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"30s\",\r\n          }],\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Burst DMG\",\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Talisman Healing\",\r\n            formulaText: stats => <span> ( {data.burst.healing.atk[stats.tlvl.burst]}% {Stat.printStat(\"finalATK\", stats)} + {data.burst.healing.base[stats.tlvl.burst]} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.burst.healing,\r\n            variant: \"success\",\r\n          }, {\r\n            text: \"Talisman Duration\",\r\n            value: \"15s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"20s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 80,\r\n          }],\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          conditional: { // LifeProlongingMethods\r\n            key: \"a1\",\r\n            canShow: stats => stats.ascension >= 1,\r\n            name: <span>Character under the effects of <b>Adeptus Art: Herald of Frost</b> triggers an Elemental Reaction</span>,\r\n            stats: { incHeal_: 20, },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"8s\",\r\n            }],\r\n          },\r\n        }],\r\n      },\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: \"Talisman Application Chance\",\r\n            value: \"50%\",\r\n          }, {\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: \"CD\",\r\n            value: \"30s\",\r\n          }],\r\n        },\r\n        ],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: {\r\n        name: tr(\"constellation1.name\"),\r\n        img: c1,\r\n        sections: [{\r\n          text: tr(\"constellation1.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.constellation >= 1,\r\n            text: \"Energy on Hit\",\r\n            value: 2,\r\n          }],\r\n        }],\r\n      },\r\n      constellation2: {\r\n        name: tr(\"constellation2.name\"),\r\n        img: c2,\r\n        sections: [{\r\n          text: tr(\"constellation2.description\"),\r\n          conditional: { // FrozenToTheBone\r\n            key: \"c2\",\r\n            canShow: stats => stats.constellation >= 2,\r\n            name: \"Enemy Affected by Cryo\",\r\n            stats: {\r\n              normal_dmg_: 15,\r\n              charged_dmg_: 15,\r\n            },\r\n          },\r\n        }],\r\n      },\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          conditional: { // DivineSuppression\r\n            key: \"c4\",\r\n            canShow: stats => stats.constellation >= 4,\r\n            name: \"Enemy marked by Talisman\",\r\n            fields: [{//TODO: enemy atk decrease\r\n              text: \"Enemy ATK Decrease\",\r\n              value: \"20%\"\r\n            }],\r\n          },\r\n        }],\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: tr(\"constellation6.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.constellation >= 6,\r\n            text: \"Revival HP Regeneration\",\r\n            value: `50% of Max HP`,\r\n          }, {\r\n            canShow: stats => stats.constellation >= 6,\r\n            text: \"Cooldown\",\r\n            value: `15m`,\r\n          }],\r\n        }],\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Raiden_Shogun_Card.42d3c9bf.png\";","export default __webpack_public_path__ + \"static/media/Icon.85768183.png\";","export default __webpack_public_path__ + \"static/media/IconSide.8adde76c.png\";","export default __webpack_public_path__ + \"static/media/Banner.d3e30221.png\";","export default __webpack_public_path__ + \"static/media/constellation1.d253a96a.png\";","export default __webpack_public_path__ + \"static/media/constellation2.42095860.png\";","export default __webpack_public_path__ + \"static/media/constellation3.327c713d.png\";","export default __webpack_public_path__ + \"static/media/constellation4.d97d2ab0.png\";","export default __webpack_public_path__ + \"static/media/constellation5.aaec0fd7.png\";","export default __webpack_public_path__ + \"static/media/constellation6.374d6694.png\";","export default __webpack_public_path__ + \"static/media/skill.cf8afba7.png\";","export default __webpack_public_path__ + \"static/media/burst.cf10e384.png\";","export default __webpack_public_path__ + \"static/media/passive1.eb99e0d3.png\";","export default __webpack_public_path__ + \"static/media/passive2.b1ce5bf6.png\";","export default __webpack_public_path__ + \"static/media/passive3.c3274e1d.png\";","import card from './Character_Raiden_Shogun_Card.png'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data, energyCosts, getResolve, resolveStacks } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { chargedDocSection, conditionalHeader, normalSrc, plungeDocSection, sgt, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport { basicDMGFormulaText } from '../../../Util/FormulaTextUtil'\r\nimport { FormulaPathBase } from '../../formula'\r\nimport { KeyPath } from '../../../Util/KeyPathUtil'\r\nconst path = KeyPath<FormulaPathBase, any>().character.RaidenShogun\r\nconst tr = (strKey: string) => <Translate ns=\"char_RaidenShogun_gen\" key18={strKey} />\r\nconst charTr = (strKey: string) => <Translate ns=\"char_RaidenShogun\" key18={strKey} />\r\n\r\nfunction burstDMGFormulaText(percent, stats, intial = false) {\r\n  const resolveStack = getResolve(stats)\r\n\r\n  const resolve = (intial ? data.burst.resolve[stats.tlvl.burst] : data.burst.resolve_[stats.tlvl.burst])\r\n  let ratioText = <span>{percent}%</span>\r\n  if (resolveStack)\r\n    ratioText = <span>( {percent}% + {resolve}% * {resolveStack} ) * </span>\r\n  if (stats.constellation < 2)\r\n    return <span>{ratioText} {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)} </span>\r\n\r\n  const hitModeMultiKey = stats.hitMode === \"avgHit\" ? \"burst_avgHit_base_multi\" : stats.hitMode === \"critHit\" ? \"critHit_base_multi\" : \"\"\r\n  return <span>{ratioText} {Stat.printStat(\"finalATK\", stats)} * {(hitModeMultiKey ? <span>{Stat.printStat(hitModeMultiKey, stats)} * </span> : null)}{Stat.printStat(\"electro_burst_hit_base_multi\", stats)} * {enemyLevelMultiC2(stats)} * {Stat.printStat(\"electro_enemyRes_multi\", stats)}</span>\r\n}\r\n\r\nfunction skillDMGFormulaText(percent, stats) {\r\n  if (stats.constellation < 2)\r\n    return basicDMGFormulaText(percent, stats, \"skill\")\r\n\r\n  const hitModeMultiKey = stats.hitMode === \"avgHit\" ? \"skill_avgHit_base_multi\" : stats.hitMode === \"critHit\" ? \"critHit_base_multi\" : \"\"\r\n  return <span>{percent}% {Stat.printStat(\"finalATK\", stats)} * {(hitModeMultiKey ? <span>{Stat.printStat(hitModeMultiKey, stats)} * </span> : null)}{Stat.printStat(\"electro_skill_hit_base_multi\", stats)} * {enemyLevelMultiC2(stats)} * {Stat.printStat(\"electro_enemyRes_multi\", stats)}</span>\r\n}\r\nfunction enemyLevelMultiC2(stats) {\r\n  return <span>( ( 100 + {Stat.printStat(\"characterLevel\", stats)} ) / ( 100 + {Stat.printStat(\"characterLevel\", stats)} + ( 100 + {Stat.printStat(\"enemyLevel\", stats)} ) * Max( ( 100% - {Stat.printStat(\"enemyDEFRed_\", stats)} ) * ( 100% - 60% ) , 10% ) ) )</span>\r\n}\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"electro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          {\r\n            text: tr(\"auto.fields.normal\"),\r\n            fields: data.normal.hitArr.map((percentArr, i) =>\r\n            ({\r\n              text: <span>{sgt(`normal.hit${i + 1}`)} {i === 2 ? <span>(<Translate ns=\"sheet\" key18=\"hits\" values={{ count: 2 }} />)</span> : \"\"}</span>,\r\n              formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n              formula: formula.normal[i],\r\n              variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n            }))\r\n          },\r\n          chargedDocSection(tr, formula, data, data.charged.stam),\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: tr(\"skill.skillParams.0\"),\r\n            formulaText: stats => skillDMGFormulaText(data.skill.skillDMG[stats.tlvl.skill], stats),\r\n            formula: formula.skill.skillDMG,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: tr(\"skill.skillParams.1\"),\r\n            formulaText: stats => skillDMGFormulaText(data.skill.coorDMG[stats.tlvl.skill], stats),\r\n            formula: formula.skill.coorDMG,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: tr(\"skill.skillParams.2\"),\r\n            value: data.skill.duration\r\n          }, {\r\n            text: tr(\"skill.skillParams.4\"),\r\n            value: data.skill.cd\r\n          }],\r\n          conditional: {\r\n            key: \"e\",\r\n            name: charTr(\"skill.eye\"),\r\n            stats: {\r\n              modifiers: { burst_dmg_: [path.skill.eleBurConv()] },\r\n            },\r\n            fields: [{\r\n              text: tr(\"skill.skillParams.3\"),\r\n              formulaText: stats => <span>{data.skill.eleBurConv[stats.tlvl.skill] * 100}% * {data.burst.enerCost}</span>,\r\n              formula: formula.skill.eleBurConv,\r\n              fixed: 1,\r\n              unit: \"%\"\r\n            },]\r\n          },\r\n        }, {\r\n          conditional: {\r\n            key: \"ep\",\r\n            partyBuff: \"partyOnly\",\r\n            header: conditionalHeader(\"skill\", tr, skill),\r\n            description: tr(\"skill.description\"),\r\n            name: charTr(\"skill.partyCost\"),\r\n            states: Object.fromEntries(energyCosts.map(c => [c, {\r\n              name: `${c}`,\r\n              fields: [{\r\n                text: tr(\"skill.skillParams.3\"),\r\n                formulaText: stats => <span>{data.skill.eleBurConv[stats.tlvl.skill] * 100}% * {c}</span>,\r\n                formula: formula.skill[c],\r\n                fixed: 1,\r\n                unit: \"%\"\r\n              }],\r\n              stats: {\r\n                modifiers: { burst_dmg_: [[...path.skill(), `${c}`]] },\r\n              },\r\n            }]))\r\n          },\r\n        }]\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: tr(\"burst.skillParams.0\"),\r\n            formulaText: stats => burstDMGFormulaText(data.burst.dmg[stats.tlvl.burst], stats, true),\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.3\"),\r\n            formulaText: stats => burstDMGFormulaText(data.burst.hit1[stats.tlvl.burst], stats),\r\n            formula: formula.burst.hit1,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.4\"),\r\n            formulaText: stats => burstDMGFormulaText(data.burst.hit2[stats.tlvl.burst], stats),\r\n            formula: formula.burst.hit2,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.5\"),\r\n            formulaText: stats => burstDMGFormulaText(data.burst.hit3[stats.tlvl.burst], stats),\r\n            formula: formula.burst.hit3,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.6\"),\r\n            formulaText: stats => burstDMGFormulaText(data.burst.hit41[stats.tlvl.burst], stats),\r\n            formula: formula.burst.hit41,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.6\"),\r\n            formulaText: stats => burstDMGFormulaText(data.burst.hit42[stats.tlvl.burst], stats),\r\n            formula: formula.burst.hit42,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.7\"),\r\n            formulaText: stats => burstDMGFormulaText(data.burst.hit5[stats.tlvl.burst], stats),\r\n            formula: formula.burst.hit5,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.8\"),\r\n            formulaText: stats => burstDMGFormulaText(data.burst.charged1[stats.tlvl.burst], stats),\r\n            formula: formula.burst.charged1,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.8\"),\r\n            formulaText: stats => burstDMGFormulaText(data.burst.charged2[stats.tlvl.burst], stats),\r\n            formula: formula.burst.charged2,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.9\"),\r\n            value: data.burst.stam,\r\n          }, {\r\n            text: tr(\"burst.skillParams.10\"),\r\n            formulaText: stats => burstDMGFormulaText(data.burst.plunge[stats.tlvl.burst], stats),\r\n            formula: formula.burst.plunge,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.11\"),\r\n            formulaText: stats => burstDMGFormulaText(data.burst.plungeLow[stats.tlvl.burst], stats),\r\n            formula: formula.burst.plungeLow,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.11\"),\r\n            formulaText: stats => burstDMGFormulaText(data.burst.plungeHigh[stats.tlvl.burst], stats),\r\n            formula: formula.burst.plungeHigh,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          },\r\n          {\r\n            text: tr(\"burst.skillParams.12\"),\r\n            value: stats => data.burst.enerGen[stats.tlvl.burst],\r\n            fixed: 1\r\n          }, {\r\n            text: tr(\"burst.skillParams.13\"),\r\n            value: data.burst.duration,\r\n            unit: \"s\"\r\n          }, {\r\n            text: tr(\"burst.skillParams.14\"),\r\n            value: data.burst.cd,\r\n            unit: \"s\"\r\n          }, {\r\n            text: tr(\"burst.skillParams.15\"),\r\n            value: data.burst.enerCost,\r\n          }],\r\n          conditional: {\r\n            key: \"q\",\r\n            name: charTr(\"burst.resolves\"),\r\n            states: Object.fromEntries(resolveStacks.map(c => [c, {\r\n              name: `${c}`,\r\n            }]))\r\n          }\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: charTr(\"a4.enerRest\"),\r\n            value: stats => {\r\n              return (stats.enerRech_ - 100) * 0.6\r\n            },\r\n            unit: \"%\"\r\n          }, {\r\n            text: charTr(\"a4.eleDMG\"),\r\n            formulaText: stats => <span>( {Stat.printStat(\"enerRech_\", stats)} - 100% ) * 0.4</span>,\r\n            formula: formula.a4.eleDMG,\r\n            fixed: 1,\r\n            unit: \"%\"\r\n          }],\r\n          conditional: {\r\n            key: \"a4\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            maxStack: 0,\r\n            stats: {\r\n              modifiers: { electro_dmg_: [path.a4.eleDMG()] },\r\n            }\r\n          }\r\n        }],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          conditional: {\r\n            key: \"c4\",\r\n            canShow: stats => stats.constellation >= 4,\r\n            partyBuff: \"partyOnly\",\r\n            header: conditionalHeader(\"constellation4\", tr, c4),\r\n            description: tr(\"constellation4.description\"),\r\n            name: charTr(\"c4.expires\"),\r\n            stats: { atk_: 30 }\r\n          }\r\n        }],\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Razor_Card.21fbdbf1.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.5e893e86.png\";","export default __webpack_public_path__ + \"static/media/IconSide.9599f701.png\";","export default __webpack_public_path__ + \"static/media/Banner.9b4c9366.png\";","export default __webpack_public_path__ + \"static/media/constellation1.32eda7ed.png\";","export default __webpack_public_path__ + \"static/media/constellation2.5c123744.png\";","export default __webpack_public_path__ + \"static/media/constellation3.9d5f2267.png\";","export default __webpack_public_path__ + \"static/media/constellation4.552ef5c6.png\";","export default __webpack_public_path__ + \"static/media/constellation5.28d7901a.png\";","export default __webpack_public_path__ + \"static/media/constellation6.31748650.png\";","export default __webpack_public_path__ + \"static/media/skill.28d7901a.png\";","export default __webpack_public_path__ + \"static/media/burst.5579db70.png\";","export default __webpack_public_path__ + \"static/media/passive1.564cabb8.png\";","export default __webpack_public_path__ + \"static/media/passive2.c53f419c.png\";","export default __webpack_public_path__ + \"static/media/passive3.b4e1fa9b.png\";","import card from './Character_Razor_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant, } from \"../../../Build/Build\"\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate, TransWrapper } from '../../../Components/Translate'\r\nimport { claymoreChargedDocSection, normalDocSection, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport { Typography } from '@mui/material'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Razor_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"electro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"M\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          claymoreChargedDocSection(tr, formula, data),\r\n          plungeDocSection(tr, formula, data),\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Press DMG\",\r\n            formulaText: stats => <span>{data.skill.press[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.press,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Press CD\",\r\n            value: stats => 6 * (stats.ascension >= 1 ? 0.82 : 1) + \"s\",\r\n          }, {\r\n            text: \"Hold DMG\",\r\n            formulaText: stats => <span>{data.skill.hold[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.hold,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Hold CD\",\r\n            value: stats => 10 * (stats.ascension >= 1 ? 0.82 : 1) + \"s\",\r\n          }, {\r\n            text: \"Energy Recharge Bonus\",\r\n            value: \"20% per Electro Sigil\",\r\n          }, {\r\n            text: \"Hold Energy Generated\",\r\n            value: \"5 per Electro Sigil Absorbed\",\r\n          }, {\r\n            text: \"Electro Sigil Duration\",\r\n            value: \"18s\",\r\n          }],\r\n          conditional: { // ElectroSigil\r\n            key: \"e\",\r\n            name: \"Electro Sigil\",\r\n            maxStack: 3,\r\n            stats: { enerRech_: 20 },\r\n          },\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Elemental Burst DMG\",\r\n            formulaText: stats => <span>{data.burst.summon[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.summon,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          },\r\n          ...data.normal.hitArr.map((percentArr, i) => ({\r\n            text: `Companion ${i + 1}-Hit DMG`,\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% * {percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst[i],\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          })),\r\n          {\r\n            text: \"Duration\",\r\n            value: \"15s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"20s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 80,\r\n          }],\r\n          conditional: { // LightningFang\r\n            key: \"q\",\r\n            name: \"Lightning Fang\",\r\n            stats: stats => ({\r\n              electro_res_: 80,\r\n              atkSPD_: data.burst.atkspd[stats.tlvl.burst],\r\n            }),\r\n            fields: [{\r\n              text: \"Increases resistance to interruption\"\r\n            }]\r\n          },\r\n        }, {\r\n          text: (\r\n            <TransWrapper ns=\"char_Razor\" key18=\"fullBurstDMG.text\">\r\n              <Typography variant=\"h6\"><strong>Full Elemental Burst DMG</strong></Typography>\r\n              <Typography>This calculates the combined damage from Razor's normal attacks during his Elemental Burst.\r\n                It simply sums the Companion X-Hit DMG with the corresponding X-Hit DMG of the normal attack which triggers it.</Typography>\r\n            </TransWrapper>\r\n          ),\r\n          fields: data.normal.hitArr.map((percentArr, i) => ({\r\n            text: <Translate ns=\"char_Razor\" key18=\"fullBurstDMG.label\" values={{ hitNum: i + 1 }} />,\r\n            formulaText: stats => <span>\r\n              {percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}\r\n              + {data.burst.dmg[stats.tlvl.burst]}% * {percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst[`c${i}`],\r\n          })),\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          conditional: { // Hunger\r\n            key: \"a4\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            name: \"Energy < 50%\",\r\n            stats: { enerRech_: 30 },\r\n          },\r\n        }],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: {\r\n        name: tr(\"constellation1.name\"),\r\n        img: c1,\r\n        sections: [{\r\n          text: tr(\"constellation1.description\"),\r\n          conditional: { // WolfsInstinct\r\n            key: \"c1\",\r\n            canShow: stats => stats.constellation >= 1,\r\n            name: \"Pickup Elemental Particle\",\r\n            stats: { dmg_: 10 },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"8s\",\r\n            }],\r\n          },\r\n        }],\r\n      },\r\n      constellation2: {\r\n        name: tr(\"constellation2.name\"),\r\n        img: c2,\r\n        sections: [{\r\n          text: tr(\"constellation2.description\"),\r\n          conditional: { // Suppression\r\n            key: \"c2\",\r\n            canShow: stats => stats.constellation >= 2,\r\n            name: \"Enemy with <30% HP\",\r\n            stats: { critRate_: 10 },\r\n          },\r\n        }],\r\n      },\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          conditional: { // Bite\r\n            key: \"c4\",\r\n            canShow: stats => stats.constellation >= 4,\r\n            name: <span>Casting <b>Claw and Thunder</b> (Press)</span>,\r\n            stats: { enemyDEFRed_: 15 },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"7s\",\r\n            }],\r\n          },\r\n        }],\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: tr(\"constellation6.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.constellation >= 6,\r\n            text: \"Lupus Fulguris DMG\",\r\n            formulaText: stats => <span>100% {Stat.printStat(getTalentStatKey(\"elemental\", stats), stats)}</span>,\r\n            formula: formula.constellation6.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"elemental\", stats),\r\n          }, {\r\n            canShow: stats => stats.constellation >= 6,\r\n            text: \"Electro Sigils per proc\",\r\n            value: 1,\r\n          }, {\r\n            canShow: stats => stats.constellation >= 6,\r\n            text: \"Cooldown\",\r\n            value: `10s`,\r\n          }],\r\n        }],\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Rosaria_Card.fa74eef6.png\";","export default __webpack_public_path__ + \"static/media/Icon.d110736f.png\";","export default __webpack_public_path__ + \"static/media/IconSide.299fb612.png\";","export default __webpack_public_path__ + \"static/media/Banner.6d363b4b.png\";","export default __webpack_public_path__ + \"static/media/constellation1.79b8665b.png\";","export default __webpack_public_path__ + \"static/media/constellation2.87942262.png\";","export default __webpack_public_path__ + \"static/media/constellation3.6843fed6.png\";","export default __webpack_public_path__ + \"static/media/constellation4.db2b9fb2.png\";","export default __webpack_public_path__ + \"static/media/constellation5.72aea1dc.png\";","export default __webpack_public_path__ + \"static/media/constellation6.11953178.png\";","export default __webpack_public_path__ + \"static/media/skill.2e6a03b1.png\";","export default __webpack_public_path__ + \"static/media/burst.b0221b69.png\";","export default __webpack_public_path__ + \"static/media/passive1.f34c1bf0.png\";","export default __webpack_public_path__ + \"static/media/passive2.660d0148.png\";","export default __webpack_public_path__ + \"static/media/passive3.6a325a2a.png\";","import card from './Character_Rosaria_Card.png'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { conditionalHeader, normalSrc, plungeDocSection, sgt, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport { KeyPath } from '../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../formula'\r\nconst path = KeyPath<FormulaPathBase, any>().character.Rosaria\r\nconst tr = (strKey: string) => <Translate ns=\"char_Rosaria_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"cryo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [{\r\n          text: tr(\"auto.fields.normal\"),\r\n          fields: data.normal.hitArr.map((percentArr, i) =>\r\n          ({\r\n            text: <span>{sgt(`normal.hit${i + (i < 5 ? 1 : 0)}`)} {i === 4 ? \"(1)\" : i === 5 ? \"(2)\" : i === 2 ? <span>(<Translate ns=\"sheet\" key18=\"hits\" values={{ count: 2 }} />)</span> : \"\"}</span>,\r\n            formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n            formula: formula.normal[i],\r\n            variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n          }))\r\n        }, {\r\n          text: tr(\"auto.fields.charged\"),\r\n          fields: [{\r\n            text: sgt(\"charged.dmg\"),\r\n            formulaText: stats => <span>{data.charged.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n            formula: formula.charged.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }, {\r\n            text: sgt(\"charged.stamina\"),\r\n            value: 25,\r\n          }]\r\n        },\r\n        plungeDocSection(tr, formula, data)],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: <span>{sgt(\"skillDMG\")} 1</span>,\r\n            formulaText: stats => <span>{data.skill.hit1[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.hit1,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: <span>{sgt(\"skillDMG\")} 2</span>,\r\n            formulaText: stats => <span>{data.skill.hit2[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.hit2,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: sgt(\"cd\"),\r\n            value: \"6s\",\r\n          }],\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: <span>{sgt(\"burstDMG\")} 1</span>,\r\n            formulaText: stats => <span>{data.burst.hit1[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.hit1,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: <span>{sgt(\"burstDMG\")} 2</span>,\r\n            formulaText: stats => <span>{data.burst.hit2[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.hit2,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: sgt(\"dot\"),\r\n            formulaText: stats => <span>{data.burst.dot[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dot,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: sgt(\"duration\"),\r\n            value: \"8s\",\r\n          }, {\r\n            text: sgt(\"cd\"),\r\n            value: \"15s\",\r\n          }, {\r\n            text: sgt(\"energyCost\"),\r\n            value: 60,\r\n          }],\r\n          conditional: { // DivineRetribution\r\n            key: \"c6\",\r\n            canShow: stats => stats.constellation >= 6,\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"constellation6\", tr, c6),\r\n            description: tr(\"constellation6.description\"),\r\n            name: <Translate ns=\"char_Rosaria\" key18=\"c6\" />,\r\n            stats: { physical_enemyRes_: -20 },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: 10,\r\n              unit: \"s\"\r\n            }]\r\n          }\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          conditional: { // ReginaProbationum\r\n            key: \"a1\",\r\n            canShow: stats => stats.ascension >= 1,\r\n            name: <Translate ns=\"char_Rosaria\" key18=\"a1\" />,\r\n            stats: { critRate_: 12 },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: \"5s\"\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          conditional: { // ShadowSamaritan\r\n            key: \"a4\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            partyBuff: \"partyOnly\",\r\n            header: conditionalHeader(\"passive2\", tr, passive2),\r\n            description: tr(\"passive2.description\"),\r\n            name: <Translate ns=\"char_Rosaria\" key18=\"a4.name\" />,\r\n            stats: {\r\n              modifiers: { critRate_: [path.passive2.critConv()] },\r\n            },\r\n            fields: [{\r\n              text: <Translate ns=\"char_Rosaria\" key18=\"a4.text\" />,\r\n              formulaText: stats => <span>15% * {Stat.printStat(\"critRate_\", stats)}</span>,\r\n              formula: formula.passive2.critConv,\r\n              fixed: 1,\r\n              unit: \"%\"\r\n            }, {\r\n              text: sgt(\"duration\"),\r\n              value: \"10s\",\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: {\r\n        name: tr(\"constellation1.name\"),\r\n        img: c1,\r\n        sections: [{\r\n          text: tr(\"constellation1.description\"),\r\n          conditional: { // UnholyRevelation\r\n            key: \"c1\",\r\n            canShow: stats => stats.constellation >= 1,\r\n            name: <Translate ns=\"char_Rosaria\" key18=\"c1\" />,\r\n            stats: { normal_dmg_: 10, atkSPD_: 10 },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: \"4s\"\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;","export default __webpack_public_path__ + \"static/media/Character_Sangonomiya_Kokomi_Card.9677564d.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.e541c7fd.png\";","export default __webpack_public_path__ + \"static/media/IconSide.b2a53f73.png\";","export default __webpack_public_path__ + \"static/media/Banner.acd7cf95.png\";","export default __webpack_public_path__ + \"static/media/constellation1.5b22b42c.png\";","export default __webpack_public_path__ + \"static/media/constellation2.1bdc0f19.png\";","export default __webpack_public_path__ + \"static/media/constellation3.52e2f268.png\";","export default __webpack_public_path__ + \"static/media/constellation4.20add9a3.png\";","export default __webpack_public_path__ + \"static/media/constellation5.cac6b2b0.png\";","export default __webpack_public_path__ + \"static/media/constellation6.0cb9a8dc.png\";","export default __webpack_public_path__ + \"static/media/skill.cac6b2b0.png\";","export default __webpack_public_path__ + \"static/media/burst.45450e3d.png\";","export default __webpack_public_path__ + \"static/media/passive.179aa495.png\";","export default __webpack_public_path__ + \"static/media/passive1.e7335103.png\";","export default __webpack_public_path__ + \"static/media/passive2.548c25f1.png\";","export default __webpack_public_path__ + \"static/media/passive3.358ebfaa.png\";","import card from './Character_Sangonomiya_Kokomi_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive from './passive.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { normalSrc, plungeDocSection, sgt, st, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport { basicDMGFormulaText } from '../../../Util/FormulaTextUtil'\r\nimport { BasicStats } from '../../../Types/stats'\r\nconst tr = (strKey: string) => <Translate ns=\"char_SangonomiyaKokomi_gen\" key18={strKey} />\r\nconst charTr = (strKey: string) => <Translate ns=\"char_SangonomiyaKokomi\" key18={strKey} />\r\nfunction burstOn(stats) {\r\n  const [num,] = stats.conditionalValues?.character?.SangonomiyaKokomi?.q ?? []\r\n  if (!num) return false\r\n  return true\r\n}\r\nfunction c2On(stats) {\r\n  if (stats.constellation < 2) return false\r\n  const [num,] = stats.conditionalValues?.character?.SangonomiyaKokomi?.c2 ?? []\r\n  if (!num) return false\r\n  return true\r\n}\r\nfunction ncText(percent: number, hpPercent: number, stats: BasicStats, skillKey: string) {\r\n  const hasA4 = stats.ascension >= 4\r\n  const hpText = hasA4 ? <span>( {hpPercent}% + {data.p2.heal_ratio}% * {Stat.printStat(\"heal_\", stats)})</span> : `${hpPercent}%`\r\n  return <span>( {percent}% {Stat.printStat(\"finalATK\", stats)} + {hpText} * {Stat.printStat(\"finalHP\", stats)} ) * {Stat.printStat(getTalentStatKey(skillKey, stats) + \"_multi\", stats)}</span>\r\n}\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"hydro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          {\r\n            text: tr(`auto.fields.normal`),\r\n            fields: data.normal.hitArr.flatMap((percentArr, i) => [{\r\n              text: sgt(`normal.hit${i + 1}`),\r\n              canShow: stats => !burstOn(stats),\r\n              formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n              formula: formula.normal[i],\r\n              variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n            }, {\r\n              text: sgt(`normal.hit${i + 1}`),\r\n              canShow: stats => burstOn(stats),\r\n              formulaText: stats => ncText(percentArr[stats.tlvl.auto], data.burst.nBonus[stats.tlvl.burst], stats, \"normal\"),\r\n              formula: formula.normal[`${i}HP`],\r\n              variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n            }])\r\n          },\r\n          {\r\n            text: tr(`auto.fields.charged`),\r\n            fields: [{\r\n              text: sgt(`charged.dmg`),\r\n              canShow: stats => !burstOn(stats),\r\n              formulaText: stats => <span>{data.charged.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n              formula: formula.charged.dmg,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n            }, {\r\n              text: sgt(`charged.dmg`),\r\n              canShow: stats => burstOn(stats),\r\n              formulaText: stats => ncText(data.charged.dmg[stats.tlvl.auto], data.burst.cBonus[stats.tlvl.burst], stats, \"charged\"),\r\n              formula: formula.charged.dmgHP,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n            }, {\r\n              text: sgt(\"charged.stamina\"),\r\n              value: data.charged.stam,\r\n            }]\r\n          },\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [\r\n            {\r\n              text: tr(\"skill.skillParams.0\"),\r\n              canShow: stats => !c2On(stats),\r\n              formulaText: stats => <span>( {data.skill.heal_[stats.tlvl.skill]}% {Stat.printStat(\"finalHP\", stats)} + {data.skill.heal[stats.tlvl.skill]} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n              formula: formula.skill.regen,\r\n              variant: \"success\"\r\n            }, {\r\n              text: tr(\"skill.skillParams.0\"),\r\n              canShow: stats => c2On(stats),\r\n              formulaText: stats => <span>( ( {data.skill.heal_[stats.tlvl.skill]}% + {data.c2.s_heal_}% ) * {Stat.printStat(\"finalHP\", stats)} + {data.skill.heal[stats.tlvl.skill]} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n              formula: formula.skill.regenC2,\r\n              variant: \"success\"\r\n            }, {\r\n              text: tr(\"skill.skillParams.1\"),\r\n              canShow: stats => !burstOn(stats),\r\n              formulaText: stats => basicDMGFormulaText(data.skill.dmg[stats.tlvl.skill], stats, \"skill\"),\r\n              formula: formula.skill.dmg,\r\n              variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n            }, {\r\n              text: tr(\"skill.skillParams.1\"),\r\n              canShow: stats => burstOn(stats),\r\n              formulaText: stats => <span>( {data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(\"finalATK\", stats)} + {data.burst.sBonus[stats.tlvl.burst]}% {Stat.printStat(\"finalHP\", stats)} ) * {Stat.printStat(getTalentStatKey(\"skill\", stats) + \"_multi\", stats)}</span>,\r\n              formula: formula.skill.dmgHP,\r\n              variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n            }, {\r\n              text: tr(\"skill.skillParams.2\"),\r\n              value: data.skill.duration,\r\n              unit: \"s\"\r\n            }, {\r\n              text: tr(\"skill.skillParams.3\"),\r\n              value: data.skill.cd,\r\n              unit: \"s\"\r\n            }]\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: tr(\"burst.skillParams.0\"),\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)} </span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.5\"),\r\n            value: data.burst.duration,\r\n            unit: \"s\"\r\n          }, {\r\n            text: tr(\"burst.skillParams.6\"),\r\n            value: data.burst.cd,\r\n            unit: \"s\"\r\n          }, {\r\n            text: tr(\"burst.skillParams.7\"),\r\n            value: data.burst.cost,\r\n          }],\r\n          conditional: { //burst\r\n            key: \"q\",\r\n            name: charTr(\"burst\"),\r\n            fields: [{\r\n              text: tr(\"burst.skillParams.4\"),\r\n              canShow: stats => !c2On(stats),\r\n              formulaText: stats => <span>( {data.burst.heal_[stats.tlvl.burst]}% {Stat.printStat(\"finalHP\", stats)} + {data.burst.heal[stats.tlvl.burst]} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n              formula: formula.burst.regen,\r\n              variant: \"success\"\r\n            }, {\r\n              text: tr(\"burst.skillParams.4\"),\r\n              canShow: stats => c2On(stats),\r\n              formulaText: stats => <span>( ( {data.burst.heal_[stats.tlvl.burst]}% + {data.c2.nc_heal_}% ) * {Stat.printStat(\"finalHP\", stats)} + {data.burst.heal[stats.tlvl.burst]} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n              formula: formula.burst.regenC2,\r\n              variant: \"success\"\r\n            },]\r\n          },\r\n        }],\r\n      },\r\n      passive: {\r\n        name: tr(\"passive.name\"),\r\n        img: passive,\r\n        sections: [{\r\n          text: tr(\"passive.description\"),\r\n          conditional: {\r\n            key: \"pas\",\r\n            maxStack: 0,\r\n            stats: {\r\n              critRate_: -100,\r\n              heal_: 25,\r\n            },\r\n          }\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: {\r\n        name: tr(\"constellation1.name\"),\r\n        img: c1,\r\n        sections: [{\r\n          text: tr(\"constellation1.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.constellation >= 1,\r\n            text: st(\"dmg\"),\r\n            formulaText: stats => <span>{data.c1.hp_}% * {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(getTalentStatKey(\"elemental\", stats) + \"_multi\", stats)} </span>,\r\n            formula: formula.c1.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }]\r\n        }],\r\n      },\r\n      constellation2: {\r\n        name: tr(\"constellation2.name\"),\r\n        img: c2,\r\n        sections: [{\r\n          text: tr(\"constellation2.description\"),\r\n          conditional: {\r\n            key: \"c2\",\r\n            canShow: stats => stats.constellation >= 2,\r\n            name: charTr(\"c2\"),\r\n          },\r\n        }],\r\n      },\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          conditional: {\r\n            key: \"c4\",\r\n            maxStack: 0,\r\n            canShow: stats => stats.constellation >= 4 && burstOn(stats),\r\n            stats: {\r\n              atkSPD_: 10\r\n            },\r\n          }\r\n        }],\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: tr(\"constellation6.description\"),\r\n          conditional: {\r\n            key: \"c6\",\r\n            canShow: stats => stats.constellation >= 6 && burstOn(stats),\r\n            name: charTr(\"c6\"),\r\n            stats: {\r\n              hydro_dmg_: data.c6.hydro_\r\n            },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: data.c6.duration,\r\n              unit: \"s\"\r\n            }]\r\n          }\r\n        }],\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Sayu_Card.bc8a0e3b.png\";","export default __webpack_public_path__ + \"static/media/Icon.9bfa5479.png\";","export default __webpack_public_path__ + \"static/media/IconSide.8f96b84c.png\";","export default __webpack_public_path__ + \"static/media/Banner.8a249d4f.png\";","export default __webpack_public_path__ + \"static/media/constellation1.1d25b282.png\";","export default __webpack_public_path__ + \"static/media/constellation2.744e3a72.png\";","export default __webpack_public_path__ + \"static/media/constellation3.94fd1754.png\";","export default __webpack_public_path__ + \"static/media/constellation4.26f1ad51.png\";","export default __webpack_public_path__ + \"static/media/constellation5.c0b4e262.png\";","export default __webpack_public_path__ + \"static/media/constellation6.f91293e5.png\";","export default __webpack_public_path__ + \"static/media/skill.c0b4e262.png\";","export default __webpack_public_path__ + \"static/media/burst.d7bf3e73.png\";","export default __webpack_public_path__ + \"static/media/passive1.0817fff1.png\";","export default __webpack_public_path__ + \"static/media/passive2.bd1bf6fe.png\";","export default __webpack_public_path__ + \"static/media/passive3.7d33feae.png\";","import card from './Character_Sayu_Card.png'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { claymoreChargedDocSection, normalSrc, plungeDocSection, sgt, st, talentTemplate } from '../SheetUtil'\r\nimport { basicDMGFormulaText } from '../../../Util/FormulaTextUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport { absorbableEle } from '../dataUtil'\r\nimport ColorText from '../../../Components/ColoredText'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Sayu_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"anemo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          {\r\n            text: tr(\"auto.fields.normal\"),\r\n            fields: data.normal.hitArr.map((percentArr, i) =>\r\n            ({\r\n              text: <span>{sgt(`normal.hit${i + 1}`)} {i === 2 ? <span>(<Translate ns=\"sheet\" key18=\"hits\" values={{ count: 2 }} />)</span> : \"\"}</span>,\r\n              formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n              formula: formula.normal[i],\r\n              variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n            }))\r\n          },\r\n          claymoreChargedDocSection(tr, formula, data),\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: tr(\"skill.skillParams.0\"),\r\n            formulaText: stats => basicDMGFormulaText(data.skill.dmg[stats.tlvl.skill], stats, \"skill\"),\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: tr(\"skill.skillParams.1\"),\r\n            formulaText: stats => {\r\n              const skillPercent = data.skill.kick_press[stats.tlvl.skill]\r\n              if (stats.constellation < 2) return basicDMGFormulaText(skillPercent, stats, \"skill\")\r\n              const hitModeMultiKey = stats.hitMode === \"avgHit\" ? \"skill_avgHit_base_multi\" : stats.hitMode === \"critHit\" ? \"critHit_base_multi\" : \"\"\r\n              return <span> {skillPercent} % {Stat.printStat(\"finalATK\", stats)} {hitModeMultiKey ? <span>* {Stat.printStat(hitModeMultiKey, stats)} </span> : null}* ( {Stat.printStat(\"anemo_skill_hit_base_multi\", stats)} + 3.3% ) * {Stat.printStat(\"enemyLevel_multi\", stats)} * {Stat.printStat(\"anemo_enemyRes_multi\", stats)}</span >\r\n            },\r\n            formula: formula.skill.kick_press,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: tr(\"skill.skillParams.2\"),\r\n            formulaText: stats => {\r\n              const skillPercent = data.skill.kick_hold[stats.tlvl.skill]\r\n              const basic = () => basicDMGFormulaText(skillPercent, stats, \"skill\")\r\n              if (stats.constellation < 2) return basic()\r\n              const [num] = stats.conditionalValues?.character?.Sayu?.c2 ?? []\r\n              if (!num) return basic()\r\n\r\n              const hitModeMultiKey = stats.hitMode === \"avgHit\" ? \"skill_avgHit_base_multi\" : stats.hitMode === \"critHit\" ? \"critHit_base_multi\" : \"\"\r\n              return <span> {skillPercent} % {Stat.printStat(\"finalATK\", stats)} {hitModeMultiKey ? <span>* {Stat.printStat(hitModeMultiKey, stats)} </span> : null}* ( {Stat.printStat(\"anemo_skill_hit_base_multi\", stats)} + 3.3% * <ColorText color=\"info\">{num}</ColorText> stacks ) * {Stat.printStat(\"enemyLevel_multi\", stats)} * {Stat.printStat(\"anemo_enemyRes_multi\", stats)}</span>\r\n            },\r\n            formula: formula.skill.kick_hold,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: tr(\"skill.skillParams.5\"),\r\n            value: \"10s\"\r\n          }, {\r\n            text: tr(\"skill.skillParams.6\"),\r\n            value: \"6s ~ 11s\"\r\n          }],\r\n          conditional: { // Absorption\r\n            key: \"e\",\r\n            name: st(\"eleAbsor\"),\r\n            states: Object.fromEntries(absorbableEle.map(eleKey => [eleKey, {\r\n              name: <ColorText color={eleKey}>{sgt(`element.${eleKey}`)}</ColorText>,\r\n              fields: [{\r\n                canShow: stats => {\r\n                  const [num, condEleKey] = stats.conditionalValues?.character?.Sayu?.e ?? []\r\n                  return !!num && condEleKey === eleKey\r\n                },\r\n                text: tr(\"skill.skillParams.3\"),\r\n                formulaText: stats => basicDMGFormulaText(data.skill.ele_dmg[stats.tlvl.skill], stats, \"skill\"),\r\n                formula: formula.skill[eleKey],\r\n                variant: eleKey\r\n              }, {\r\n                canShow: stats => {\r\n                  const [num, condEleKey] = stats.conditionalValues?.character?.Sayu?.e ?? []\r\n                  return !!num && condEleKey === eleKey\r\n                },\r\n                text: tr(\"skill.skillParams.4\"),\r\n                formulaText: stats => {\r\n                  const skillPercent = data.skill.ele_kick[stats.tlvl.skill]\r\n                  const basic = () => basicDMGFormulaText(skillPercent, stats, \"skill\", eleKey)\r\n                  if (stats.constellation < 2) return basic()\r\n                  const [num] = stats.conditionalValues?.character?.Sayu?.c2 ?? []\r\n                  if (!num) return basic()\r\n\r\n                  const hitModeMultiKey = stats.hitMode === \"avgHit\" ? \"skill_avgHit_base_multi\" : stats.hitMode === \"critHit\" ? \"critHit_base_multi\" : \"\"\r\n                  return <span> {skillPercent} % {Stat.printStat(\"finalATK\", stats)} {hitModeMultiKey ? <span>* {Stat.printStat(hitModeMultiKey, stats)} </span> : null}* ( {Stat.printStat(`${eleKey}_skill_hit_base_multi`, stats)} + 3.3% * <ColorText color=\"info\">{num}</ColorText> stacks ) * {Stat.printStat(\"enemyLevel_multi\", stats)} * {Stat.printStat(`${eleKey}_enemyRes_multi`, stats)}</span >\r\n                },\r\n                formula: formula.skill[`${eleKey}_kick`],\r\n                variant: eleKey\r\n              }],\r\n            }]))\r\n          },\r\n        }, {\r\n          conditional: {\r\n            key: \"c2\",\r\n            name: \"Every 0.5 in Fuufuu Windwheeel state\",\r\n            maxStack: 20,\r\n          }\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: tr(\"burst.skillParams.0\"),\r\n            formulaText: stats => basicDMGFormulaText(data.burst.dmg[stats.tlvl.burst], stats, \"burst\"),\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.1\"),\r\n            formulaText: stats => <span>( {data.burst.heal_[stats.tlvl.burst]}% {Stat.printStat(\"finalATK\", stats)} + {data.burst.heal[stats.tlvl.burst]} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.burst.heal,\r\n            variant: \"success\",\r\n          }, {\r\n            text: tr(\"burst.skillParams.2\"),\r\n            formulaText: stats => {\r\n              if (stats.constellation < 6) return basicDMGFormulaText(data.burst.muji_dmg[stats.tlvl.burst], stats, \"burst\")\r\n              else return <span>( {data.burst.muji_dmg[stats.tlvl.burst]}% + min( 400%, 0.2% {Stat.printStat(\"eleMas\", stats)} )) * {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)} </span>\r\n            },\r\n            formula: formula.burst.muji_dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.3\"),\r\n            formulaText: stats => {\r\n              if (stats.constellation < 6) return <span>( {data.burst.muji_heal_[stats.tlvl.burst]}% {Stat.printStat(\"finalATK\", stats)} + {data.burst.muji_heal[stats.tlvl.burst]} ) * {Stat.printStat(\"heal_multi\", stats)}</span>\r\n              else return <span>( {data.burst.muji_heal_[stats.tlvl.burst]}% {Stat.printStat(\"finalATK\", stats)} + {data.burst.muji_heal[stats.tlvl.burst]} + 3 * {Stat.printStat(\"eleMas\", stats)} ) * {Stat.printStat(\"heal_multi\", stats)}</span>\r\n            },\r\n            formula: formula.burst.muji_heal,\r\n            variant: \"success\",\r\n          }, {\r\n            text: tr(\"burst.skillParams.4\"),\r\n            value: \"12s\",\r\n          }, {\r\n            text: tr(\"burst.skillParams.5\"),\r\n            value: \"20\",\r\n          }, {\r\n            text: tr(\"burst.skillParams.6\"),\r\n            value: 80,\r\n          }]\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          fields: [{\r\n            text: sgt(\"healing\"),\r\n            formulaText: stats => <span>( 300 + 1.2 * {Stat.printStat(\"eleMas\", stats)} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.passive1.heal,\r\n            variant: \"success\",\r\n          }, {\r\n            canShow: stats => stats.ascension >= 1,\r\n            text: sgt(\"cd\"),\r\n            value: \"2s\",\r\n          }]\r\n        }],\r\n      },\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          fields: [{\r\n            text: sgt(\"healing\"),\r\n            formulaText: stats => <span>20% * ( {data.burst.muji_heal_[stats.tlvl.burst]}% {Stat.printStat(\"finalATK\", stats)} + {data.burst.muji_heal[stats.tlvl.burst]} ) * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n            formula: formula.passive2.heal,\r\n            variant: \"success\",\r\n          }]\r\n        }],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Sucrose_Card.ef1bd7db.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.b2fb024a.png\";","export default __webpack_public_path__ + \"static/media/IconSide.8d617903.png\";","export default __webpack_public_path__ + \"static/media/Banner.3f41953c.png\";","export default __webpack_public_path__ + \"static/media/constellation1.7d9e1daa.png\";","export default __webpack_public_path__ + \"static/media/constellation2.41513e9d.png\";","export default __webpack_public_path__ + \"static/media/constellation3.4522cc05.png\";","export default __webpack_public_path__ + \"static/media/constellation4.36becbc7.png\";","export default __webpack_public_path__ + \"static/media/constellation5.bc47f845.png\";","export default __webpack_public_path__ + \"static/media/constellation6.00893665.png\";","export default __webpack_public_path__ + \"static/media/skill.4522cc05.png\";","export default __webpack_public_path__ + \"static/media/burst.5c5ea28e.png\";","export default __webpack_public_path__ + \"static/media/passive1.80218f92.png\";","export default __webpack_public_path__ + \"static/media/passive2.153ce525.png\";","export default __webpack_public_path__ + \"static/media/passive3.469169c5.png\";","import card from './Character_Sucrose_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from \"../../../Build/Build\"\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { absorbableEle } from '../dataUtil'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { chargedDocSection, conditionalHeader, normalDocSection, normalSrc, plungeDocSection, sgt, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport ColorText from '../../../Components/ColoredText'\r\nimport { KeyPath } from '../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../formula'\r\nconst path = KeyPath<FormulaPathBase, any>().character.Sucrose\r\nconst tr = (strKey: string) => <Translate ns=\"char_Sucrose_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"anemo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          chargedDocSection(tr, formula, data, 50),\r\n          plungeDocSection(tr, formula, data),\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>{data.skill.press[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.press,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"15s\"\r\n          }]\r\n        }]\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"DoT\",\r\n            formulaText: stats => <span>{data.burst.dot[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dot,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Duration\",\r\n            value: \"6s\"\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"20s\"\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: \"80\"\r\n          }],\r\n          conditional: { // Absorption\r\n            key: \"q\",\r\n            name: \"Elemental Absorption\",\r\n            states: Object.fromEntries(absorbableEle.map(eleKey => [eleKey, {\r\n              name: <ColorText color={eleKey}>{sgt(`element.${eleKey}`)}</ColorText>,\r\n              fields: [{\r\n                canShow: stats => {\r\n                  const [num, condEleKey] = stats.conditionalValues?.character?.Sucrose?.q ?? []\r\n                  return !!num && condEleKey === eleKey\r\n                },\r\n                text: \"Absorption DoT\",\r\n                formulaText: stats => <span>{data.burst.dmg_[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats, eleKey), stats)}</span>,\r\n                formula: formula.burst[eleKey],\r\n                variant: eleKey\r\n              }]\r\n            }]))\r\n          },\r\n        }, {\r\n          conditional: { // Absorption\r\n            key: \"c6\",\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"constellation6\", tr, c6),\r\n            description: tr(\"constellation6.description\"),\r\n            name: \"Elemental Absorption\",\r\n            canShow: stats => stats.constellation >= 6,\r\n            states: Object.fromEntries(absorbableEle.map(eleKey => [eleKey, {\r\n              name: <ColorText color={eleKey}>{sgt(`element.${eleKey}`)}</ColorText>,\r\n              stats: { [`${eleKey}_dmg_`]: 20 }\r\n            }]))\r\n          },\r\n        }]\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          conditional: {\r\n            key: \"a1\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            partyBuff: \"partyOnly\",\r\n            header: conditionalHeader(\"passive1\", tr, passive1),\r\n            description: tr(\"passive1.description\"),\r\n            name: \"When Sucrose triggers a Swirl reaction\",\r\n            fields: [{\r\n              text: <ColorText color=\"warning\">This Team buff currently does not work. please add the EM manually to the characer.</ColorText>\r\n            }]\r\n          }\r\n        }]\r\n      },\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          conditional: {\r\n            key: \"a4\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            partyBuff: \"partyOnly\",\r\n            header: conditionalHeader(\"passive2\", tr, passive2),\r\n            description: tr(\"passive2.description\"),\r\n            name: \"When Skill hits opponent\",\r\n            stats: {\r\n              modifiers: { eleMas: [path.passive2.em()] },\r\n            },\r\n            fields: [{\r\n              text: \"Elemental Mastery Bonus\",\r\n              formulaText: stats => <span>20% {Stat.printStat(\"eleMas\", stats, true)}</span>,\r\n              formula: formula.passive2.em\r\n            }, {\r\n              text: sgt(\"duration\"),\r\n              value: 8,\r\n              unit: \"s\"\r\n            }]\r\n          }\r\n        }]\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Tartaglia_Card.f38435b0.png\";","export default __webpack_public_path__ + \"static/media/Icon.1fb5b3bf.png\";","export default __webpack_public_path__ + \"static/media/IconSide.e8004789.png\";","export default __webpack_public_path__ + \"static/media/Banner.083a9b94.png\";","export default __webpack_public_path__ + \"static/media/constellation1.4eaa34b0.png\";","export default __webpack_public_path__ + \"static/media/constellation2.aa319908.png\";","export default __webpack_public_path__ + \"static/media/constellation3.637d2ba1.png\";","export default __webpack_public_path__ + \"static/media/constellation4.72b3deb7.png\";","export default __webpack_public_path__ + \"static/media/constellation5.7ab0d091.png\";","export default __webpack_public_path__ + \"static/media/constellation6.09ed7d47.png\";","export default __webpack_public_path__ + \"static/media/skill.80210dfe.png\";","export default __webpack_public_path__ + \"static/media/burst.877b770a.png\";","export default __webpack_public_path__ + \"static/media/passive1.b24f5d70.png\";","export default __webpack_public_path__ + \"static/media/passive2.450cd084.png\";","export default __webpack_public_path__ + \"static/media/passive3.07282ce2.png\";","import card from './Character_Tartaglia_Card.png'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { bowChargedDocSection, conditionalHeader, normalDocSection, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Tartaglia_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"hydro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"M\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          bowChargedDocSection(tr, formula, data, \"hydro\"),\r\n          {\r\n            text: tr(`auto.fields.riptide`),\r\n            fields: [{\r\n              text: `Riptide Flash DMG (3 Hits)`,\r\n              formulaText: stats => <span>{data.riptide.flash[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats, \"hydro\"), stats)}</span>,\r\n              formula: formula.normal.flash,\r\n              variant: stats => getTalentStatKeyVariant(\"normal\", stats, \"hydro\"),\r\n            }, {\r\n              text: `Riptide Burst DMG`,\r\n              formulaText: stats => <span>{data.riptide.burst[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats, \"hydro\"), stats)}</span>,\r\n              formula: formula.normal.burst,\r\n              variant: stats => getTalentStatKeyVariant(\"normal\", stats, \"hydro\"),\r\n            }]\r\n          },\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Stance Change DMG\",\r\n            formulaText: stats => <span>{data.skill.skillDmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.skillDmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          },\r\n          ...data.skill.hitArr.map((percentArr, i) => ({\r\n            text: `${i + (i < 6 ? 1 : 0)}${i > 4 ? `.${i - 4}` : \"\"}-Hit DMG`,\r\n            formulaText: stats => <span>{percentArr[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"normal\", stats, \"hydro\"), stats)}</span>,\r\n            formula: formula.skill[i],\r\n            variant: stats => getTalentStatKeyVariant(\"normal\", stats, \"hydro\"),\r\n          })), {\r\n            text: `Charged 1-Hit DMG`,\r\n            formulaText: stats => <span>{data.skill.charged1[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"charged\", stats, \"hydro\"), stats)}</span>,\r\n            formula: formula.skill.charged1,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats, \"hydro\"),\r\n          }, {\r\n            text: `Charged 2-Hit DMG`,\r\n            formulaText: stats => <span>{data.skill.charged2[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"charged\", stats, \"hydro\"), stats)}</span>,\r\n            formula: formula.skill.charged2,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats, \"hydro\"),\r\n          }, {\r\n            text: `Charged Attack Stamina Cost`,\r\n            value: 20,\r\n          }, {\r\n            text: `Riptide Slash DMG`,\r\n            formulaText: stats => <span>{data.riptide.slash[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.slash,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: `Duration`,\r\n            value: `30s`,\r\n          }, {\r\n            text: `Preemptive End CD`,\r\n            value: stats => stats.constellation < 1 ? `6-36s` : `6-36s - 20%`,\r\n          }, {\r\n            text: `CD`,\r\n            value: stats => stats.constellation < 1 ? `45s` : `45s - 20%`,\r\n          }],\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Skill DMG: Melee\",\r\n            formulaText: stats => <span>{data.burst.melee[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.melee,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Skill DMG: Ranged\",\r\n            formulaText: stats => <span>{data.burst.ranged[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.ranged,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: `Riptide Blast DMG`,\r\n            formulaText: stats => <span>{data.riptide.blast[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.blast,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"15s\"\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 60,\r\n          }, {\r\n            text: \"Energy Return (Ranged)\",\r\n            value: 20,\r\n          }],\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: {\r\n        name: tr(\"passive3.name\"),\r\n        img: passive3,\r\n        sections: [{\r\n          conditional: {\r\n            key: \"pas\",\r\n            partyBuff: \"partyOnly\",\r\n            maxStack: 0,\r\n            header: conditionalHeader(\"passive3\", tr, passive3),\r\n            description: tr(\"passive3.description\"),\r\n            name: tr(\"passive3.name\"),\r\n            stats: { autoBoost: 1 }\r\n          }\r\n        }],\r\n      },\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Thoma_Card.881aaf51.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.d30a7174.png\";","export default __webpack_public_path__ + \"static/media/IconSide.2ddaa35d.png\";","export default __webpack_public_path__ + \"static/media/Banner.8373a490.png\";","export default __webpack_public_path__ + \"static/media/constellation1.f9919932.png\";","export default __webpack_public_path__ + \"static/media/constellation2.6d21da78.png\";","export default __webpack_public_path__ + \"static/media/constellation3.e8ecf7e1.png\";","export default __webpack_public_path__ + \"static/media/constellation4.4d14558e.png\";","export default __webpack_public_path__ + \"static/media/constellation5.7eca499f.png\";","export default __webpack_public_path__ + \"static/media/constellation6.0ad9db89.png\";","export default __webpack_public_path__ + \"static/media/skill.e8ecf7e1.png\";","export default __webpack_public_path__ + \"static/media/burst.a70be85f.png\";","export default __webpack_public_path__ + \"static/media/passive1.b11b9392.png\";","export default __webpack_public_path__ + \"static/media/passive2.0cf6d878.png\";","export default __webpack_public_path__ + \"static/media/passive3.7aa45d24.png\";","import card from './Character_Thoma_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { conditionalHeader, normalSrc, plungeDocSection, sgt, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport ColorText from '../../../Components/ColoredText'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Thoma_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"pyro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"M\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [{\r\n          text: tr(\"auto.fields.normal\"),\r\n          fields: data.normal.hitArr.map((percentArr, i) =>\r\n          ({\r\n            text: <span>{sgt(`normal.hit${i + 1}`)} {i === 2 ? <span>(<Translate ns=\"sheet\" key18=\"hits\" values={{ count: 2 }} />)</span> : \"\"}</span>,\r\n            formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n            formula: formula.normal[i],\r\n            variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n          }))\r\n        }, {\r\n          text: tr(\"auto.fields.charged\"),\r\n          fields: [{\r\n            text: sgt(\"charged.dmg\"),\r\n            formulaText: stats => <span>{data.charged.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n            formula: formula.charged.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }, {\r\n            text: sgt(\"charged.stamina\"),\r\n            value: data.charged.stam,\r\n          }]\r\n        },\r\n        plungeDocSection(tr, formula, data)],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: tr(\"skill.skillParams.0\"),\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: tr(\"skill.skillParams.1\"),\r\n            formulaText: stats => <span>( {data.skill.shieldHp_[stats.tlvl.skill]}% {Stat.printStat(\"finalHP\", stats)} + {data.skill.shieldHp[stats.tlvl.skill]} ) * (100% + {Stat.printStat(\"shield_\", stats)})</span>,\r\n            formula: formula.skill.shield,\r\n          }, {\r\n            text: <ColorText color=\"pyro\">{tr(\"skill.skillParams.1\")}</ColorText>,\r\n            formulaText: stats => <span>( {data.skill.shieldHp_[stats.tlvl.skill]}% {Stat.printStat(\"finalHP\", stats)} + {data.skill.shieldHp[stats.tlvl.skill]} ) * (100% + {Stat.printStat(\"shield_\", stats)}) * (250% <ColorText color=\"pyro\">Pyro Absorption</ColorText>)</span>,\r\n            formula: formula.skill.shieldPyro,\r\n            variant: \"pyro\"\r\n          }, {\r\n            text: tr(\"skill.skillParams.2\"),\r\n            value: data.skill.duration,\r\n          }, {\r\n            text: tr(\"skill.skillParams.3\"),\r\n            formulaText: stats => <span>( {data.skill.maxShieldHp_[stats.tlvl.skill]}% {Stat.printStat(\"finalHP\", stats)} + {data.skill.maxShieldHp[stats.tlvl.skill]} ) * (100% + {Stat.printStat(\"shield_\", stats)})</span>,\r\n            formula: formula.skill.maxShield,\r\n          }, {\r\n            text: <ColorText color=\"pyro\">{tr(\"skill.skillParams.3\")}</ColorText>,\r\n            formulaText: stats => <span>( {data.skill.maxShieldHp_[stats.tlvl.skill]}% {Stat.printStat(\"finalHP\", stats)} + {data.skill.maxShieldHp[stats.tlvl.skill]} ) * (100% + {Stat.printStat(\"shield_\", stats)}) * (250% <ColorText color=\"pyro\">Pyro Absorption</ColorText>)</span>,\r\n            formula: formula.skill.maxShieldPyro,\r\n            variant: \"pyro\"\r\n          }, {\r\n            text: tr(\"skill.skillParams.4\"),\r\n            value: data.skill.cd,\r\n            unit: \"s\"\r\n          },],\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: tr(\"burst.skillParams.0\"),\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension < 4,\r\n            text: tr(\"burst.skillParams.1\"),\r\n            formulaText: stats => <span>{data.burst.dmgCollapse[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmgCollapse,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: tr(\"burst.skillParams.1\"),\r\n            formulaText: stats => <span>( {data.burst.dmgCollapse[stats.tlvl.burst]}% {Stat.printStat(\"finalATK\", stats)} + {data.passive2.hp_}% {Stat.printStat(\"finalHP\", stats)} ) * {Stat.printStat(getTalentStatKey(\"burst\", stats) + \"_multi\", stats)}</span>,\r\n            formula: formula.burst.dmgCollapseA4,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.2\"),\r\n            formulaText: stats => <span>( {data.burst.shieldHp_[stats.tlvl.burst]}% {Stat.printStat(\"finalHP\", stats)} + {data.burst.shieldHp[stats.tlvl.burst]} ) * (100% + {Stat.printStat(\"shield_\", stats)})</span>,\r\n            formula: formula.burst.shield,\r\n          }, {\r\n            text: <ColorText color=\"pyro\">{tr(\"burst.skillParams.2\")}</ColorText>,\r\n            formulaText: stats => <span>( {data.burst.shieldHp_[stats.tlvl.burst]}% {Stat.printStat(\"finalHP\", stats)} + {data.burst.shieldHp[stats.tlvl.burst]} ) * (100% + {Stat.printStat(\"shield_\", stats)}) * (250% <ColorText color=\"cryo\">Cryo Absorption</ColorText>)</span>,\r\n            formula: formula.burst.shieldPyro,\r\n            variant: \"pyro\"\r\n          }, {\r\n            text: tr(\"burst.skillParams.3\"),\r\n            value: stat => data.burst.shieldDuration + (stat.constellation >= 2 ? data.constellation2.duration : 0),\r\n          }, {\r\n            text: tr(\"burst.skillParams.4\"),\r\n            value: data.burst.duration,\r\n            unit: \"s\"\r\n          }, {\r\n            text: tr(\"burst.skillParams.5\"),\r\n            value: data.burst.cd,\r\n            unit: \"s\"\r\n          }, {\r\n            text: tr(\"burst.skillParams.6\"),\r\n            value: data.burst.cost,\r\n          },],\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          conditional: { // Imbricated Armor\r\n            key: \"a1\",\r\n            canShow: stats => stats.ascension >= 1,\r\n            name: <Translate ns=\"char_Thoma\" key18=\"a1\" />,\r\n            maxStack: data.passive1.maxStack,\r\n            stats: { shield_: data.passive1.shield_ },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: data.passive1.duration\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: tr(\"constellation6.description\"),\r\n          conditional: { // Burning Heart\r\n            key: \"c6\",\r\n            canShow: stats => stats.constellation >= 6,\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"constellation6\", tr, c6),\r\n            description: tr(\"constellation6.description\"),\r\n            name: <span><Translate ns=\"char_Thoma\" key18=\"c6\" /></span>,\r\n            stats: {\r\n              normal_dmg_: data.constellation6.auto_,\r\n              charged_dmg_: data.constellation6.auto_,\r\n              plunging_dmg_: data.constellation6.auto_\r\n            },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: data.constellation6.duration\r\n            }]\r\n          }\r\n        }],\r\n      }\r\n    },\r\n  },\r\n};\r\nexport default char;","export default __webpack_public_path__ + \"static/media/Traveler_Female_Card.6a60cbcc.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.6cb01bca.png\";","export default __webpack_public_path__ + \"static/media/IconSide.b6239e59.png\";","export default __webpack_public_path__ + \"static/media/constellation1.395ca116.png\";","export default __webpack_public_path__ + \"static/media/constellation2.136fecd0.png\";","export default __webpack_public_path__ + \"static/media/constellation3.74ae0a41.png\";","export default __webpack_public_path__ + \"static/media/constellation4.ba92e180.png\";","export default __webpack_public_path__ + \"static/media/constellation5.a05a2344.png\";","export default __webpack_public_path__ + \"static/media/constellation6.51d87317.png\";","export default __webpack_public_path__ + \"static/media/skill.a05a2344.png\";","export default __webpack_public_path__ + \"static/media/burst.18b70039.png\";","export default __webpack_public_path__ + \"static/media/passive1.a94c8dfb.png\";","export default __webpack_public_path__ + \"static/media/passive2.4b695d85.png\";","import c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport Stat from '../../../../Stat'\r\nimport formula, { data } from './data'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from \"../../../../Build/Build\"\r\nimport { TalentSheet } from '../../../../Types/character';\r\nimport { absorbableEle } from '../../dataUtil'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport { normalDocSection, normalSrc, plungeDocSection, sgt, talentTemplate } from '../../SheetUtil'\r\nimport ColorText from '../../../../Components/ColoredText'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Traveler_gen\" key18={`anemo.${strKey}`} />\r\nconst talentSheet: TalentSheet = {\r\n  formula,\r\n  sheets: {\r\n    auto: {\r\n      name: tr(\"auto.name\"),\r\n      img: normalSrc(\"sword\"),\r\n      sections: [\r\n        normalDocSection(tr, formula, data),\r\n        {\r\n          text: tr(`auto.fields.charged`),\r\n          fields: data.charged.hitArr.map((percentArr, i) =>\r\n          ({\r\n            text: i === 1 ? `Male Charged 2-Hit DMG` : (i === 2 ? `Female Charged 2-Hit DMG` : `Charged ${i + 1}-Hit DMG`),\r\n            formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n            formula: formula.charged[i],\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }))\r\n        },\r\n        plungeDocSection(tr, formula, data),\r\n      ]\r\n    },\r\n    skill: {\r\n      name: tr(\"skill.name\"),\r\n      img: skill,\r\n      sections: [{\r\n        text: tr(\"skill.description\"),\r\n        fields: [{\r\n          text: \"Initial Cutting DMG\",\r\n          formulaText: stats => <span>{data.skill.initial_dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n          formula: formula.skill.initial_dmg,\r\n          variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n        }, {\r\n          text: \"Max Cutting DMG\",\r\n          formulaText: stats => <span>{data.skill.initial_max[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n          formula: formula.skill.initial_max,\r\n          variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n        }, {\r\n          text: \"Initial Storm DMG\",\r\n          formulaText: stats => <span>{data.skill.storm_dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n          formula: formula.skill.storm_dmg,\r\n          variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n        }, {\r\n          text: \"Max Storm DMG\",\r\n          formulaText: stats => <span>{data.skill.storm_max[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n          formula: formula.skill.storm_max,\r\n          variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n        }, {\r\n          text: \"Base CD\",\r\n          value: \"5s\",\r\n        }, {\r\n          text: \"Max Charging CD\",\r\n          value: \"8s\",\r\n        }, {\r\n          canShow: stats => stats.constellation >= 4,\r\n          text: \"Reduce DMG taken while casting\",\r\n          value: \"10%\",\r\n        }],\r\n      }],\r\n    },\r\n    burst: {\r\n      name: tr(\"burst.name\"),\r\n      img: burst,\r\n      sections: [{\r\n        text: tr(\"burst.description\"),\r\n        fields: [{\r\n          text: \"Tornado DMG\",\r\n          formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n          formula: formula.burst.dmg,\r\n          variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n        }, {\r\n          text: \"Duration\",\r\n          value: \"6s\",\r\n        }, {\r\n          text: \"CD\",\r\n          value: \"15s\",\r\n        }, {\r\n          text: \"Energy Cost\",\r\n          value: 60,\r\n        }],\r\n        conditional: { // Absorption\r\n          key: \"q\",\r\n          name: \"Elemental Absorption\",\r\n          states: {\r\n            ...Object.fromEntries(absorbableEle.map(eleKey => [eleKey, {\r\n              name: <ColorText color={eleKey}>{sgt(`element.${eleKey}`)}</ColorText>,\r\n              fields: [{\r\n                canShow: stats => {\r\n                  const [num, condEleKey] = stats.conditionalValues?.character?.Traveler_anemo?.q ?? []\r\n                  return !!num && condEleKey === eleKey\r\n                },\r\n                text: \"Absorption DoT\",\r\n                formulaText: stats => <span>{data.burst.dmg_[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats, eleKey), stats)}</span>,\r\n                formula: formula.burst[eleKey],\r\n                variant: eleKey\r\n              },],\r\n              stats: stats => ({\r\n                ...stats.constellation >= 6 && { anemo_enemyRes_: - 20 },\r\n                ...stats.constellation >= 6 && { [`${eleKey}_enemyRes_`]: -20 }\r\n              })\r\n            }]))\r\n          }\r\n        },\r\n      }],\r\n    },\r\n    passive1: {\r\n      name: tr(\"passive1.name\"),\r\n      img: passive1,\r\n      sections: [{\r\n        text: tr(\"passive1.description\"),\r\n        fields: [{\r\n          text: \"Anemo Auto\",\r\n          formulaText: stats => <span>60% * {Stat.printStat(\"finalATK\", stats)}</span>,\r\n          formula: formula.passive1.windAuto,\r\n          variant: stats => getTalentStatKeyVariant(\"normal\", stats, \"anemo\"),\r\n        }]\r\n      }]\r\n    },\r\n    passive2: {\r\n      name: tr(\"passive2.name\"),\r\n      img: passive2,\r\n      sections: [{\r\n        text: tr(\"passive2.description\"),\r\n        fields: [{\r\n          text: \"Heal\",\r\n          formulaText: stats => <span>2% * {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n          formula: formula.passive2.heal,\r\n          variant: \"success\",\r\n        }]\r\n      }]\r\n    },\r\n    constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n    constellation2: {\r\n      name: tr(\"constellation2.name\"),\r\n      img: c2,\r\n      sections: [{\r\n        text: tr(\"constellation2.description\"),\r\n        conditional: {\r\n          key: \"c2\",\r\n          canShow: stats => stats.constellation >= 2,\r\n          maxStack: 0,\r\n          name: \"Uprising Whirlwind\",\r\n          stats: { enerRech_: 16 }\r\n        }\r\n      }]\r\n    },\r\n    constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n    constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n    constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n    constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n  },\r\n}\r\nexport default talentSheet","export default __webpack_public_path__ + \"static/media/constellation1.3444f2d3.png\";","export default __webpack_public_path__ + \"static/media/constellation2.a1484195.png\";","export default __webpack_public_path__ + \"static/media/constellation3.97526af2.png\";","export default __webpack_public_path__ + \"static/media/constellation4.536a04e3.png\";","export default __webpack_public_path__ + \"static/media/constellation5.375505ed.png\";","export default __webpack_public_path__ + \"static/media/constellation6.673af30b.png\";","export default __webpack_public_path__ + \"static/media/skill.375505ed.png\";","export default __webpack_public_path__ + \"static/media/burst.5dc8e099.png\";","export default __webpack_public_path__ + \"static/media/passive1.eba05def.png\";","export default __webpack_public_path__ + \"static/media/passive2.aaa8daeb.png\";","import c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport Stat from '../../../../Stat'\r\nimport formula, { data } from './data'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from \"../../../../Build/Build\"\r\nimport { TalentSheet } from '../../../../Types/character';\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport { conditionalHeader, normalDocSection, normalSrc, plungeDocSection, talentTemplate } from '../../SheetUtil'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Traveler_gen\" key18={`geo.${strKey}`} />\r\nconst talentSheet: TalentSheet = {\r\n  formula,\r\n  sheets: {\r\n    auto: {\r\n      name: tr(\"auto.name\"),\r\n      img: normalSrc(\"sword\"),\r\n      sections: [\r\n        normalDocSection(tr, formula, data),\r\n        {\r\n          text: tr(`auto.fields.charged`),\r\n          fields: data.charged.hitArr.map((percentArr, i) =>\r\n          ({\r\n            text: i === 1 ? `Male Charged 2-Hit DMG` : (i === 2 ? `Female Charged 2-Hit DMG` : `Charged ${i + 1}-Hit DMG`),\r\n            formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n            formula: formula.charged[i],\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }))\r\n        },\r\n        plungeDocSection(tr, formula, data),\r\n      ]\r\n    },\r\n    skill: {\r\n      name: tr(\"skill.name\"),\r\n      img: skill,\r\n      sections: [{\r\n        text: tr(\"skill.description\"),\r\n        fields: [{\r\n          text: \"Skill DMG\",\r\n          formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n          formula: formula.skill.dmg,\r\n          variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n        }, {\r\n          canShow: stats => stats.constellation >= 2,\r\n          text: \"Meteorite Explosion DMG\",\r\n          formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n          formula: formula.skill.exp,\r\n          variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n        }, {\r\n          text: \"Base CD\",\r\n          value: stats => stats.ascension >= 1 ? \"6s\" : \"8s\",\r\n        }, {\r\n          text: \"Meteorite Duration\",\r\n          value: stats => stats.ascension >= 6 ? \"40s\" : \"30s\",\r\n        }],\r\n      }],\r\n    },\r\n    burst: {\r\n      name: tr(\"burst.name\"),\r\n      img: burst,\r\n      sections: [{\r\n        text: tr(\"burst.description\"),\r\n        fields: [{\r\n          text: \"DMG Per Shockwave\",\r\n          formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n          formula: formula.burst.dmg,\r\n          variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n        }, {\r\n          text: \"Stonewall Duration\",\r\n          value: stats => stats.constellation >= 6 ? \"20s\" : \"15s\",\r\n        }, {\r\n          text: \"CD\",\r\n          value: \"15s\",\r\n        }, {\r\n          text: \"Energy Cost\",\r\n          value: 60,\r\n        }],\r\n      }],\r\n    },\r\n    passive1: talentTemplate(\"passive1\", tr, passive1),\r\n    passive2: {\r\n      name: tr(\"passive2.name\"),\r\n      img: passive2,\r\n      sections: [{\r\n        text: tr(\"passive2.description\"),\r\n        fields: [{\r\n          text: \"Geo Auto\",\r\n          formulaText: stats => <span>60% * {Stat.printStat(\"finalATK\", stats)}</span>,\r\n          formula: formula.passive2.geoAuto,\r\n          variant: stats => getTalentStatKeyVariant(\"normal\", stats, \"geo\"),\r\n        }]\r\n      }]\r\n    },\r\n    constellation1: {\r\n      name: tr(\"constellation1.name\"),\r\n      img: c1,\r\n      sections: [{\r\n        text: tr(\"constellation1.description\"),\r\n        conditional: { // InvincibleStonewall\r\n          key: \"c1\",\r\n          canShow: stats => stats.constellation >= 1,\r\n          partyBuff: \"partyActive\",\r\n          header: conditionalHeader(\"constellation1\", tr, c1),\r\n          description: tr(\"constellation1.description\"),\r\n          name: <span>Party members within the radius of <b>Wake of Earth</b>.</span>,\r\n          stats: { critRate_: 10 },\r\n          fields: [{\r\n            text: \"Increased resistance against interruption\"\r\n          }]\r\n        }\r\n      }]\r\n    },\r\n    constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n    constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n    constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n    constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n    constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n  },\r\n}\r\n\r\nexport default talentSheet;","export default __webpack_public_path__ + \"static/media/constellation1.47287142.png\";","export default __webpack_public_path__ + \"static/media/constellation2.f7e18ae8.png\";","export default __webpack_public_path__ + \"static/media/constellation3.e3779add.png\";","export default __webpack_public_path__ + \"static/media/constellation4.f705450c.png\";","export default __webpack_public_path__ + \"static/media/constellation5.fb07262f.png\";","export default __webpack_public_path__ + \"static/media/constellation6.80ad074d.png\";","export default __webpack_public_path__ + \"static/media/skill.fb07262f.png\";","export default __webpack_public_path__ + \"static/media/burst.d06bfa58.png\";","export default __webpack_public_path__ + \"static/media/passive1.56a78ba9.png\";","export default __webpack_public_path__ + \"static/media/passive2.087e04b5.png\";","import c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport Stat from '../../../../Stat'\r\nimport formula, { data } from './data'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from \"../../../../Build/Build\"\r\nimport { TalentSheet } from '../../../../Types/character';\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport { conditionalHeader, normalDocSection, normalSrc, plungeDocSection, sgt, talentTemplate } from '../../SheetUtil'\r\nimport { KeyPath } from '../../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../../formula'\r\nconst path = KeyPath<FormulaPathBase, any>().character.Traveler.electro\r\nconst tr = (strKey: string) => <Translate ns=\"char_Traveler_gen\" key18={`electro.${strKey}`} />\r\nconst charTr = (strKey: string) => <Translate ns=\"char_Traveler\" key18={`electro.${strKey}`} />\r\nconst talentSheet: TalentSheet = {\r\n  formula,\r\n  sheets: {\r\n    auto: {\r\n      name: tr(\"auto.name\"),\r\n      img: normalSrc(\"sword\"),\r\n      sections: [\r\n        normalDocSection(tr, formula, data),\r\n        {\r\n          text: tr(`auto.fields.charged`),\r\n          fields: data.charged.hitArr.map((percentArr, i) =>\r\n          ({\r\n            text: i === 1 ? `Male Charged 2-Hit DMG` : (i === 2 ? `Female Charged 2-Hit DMG` : `Charged ${i + 1}-Hit DMG`),\r\n            formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n            formula: formula.charged[i],\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }))\r\n        },\r\n        plungeDocSection(tr, formula, data),\r\n      ]\r\n    },\r\n    skill: {\r\n      name: tr(\"skill.name\"),\r\n      img: skill,\r\n      sections: [{\r\n        text: tr(\"skill.description\"),\r\n        fields: [{\r\n          text: \"Skill DMG\",\r\n          formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n          formula: formula.skill.dmg,\r\n          variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n        }, {\r\n          text: \"Number of Abundance Amulets\",\r\n          value: stats => stats.constellation < 1 ? 2 : 3\r\n        }, {\r\n          text: \"CD\",\r\n          value: \"13.5s\",\r\n        }],\r\n        conditional: {\r\n          key: \"e\",\r\n          name: charTr(\"skill.absorb\"),\r\n          partyBuff: \"partyAll\",\r\n          header: conditionalHeader(\"skill\", tr, skill),\r\n          description: tr(\"skill.description\"),\r\n          stats: {\r\n            modifiers: { enerRech_: [path.skill.enerRechInc()] },\r\n          },\r\n          fields: [{\r\n            text: tr(\"skill.enerRegen\"),\r\n            value: stats => {\r\n              if (stats.constellation < 4) return data.skill.enerRegen[stats.tlvl.skill]\r\n              return <span>{data.skill.enerRegen[stats.tlvl.skill]} / {data.skill.enerRegen[stats.tlvl.skill] * 2}</span>\r\n            }\r\n          }, {\r\n            text: tr(\"skill.enerRechInc\"),\r\n            formulaText: stats => {\r\n              if (stats.ascension < 4) return <span>20%</span>;\r\n              return <span>20% + ( 10% * {Stat.printStat(\"enerRech_\", stats, true)} )</span>\r\n            },\r\n            formula: formula.skill.enerRechInc,\r\n            unit: \"%\",\r\n            fixed: 1\r\n          }, {\r\n            text: sgt(\"duration\"),\r\n            value: \"6s\"\r\n          }]\r\n        },\r\n      }],\r\n    },\r\n    burst: {\r\n      name: tr(\"burst.name\"),\r\n      img: burst,\r\n      sections: [{\r\n        text: tr(\"burst.description\"),\r\n        fields: [{\r\n          text: sgt(\"burstDMG\"),\r\n          formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n          formula: formula.burst.dmg,\r\n          variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n        }, {\r\n          text: tr(\"burst.thunderDMG\"),\r\n          formulaText: stats => <span>{data.burst.thunder[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n          formula: formula.burst.thunder,\r\n          variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n        }, {\r\n          canShow: stats => stats.constellation >= 6,\r\n          text: charTr(\"burst.3rd\"),\r\n          formulaText: stats => <span>( {data.burst.thunder[stats.tlvl.burst]}% + 100% ) {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n          formula: formula.burst.thunder3,\r\n          variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n        }, {\r\n          text: tr(\"skill.enerRegen\"),\r\n          value: stats => {\r\n            if (stats.constellation < 6) return data.burst.enerRegen[stats.tlvl.burst]\r\n            return <span>{data.burst.enerRegen[stats.tlvl.burst]} (+1)</span>\r\n          }\r\n        }, {\r\n          text: sgt(\"duration\"),\r\n          value: \"12s\",\r\n        }, {\r\n          text: sgt(\"cd\"),\r\n          value: \"20s\",\r\n        }, {\r\n          text: sgt(\"energyCost\"),\r\n          value: 80,\r\n        }],\r\n        conditional: {\r\n          key: \"c2\",\r\n          canShow: stats => stats.constellation >= 2,\r\n          name: charTr(\"c2.thunderHit\"),\r\n          stats: {\r\n            electro_enemyRes_: -15\r\n          }\r\n        }\r\n      }],\r\n    },\r\n    passive1: talentTemplate(\"passive1\", tr, passive1),\r\n    passive2: talentTemplate(\"passive2\", tr, passive2),\r\n    constellation1: {\r\n      name: tr(\"constellation1.name\"),\r\n      img: c1,\r\n      sections: [{\r\n        text: tr(\"constellation1.description\"),\r\n      }]\r\n    },\r\n    constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n    constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n    constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n    constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n    constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n  },\r\n}\r\n\r\nexport default talentSheet;","import card from './Traveler_Female_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport data_gen from './data_gen.json'\r\nimport { ICharacterSheet } from '../../../Types/character';\r\nimport anemo from './anemo'\r\nimport geo from './geo'\r\nimport electro from './electro'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { WeaponTypeKey } from '../../../Types/consts';\r\nconst tr = (strKey: string) => <Translate ns=\"char_Traveler_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  rarity: data_gen.star,\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F/M\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talents: { anemo, geo, electro }\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Venti_Card.3ce9339f.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.d1730ff6.png\";","export default __webpack_public_path__ + \"static/media/IconSide.e7d8bf34.png\";","export default __webpack_public_path__ + \"static/media/Banner.c124ccaf.png\";","export default __webpack_public_path__ + \"static/media/constellation1.22a8d533.png\";","export default __webpack_public_path__ + \"static/media/constellation2.d904bc61.png\";","export default __webpack_public_path__ + \"static/media/constellation3.fb06e4f0.png\";","export default __webpack_public_path__ + \"static/media/constellation4.f5606c60.png\";","export default __webpack_public_path__ + \"static/media/constellation5.c3778402.png\";","export default __webpack_public_path__ + \"static/media/constellation6.20f53a08.png\";","export default __webpack_public_path__ + \"static/media/skill.c3778402.png\";","export default __webpack_public_path__ + \"static/media/burst.9fe7351f.png\";","export default __webpack_public_path__ + \"static/media/passive1.f6c523ed.png\";","export default __webpack_public_path__ + \"static/media/passive2.00f60909.png\";","export default __webpack_public_path__ + \"static/media/passive3.8c7dabc4.png\";","import card from './Character_Venti_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from \"../../../Build/Build\"\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { bowChargedDocSection, conditionalHeader, normalSrc, plungeDocSection, sgt, st, talentTemplate } from '../SheetUtil'\r\nimport { Translate, TransWrapper } from '../../../Components/Translate'\r\nimport { absorbableEle } from '../dataUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport ColorText from '../../../Components/ColoredText'\r\nimport { Typography } from '@mui/material'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Venti_gen\" key18={strKey} />\r\n\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"anemo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"M\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [{\r\n          text: tr(`auto.fields.normal`),\r\n          fields: data.normal.hitArr.map((percentArr, i) =>\r\n          ({\r\n            text: <span>{sgt(`normal.hit${i + 1}`)} {i === 0 || i === 3 ? <span>(<Translate ns=\"sheet\" key18=\"hits\" values={{ count: 2 }} />)</span> : null}</span>,\r\n            formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n            formula: formula.normal[i],\r\n            variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n          }))\r\n        }, bowChargedDocSection(tr, formula, data, \"anemo\"), {\r\n          canShow: stats => stats.constellation >= 1,\r\n          text: <strong>{tr(\"constellation1.name\")}</strong>,\r\n          fields: [{\r\n            text: <Translate ns=\"char_Venti\" key18=\"addAimed\" />,\r\n            formulaText: stats => <span>{(data.charged.hit[stats.tlvl.auto] * 0.33)?.toFixed(2)}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n            formula: formula.charged.hit_bonus,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }, {\r\n            text: <Translate ns=\"char_Venti\" key18=\"addFullAimed\" />,\r\n            formulaText: stats => <span>{(data.charged.full[stats.tlvl.auto] * 0.33)?.toFixed(2)}% {Stat.printStat(getTalentStatKey(\"charged\", stats, \"anemo\"), stats)}</span>,\r\n            formula: formula.charged.full_bonus,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats, \"anemo\"),\r\n          }]\r\n        }, plungeDocSection(tr, formula, data)],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: sgt(\"press.dmg\"),\r\n            formulaText: stats => <span>{data.skill.press[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.press,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: sgt(\"press.cd\"),\r\n            value: \"6s\",\r\n          }, {\r\n            text: sgt(\"hold.dmg\"),\r\n            formulaText: stats => <span>{data.skill.hold[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.hold,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: sgt(\"hold.cd\"),\r\n            value: \"15s\",\r\n          }, {\r\n            canShow: stats => stats.ascension >= 1,\r\n            text: <Translate ns=\"char_Venti\" key18=\"upcurrentDuration\" />,\r\n            value: \"20s\",\r\n          }],\r\n          conditional: { // BreezeOfReminiscence\r\n            key: \"c2\",\r\n            header: conditionalHeader(\"constellation2\", tr, c2),\r\n            description: tr(\"constellation2.description\"),\r\n            name: tr(\"skill.name\"),\r\n            canShow: stats => stats.constellation >= 2,\r\n            states: {\r\n              hit: {\r\n                name: <Translate ns=\"char_Venti\" key18=\"c2.hit\" />,\r\n                stats: {\r\n                  anemo_enemyRes_: -12,\r\n                  physical_enemyRes_: -12\r\n                },\r\n              },\r\n              launch: {\r\n                name: <Translate ns=\"char_Venti\" key18=\"c2.launched\" />,\r\n                stats: {\r\n                  anemo_enemyRes_: -24,\r\n                  physical_enemyRes_: -24\r\n                },\r\n              }\r\n            }\r\n          },\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: sgt(\"dot\"),\r\n            formulaText: stats => <span>{data.burst.hit[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.hit,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: sgt(\"duration\"),\r\n            value: \"8s\",\r\n          }, {\r\n            text: sgt(\"cd\"),\r\n            value: \"15s\",\r\n          }, {\r\n            text: sgt(\"energyCost\"),\r\n            value: 60,\r\n          }, {\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: <Translate ns=\"char_Venti\" key18=\"regenEner\" />,\r\n          }],\r\n          conditional: {// Storm of defiance\r\n            key: \"c6\",\r\n            canShow: stats => stats.constellation >= 6,\r\n            name: <Translate ns=\"char_Venti\" key18=\"c6\" />,\r\n            stats: { anemo_enemyRes_: -20 }\r\n          }\r\n        }, {\r\n          conditional: { // Absorption\r\n            key: \"q\",\r\n            name: st(\"eleAbsor\"),\r\n            states: Object.fromEntries(absorbableEle.map(eleKey => [eleKey, {\r\n              name: <ColorText color={eleKey}>{sgt(`element.${eleKey}`)}</ColorText>,\r\n              fields: [{\r\n                canShow: stats => {\r\n                  const [num, condEleKey] = stats.conditionalValues?.character?.Venti?.q ?? []\r\n                  return !!num && condEleKey === eleKey\r\n                },\r\n                text: st(\"absorDot\"),\r\n                formulaText: stats => <span>{(data.burst.hit[stats.tlvl.burst] / 2)?.toFixed(2)}% {Stat.printStat(getTalentStatKey(\"burst\", stats, eleKey), stats)}</span>,\r\n                formula: formula.burst[eleKey],\r\n                variant: eleKey\r\n              }, {\r\n                canShow: stats => stats.ascension >= 4,\r\n                text: <Translate ns=\"char_Venti\" key18=\"q\" />,\r\n              }],\r\n              stats: stats => ({\r\n                ...stats.constellation >= 6 && { [`${eleKey}_enemyRes_`]: -20 }\r\n              })\r\n            }]))\r\n          },\r\n        }, {\r\n          canShow: stats => Boolean(stats.conditionalValues?.character?.Venti?.q),\r\n          text: stats => {\r\n            const [num, eleKey] = stats.conditionalValues?.character?.Venti?.q ?? []\r\n            if (!num) return \"\"\r\n            return <TransWrapper ns=\"char_Venti\" key18=\"fullBurstDMG.text\"><span>\r\n              <Typography variant=\"h6\">Full Elemental Burst DMG</Typography>\r\n              <Typography gutterBottom>This calculates the total Elemental Burst DMG, including swirl. This calculation assumes:</Typography>\r\n              <Typography component=\"div\">\r\n                <ul>\r\n                  <li>20 ticks of <ColorText color=\"anemo\">Burst DMG</ColorText></li>\r\n                  <li>15 ticks of <ColorText color={eleKey}>absorption DMG</ColorText></li>\r\n                  <li>7 ticks of <ColorText color={eleKey}>Swirl</ColorText>, for one enemy, OR,</li>\r\n                  <li>14 ticks of <ColorText color={eleKey}>Swirl</ColorText>, for multiple enemy, that Swirls eachother.</li>\r\n                </ul>\r\n              </Typography>\r\n            </span></TransWrapper>\r\n          },\r\n          fields: absorbableEle.flatMap(eleKey => ([7, 14].map(swirlTicks => ({\r\n            canShow: stats => {\r\n              const [num, condEleKey] = stats.conditionalValues?.character?.Venti?.q ?? []\r\n              return !!num && condEleKey === eleKey\r\n            },\r\n            text: <TransWrapper ns=\"char_Venti\" key18=\"fullBurstDMG.dmg\" values={{ swirlTicks }}><span>Total DMG (<span className={`text-${eleKey}`}>{{ swirlTicks }} Swirl ticks</span>)</span></TransWrapper>,\r\n            formula: formula.burst[`${eleKey}_tot_${swirlTicks}`],\r\n            formulaText: stats => <span>20 * {data.burst.hit[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)} + 15 * {(data.burst.hit[stats.tlvl.burst] / 2)?.toFixed(2)}% {Stat.printStat(`${eleKey}_burst_${stats.hitMode}`, stats)} + {swirlTicks} * {Stat.printStat(`${eleKey}_swirl_hit`, stats)}</span>\r\n          }))))\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: {\r\n        name: tr(\"passive3.name\"),\r\n        img: passive3,\r\n        sections: [{\r\n          text: tr(\"passive3.description\"),\r\n          conditional: {\r\n            key: \"pas\",\r\n            maxStack: 0,\r\n            stats: { staminaGlidingDec_: 20 }\r\n          }\r\n        }],\r\n      },\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          conditional: { // HurricaneOfFreedom\r\n            key: \"c4\",\r\n            canShow: stats => stats.constellation >= 4,\r\n            name: <Translate ns=\"char_Venti\" key18=\"c4\" />,\r\n            stats: { anemo_dmg_: 25 },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: \"10s\",\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Xiao_Card.7a805066.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.8d6c6e99.png\";","export default __webpack_public_path__ + \"static/media/IconSide.0ce5aa12.png\";","export default __webpack_public_path__ + \"static/media/Banner.c0635620.png\";","export default __webpack_public_path__ + \"static/media/constellation1.2d08cfd1.png\";","export default __webpack_public_path__ + \"static/media/constellation2.58db8e79.png\";","export default __webpack_public_path__ + \"static/media/constellation3.315199f9.png\";","export default __webpack_public_path__ + \"static/media/constellation4.cfbf9b19.png\";","export default __webpack_public_path__ + \"static/media/constellation5.2fffbe45.png\";","export default __webpack_public_path__ + \"static/media/constellation6.bc86f592.png\";","export default __webpack_public_path__ + \"static/media/skill.344a7e8e.png\";","export default __webpack_public_path__ + \"static/media/burst.a1bff3c3.png\";","export default __webpack_public_path__ + \"static/media/passive1.90e2d20d.png\";","export default __webpack_public_path__ + \"static/media/passive2.4f526878.png\";","export default __webpack_public_path__ + \"static/media/passive3.75383395.png\";","import card from './Character_Xiao_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from \"../../../Build/Build\"\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { chargedDocSection, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Xiao_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"anemo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"M\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          {\r\n            text: tr(\"auto.fields.normal\"),\r\n            fields: data.normal.hitArr.map((percentArr, i) =>\r\n            ({\r\n              text: `${i + 1}-Hit DMG`,\r\n              formulaText: stats => <span>{percentArr[stats.tlvl.auto]}%{(i === 0 || i === 3) ? \" × 2\" : \"\"} {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n              formula: formula.normal[i],\r\n              variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n            }))\r\n          },\r\n          chargedDocSection(tr, formula, data, 25),\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>{data.skill.hit[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.hit,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"10s\",\r\n          }, {\r\n            text: \"Charges\",\r\n            value: stats => stats.constellation >= 1 ? \"2 + 1\" : `2`,\r\n          }]\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Normal/Charged/Plunging Attack DMG Bonus\",\r\n            value: stats => <span>{data.burst.atk_bonus[stats.tlvl.burst]}%</span>,\r\n          }, {\r\n            text: \"Duration\",\r\n            value: \"15s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"18s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 70,\r\n          }],\r\n          conditional: { // BaneOfAllEvil\r\n            key: \"q\",\r\n            name: \"Bane of All Evil\",\r\n            stats: stats => ({\r\n              infusionSelf: \"anemo\",\r\n              normal_dmg_: data.burst.atk_bonus[stats.tlvl.burst],\r\n              charged_dmg_: data.burst.atk_bonus[stats.tlvl.burst],\r\n              plunging_dmg_: data.burst.atk_bonus[stats.tlvl.burst],\r\n            })\r\n          },\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          conditional: { // TamerofDemons\r\n            key: \"a1q\",\r\n            canShow: stats => stats.ascension >= 1,\r\n            name: <span>While under the effects of <b>Bane of All Evil</b></span>,\r\n            maxStack: 5,\r\n            stats: { dmg_: 5 }\r\n          },\r\n        }],\r\n      },\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          conditional: { // HeavenFall\r\n            key: \"a4\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            name: <span>Using <b>Lemniscatic Wind Cycling</b></span>,\r\n            maxStack: 3,\r\n            stats: { skill_dmg_: 15 }\r\n          },\r\n        }],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: {\r\n        name: tr(\"constellation2.name\"),\r\n        img: c2,\r\n        sections: [{\r\n          text: tr(\"constellation2.description\"),\r\n          conditional: { // BlossomofKaleidos\r\n            key: \"c2\",\r\n            canShow: stats => stats.constellation >= 2,\r\n            name: \"When in party but not on the field\",\r\n            stats: { enerRech_: 25 }\r\n          },\r\n        }],\r\n      },\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          conditional: { // ExtinctionofSuffering\r\n            key: \"c4\",\r\n            canShow: stats => stats.constellation >= 4,\r\n            name: \"HP falls below 50%\",\r\n            stats: { def_: 100 }\r\n          }\r\n        }],\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Xiangling_Card.a45a73ba.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.0cbbc734.png\";","export default __webpack_public_path__ + \"static/media/IconSide.a8af770d.png\";","export default __webpack_public_path__ + \"static/media/Banner.02accd6c.png\";","export default __webpack_public_path__ + \"static/media/constellation1.d408d32a.png\";","export default __webpack_public_path__ + \"static/media/constellation2.ea09e8e8.png\";","export default __webpack_public_path__ + \"static/media/constellation3.4428802e.png\";","export default __webpack_public_path__ + \"static/media/constellation4.d021d5b6.png\";","export default __webpack_public_path__ + \"static/media/constellation5.ef274f27.png\";","export default __webpack_public_path__ + \"static/media/constellation6.ec9687e1.png\";","export default __webpack_public_path__ + \"static/media/skill.8689265e.png\";","export default __webpack_public_path__ + \"static/media/burst.070d3afe.png\";","export default __webpack_public_path__ + \"static/media/passive1.4e23364d.png\";","export default __webpack_public_path__ + \"static/media/passive2.552a524d.png\";","export default __webpack_public_path__ + \"static/media/passive3.f27aa5ed.png\";","import card from './Character_Xiangling_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { chargedDocSection, conditionalHeader, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Xiangling_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"pyro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          {\r\n            text: <span>{tr(`auto.fields.normal`)} <small><i>Note: the 3th attack hits twice, the 4th hits four times.</i></small></span>,\r\n            fields: data.normal.hitArr.map((percentArr, i) =>\r\n            ({\r\n              text: `${i + 1}-Hit DMG ${i === 2 ? \" (2 Hits)\" : i === 3 ? \" (4 Hits)\" : \"\"}`,\r\n              formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n              formula: formula.normal[i],\r\n              variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n            }))\r\n          },\r\n          chargedDocSection(tr, formula, data, 25),\r\n          plungeDocSection(tr, formula, data),\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Flame DMG\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"12s\",\r\n          }],\r\n          conditional: { // CrispyOutsideTenderInside\r\n            key: \"c1\",\r\n            canShow: stats => stats.constellation >= 1,\r\n            name: \"Opponents hit by Gouba\",\r\n            stats: { pyro_enemyRes_: -15 },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"6s\",\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"1-Hit Swing DMG\",\r\n            formulaText: stats => <span>{data.burst.hit1[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.hit1,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"2-Hit Swing DMG\",\r\n            formulaText: stats => <span>{data.burst.hit2[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.hit2,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"3-Hit Swing DMG\",\r\n            formulaText: stats => <span>{data.burst.hit3[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.hit3,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Pyronado DMG\",\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Duration\",\r\n            value: stats => stats.constellation >= 4 ? \"14s\" : \"10s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"20s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 80,\r\n          }],\r\n          conditional: { // CondensedPyronado\r\n            key: \"c6\",\r\n            // TODO: disabled for XL because it only snapshots to the 3rd hit dmg, and not 1-2 or pyronado\r\n            partyBuff: \"partyOnly\",\r\n            header: conditionalHeader(\"constellation6\", tr, c6),\r\n            description: tr(\"constellation6.description\"),\r\n            canShow: stats => stats.constellation >= 6,\r\n            name: <span>During <b>Pyronado</b></span>,\r\n            stats: { pyro_dmg_: 15 },\r\n          },\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          conditional: { // BewareItsSuperHot\r\n            key: \"a4\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"passive2\", tr, passive2),\r\n            description: tr(\"passive2.description\"),\r\n            name: \"Pick up chili pepper\",\r\n            stats: { atk_: 10 },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"10s\",\r\n            }]\r\n          }\r\n        }],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: {\r\n        name: tr(\"constellation2.name\"),\r\n        img: c2,\r\n        sections: [{\r\n          text: tr(\"constellation2.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.constellation >= 2,\r\n            text: \"Explosion DMG\",\r\n            formulaText: stats => <span>75% {Stat.printStat(getTalentStatKey(\"elemental\", stats), stats)}</span>,\r\n            formula: formula.constellation2.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"elemental\", stats),\r\n          }]\r\n        }],\r\n      },\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;","export default __webpack_public_path__ + \"static/media/Character_Xingqiu_Card.7ee8f08d.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.bc10a46d.png\";","export default __webpack_public_path__ + \"static/media/IconSide.ad080791.png\";","export default __webpack_public_path__ + \"static/media/Banner.148d125d.png\";","export default __webpack_public_path__ + \"static/media/constellation1.886f194d.png\";","export default __webpack_public_path__ + \"static/media/constellation2.182e36e1.png\";","export default __webpack_public_path__ + \"static/media/constellation3.3a702f05.png\";","export default __webpack_public_path__ + \"static/media/constellation4.39c1327f.png\";","export default __webpack_public_path__ + \"static/media/constellation5.2de3451f.png\";","export default __webpack_public_path__ + \"static/media/constellation6.05fb799b.png\";","export default __webpack_public_path__ + \"static/media/skill.ee8c2cac.png\";","export default __webpack_public_path__ + \"static/media/burst.74d3f744.png\";","export default __webpack_public_path__ + \"static/media/passive1.921ddc13.png\";","export default __webpack_public_path__ + \"static/media/passive2.a065e9fe.png\";","export default __webpack_public_path__ + \"static/media/passive3.9e9525db.png\";","import card from './Character_Xingqiu_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from \"../../../Build/Build\"\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { conditionalHeader, normalSrc, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Xingqiu_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"hydro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"M\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [{\r\n          text: <span><strong>Normal Attack</strong> Perform up to 5 rapid strikes. <small><i>Note: the 3rd attack hits twice.</i></small></span>,\r\n          fields: data.normal.hitArr.map((percentArr, i) =>\r\n          ({\r\n            text: `${i + 1}-Hit DMG ${i === 2 || i === 4 ? \" (2 Hits)\" : \"\"}`,\r\n            formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n            formula: formula.normal[i],\r\n            variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n          }))\r\n        }, {\r\n          text: <span><strong>Charged Attack</strong> Consumes a certain amount of Stamina to unleash 2 rapid sword strikes.</span>,\r\n          fields: [{\r\n            text: `Charged 1-Hit DMG`,\r\n            formulaText: stats => <span>{data.charged.hit1[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n            formula: formula.charged.hit1,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }, {\r\n            text: `Charged 2-Hit DMG`,\r\n            formulaText: stats => <span>{data.charged.hit2[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n            formula: formula.charged.hit2,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }, {\r\n            text: `Stamina Cost`,\r\n            value: data.charged.stam,\r\n          }]\r\n        }, {\r\n          text: <span><strong>Plunging Attack</strong> Plunges from mid-air to strike the ground below, damaging opponents along the path and dealing AoE DMG upon impact.</span>,\r\n          fields: [{\r\n            text: `Plunge DMG`,\r\n            formulaText: stats => <span>{data.plunging.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n            formula: formula.plunging.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"plunge\", stats),\r\n          }, {\r\n            text: `Low Plunge DMG`,\r\n            formulaText: stats => <span>{data.plunging.low[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n            formula: formula.plunging.low,\r\n            variant: stats => getTalentStatKeyVariant(\"plunge\", stats),\r\n          }, {\r\n            text: `High Plunge DMG`,\r\n            formulaText: stats => <span>{data.plunging.high[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n            formula: formula.plunging.high,\r\n            variant: stats => getTalentStatKeyVariant(\"plunge\", stats),\r\n          }]\r\n        }],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Skill 1-Hit DMG\",\r\n            formulaText: stats => <span>{data.skill.hit1[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.hit1,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Skill 2-Hit DMG\",\r\n            formulaText: stats => <span>{data.skill.hit2[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.hit2,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.constellation >= 4,\r\n            text: \"Skill 1-Hit DMG during RainCutter\",\r\n            formulaText: stats => <span> ( {data.skill.hit1[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)} ) * 150%</span>,\r\n            formula: formula.skill.hit1RainCutter,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.constellation >= 4,\r\n            text: \"Skill 2-Hit DMG during RainCutter\",\r\n            formulaText: stats => <span> ( {data.skill.hit2[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)} ) * 150%</span>,\r\n            formula: formula.skill.hit2RainCutter,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Damage Reduction Ratio\",\r\n            formulaText: stats => <span>{data.skill.dmgRed[stats.tlvl.skill]}%  + min(24%, 20% * {Stat.printStat(\"hydro_dmg_\", stats)} )</span>,\r\n            formula: formula.skill.dmgRed,\r\n            fixed: 2,\r\n            unit: \"%\"\r\n          }, {\r\n            text: \"Sword Number\",\r\n            value: stats => stats.constellation >= 1 ? 4 : 3,\r\n          }, {\r\n            text: \"Duration\",\r\n            value: data.skill.duration,\r\n            unit: \"\"\r\n          }, {\r\n            text: \"CD\",\r\n            value: data.skill.cd,\r\n            unit: \"\"\r\n          }]\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Sword Rain DMG\",\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Duration\",\r\n            value: stats => data.burst.duration + (stats.constellation >= 2 ? 3 : 0),\r\n            unit: \"s\"\r\n          }, {\r\n            text: \"CD\",\r\n            value: data.burst.cd,\r\n            unit: \"s\"\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: data.burst.cost,\r\n          }]\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          conditional: {\r\n            key: \"a4\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            stats: { hydro_dmg_: 20, },\r\n            maxStack: 0\r\n          },\r\n        }],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: {\r\n        name: tr(\"constellation2.name\"),\r\n        img: c2,\r\n        sections: [{\r\n          text: tr(\"constellation2.description\"),\r\n          conditional: { // RainbowUponTheAzureSky\r\n            key: \"c2\",\r\n            canShow: stats => stats.constellation >= 2,\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"constellation2\", tr, c2),\r\n            description: tr(\"constellation2.description\"),\r\n            name: \"Opponent hit by sword rain\",\r\n            stats: { hydro_enemyRes_: -15 },\r\n          },\r\n        }],\r\n      },\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Xinyan_Card.c909dbfe.jpg\";","export default __webpack_public_path__ + \"static/media/Icon.975f1516.png\";","export default __webpack_public_path__ + \"static/media/IconSide.e99b36b6.png\";","export default __webpack_public_path__ + \"static/media/Banner.2174dd28.png\";","export default __webpack_public_path__ + \"static/media/constellation1.58242349.png\";","export default __webpack_public_path__ + \"static/media/constellation2.44d41c24.png\";","export default __webpack_public_path__ + \"static/media/constellation3.b46bbfc8.png\";","export default __webpack_public_path__ + \"static/media/constellation4.030428d2.png\";","export default __webpack_public_path__ + \"static/media/constellation5.ea142d39.png\";","export default __webpack_public_path__ + \"static/media/constellation6.528c7097.png\";","export default __webpack_public_path__ + \"static/media/skill.40cd24aa.png\";","export default __webpack_public_path__ + \"static/media/burst.577edebf.png\";","export default __webpack_public_path__ + \"static/media/passive1.13e9b729.png\";","export default __webpack_public_path__ + \"static/media/passive2.d98257bf.png\";","export default __webpack_public_path__ + \"static/media/passive3.1c4f9770.png\";","import card from './Character_Xinyan_Card.jpg'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat';\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json';\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from \"../../../Build/Build\";\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { conditionalHeader, normalDocSection, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport ColorText from '../../../Components/ColoredText'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Xinyan_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"pyro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          {\r\n            text: tr(`auto.fields.charged`),\r\n            fields: [{\r\n              canShow: stats => stats.constellation <= 5,\r\n              text: `Spinning DMG`,\r\n              formulaText: stats => <span>{data.charged.spinning[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n              formula: formula.charged.spinning,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats)\r\n            }, {\r\n              canShow: stats => stats.constellation > 5,\r\n              text: `Spinning DMG`,\r\n              formulaText: stats => <span>{data.charged.spinning[stats.tlvl.auto]}% ( {Stat.printStat(\"finalATK\", stats)} + 50% {Stat.printStat(\"finalDEF\", stats)} ) * {Stat.printStat(getTalentStatKey(\"charged\", stats) + \"_multi\", stats)}</span>,\r\n              formula: formula.charged.spinningDEF,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats)\r\n            }, {\r\n              canShow: stats => stats.constellation <= 5,\r\n              text: `Spinning Final DMG`,\r\n              formulaText: stats => <span>{data.charged.final[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n              formula: formula.charged.final,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats)\r\n            }, {\r\n              canShow: stats => stats.constellation > 5,\r\n              text: `Spinning Final DMG`,\r\n              formulaText: stats => <span>{data.charged.final[stats.tlvl.auto]}% ( {Stat.printStat(\"finalATK\", stats)} + 50% {Stat.printStat(\"finalDEF\", stats)} ) * {Stat.printStat(getTalentStatKey(\"charged\", stats) + \"_multi\", stats)}</span>,\r\n              formula: formula.charged.finalDEF,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats)\r\n            }, {\r\n              canShow: stats => stats.constellation <= 5,\r\n              text: `Stamina Cost`,\r\n              value: \"40/s\",\r\n            }, {\r\n              canShow: stats => stats.constellation > 5,\r\n              text: `Stamina Cost`,\r\n              value: \"40/s - 30%\",\r\n            }, {\r\n              text: `Max Duration`,\r\n              value: \"5s\",\r\n            }],\r\n          },\r\n          plungeDocSection(tr, formula, data),\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Swing DMG\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          },\r\n          ...[...Array(3)].map((_, i) => i + 1).flatMap(i => [{\r\n            text: <ColorText color=\"pyro\">Shield Level {i} DMG Absorption</ColorText>,\r\n            formulaText: stats => <span>( {data.skill[`def${i}`][stats.tlvl.skill]}% {Stat.printStat(\"finalDEF\", stats)} + {data.skill[`flat${i}`][stats.tlvl.skill]} ) * (100% + {Stat.printStat(\"shield_\", stats)}) * (250% <ColorText color=\"pyro\">Pyro Absorption</ColorText>)</span>,\r\n            formula: formula.skill[`shield${i}Pyro`],\r\n            variant: \"pyro\"\r\n          }, {\r\n            text: `Shield Level ${i} DMG Absorption`,\r\n            formulaText: stats => <span>( {data.skill[`def${i}`][stats.tlvl.skill]}% {Stat.printStat(\"finalDEF\", stats)} + {data.skill[`flat${i}`][stats.tlvl.skill]} ) * (100% + {Stat.printStat(\"shield_\", stats)})</span>,\r\n            formula: formula.skill[`shield${i}`],\r\n          }]),\r\n          {\r\n            text: \"Pyro DoT\",\r\n            formulaText: stats =>\r\n              <span>{data.skill.dot[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.dot,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Shield Duration\",\r\n            value: \"12s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"18s\",\r\n          }]\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Burst DMG\",\r\n            formulaText: stats =>\r\n              <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(stats.constellation >= 2 ? `physical_burst_critHit` : `physical_burst_${stats.hitMode}`, stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: \"physical\"\r\n          }, {\r\n            text: \"Pyro DoT\",\r\n            formulaText: stats =>\r\n              <span>{data.burst.dot[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dot,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Duration\",\r\n            value: \"2s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"15s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 60,\r\n          }, {\r\n            canShow: stats => stats.constellation >= 2,\r\n            text: \"Form a shield at Level 3: Rave when cast\"\r\n          }, {\r\n            canShow: stats => stats.constellation >= 2,\r\n            text: \"The Burst DMG will always CRIT.\"\r\n          }],\r\n        }]\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          conditional: { // NowThatsRockNRoll\r\n            key: \"a4s\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"passive2\", tr, passive2),\r\n            description: tr(\"passive2.description\"),\r\n            name: <span>Shielded by <b>Sweeping Fervor</b></span>,\r\n            stats: { physical_dmg_: 15 },\r\n          },\r\n        }],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: {\r\n        name: tr(\"constellation1.name\"),\r\n        img: c1,\r\n        sections: [{\r\n          text: tr(\"constellation1.description\"),\r\n          conditional: { // FatalAcceleration\r\n            key: \"c1\",\r\n            canShow: stats => stats.constellation >= 1,\r\n            name: \"Scoring a CRIT hit\",\r\n            stats: { atkSPD_: 12 },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"5s\"\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          conditional: { // WildfireRhythm\r\n            key: \"a4\",\r\n            canShow: stats => stats.constellation >= 4,\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"constellation4\", tr, c4),\r\n            description: tr(\"constellation4.description\"),\r\n            name: <span><b>Sweeping Fervor</b> DMG</span>,\r\n            stats: { physical_enemyRes_: -15, },\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"12s\"\r\n            }]\r\n          }\r\n        }],\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: tr(\"constellation6.description\"),\r\n          conditional: {\r\n            key: \"c6\",\r\n            canShow: stats => stats.constellation >= 6,\r\n            maxStack: 0,\r\n            stats: {\r\n              staminaChargedDec_: 30\r\n            }\r\n          }\r\n        }],\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Yae_Miko_Card.1bf8d56b.png\";","export default __webpack_public_path__ + \"static/media/Icon.3cc3c35d.png\";","export default __webpack_public_path__ + \"static/media/IconSide.0f340775.png\";","export default __webpack_public_path__ + \"static/media/Banner.36353063.png\";","export default __webpack_public_path__ + \"static/media/constellation1.98542df4.png\";","export default __webpack_public_path__ + \"static/media/constellation2.371d875b.png\";","export default __webpack_public_path__ + \"static/media/constellation3.bf230f9c.png\";","export default __webpack_public_path__ + \"static/media/constellation4.e2541ced.png\";","export default __webpack_public_path__ + \"static/media/constellation5.1624d17d.png\";","export default __webpack_public_path__ + \"static/media/constellation6.700a4f67.png\";","export default __webpack_public_path__ + \"static/media/skill.bf230f9c.png\";","export default __webpack_public_path__ + \"static/media/burst.af22f233.png\";","export default __webpack_public_path__ + \"static/media/passive1.97368766.png\";","export default __webpack_public_path__ + \"static/media/passive2.26ac3431.png\";","export default __webpack_public_path__ + \"static/media/passive3.67d91773.png\";","import card from './Character_Yae_Miko_Card.png'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { chargedDocSection, normalDocSection, normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nconst tr = (strKey: string) => <Translate ns=\"char_YaeMiko_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"electro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          normalDocSection(tr, formula, data),\r\n          chargedDocSection(tr, formula, data, 50),\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.ascension < 4,\r\n            text: \"Level 1\",\r\n            formulaText: stats => <span>{data.skill.lvl1[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.lvl1,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension < 4,\r\n            text: \"Level 2\",\r\n            formulaText: stats => <span>{data.skill.lvl2[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.lvl2,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension < 4,\r\n            text: \"Level 3\",\r\n            formulaText: stats => <span>{data.skill.lvl3[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.lvl3,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension < 4,\r\n            text: \"Level 4\",\r\n            formulaText: stats => <span>{data.skill.lvl4[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.lvl4,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: \"Level 1\",\r\n            formulaText: stats => <span>{data.skill.lvl1[stats.tlvl.skill]}% * {Stat.printStat(\"finalATK\", stats)} * ({Stat.printStat(getTalentStatKey(\"skill\", stats) + \"_base_multi\", stats)} + 0.15% * {Stat.printStat(\"eleMas\", stats)}) * {Stat.printStat(\"enemyLevel_multi\", stats)} * {Stat.printStat(\"electro_enemyRes_multi\", stats)}</span>,\r\n            formula: formula.skill.lvl1EM,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: \"Level 2\",\r\n            formulaText: stats => <span>{data.skill.lvl2[stats.tlvl.skill]}% * {Stat.printStat(\"finalATK\", stats)} * ({Stat.printStat(getTalentStatKey(\"skill\", stats) + \"_base_multi\", stats)} + 0.15% * {Stat.printStat(\"eleMas\", stats)}) * {Stat.printStat(\"enemyLevel_multi\", stats)} * {Stat.printStat(\"electro_enemyRes_multi\", stats)}</span>,\r\n            formula: formula.skill.lvl2EM,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: \"Level 3\",\r\n            formulaText: stats => <span>{data.skill.lvl3[stats.tlvl.skill]}% * {Stat.printStat(\"finalATK\", stats)} * ({Stat.printStat(getTalentStatKey(\"skill\", stats) + \"_base_multi\", stats)} + 0.15% * {Stat.printStat(\"eleMas\", stats)}) * {Stat.printStat(\"enemyLevel_multi\", stats)} * {Stat.printStat(\"electro_enemyRes_multi\", stats)}</span>,\r\n            formula: formula.skill.lvl3EM,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: \"Level 4\",\r\n            formulaText: stats => <span>{data.skill.lvl4[stats.tlvl.skill]}% * {Stat.printStat(\"finalATK\", stats)} * ({Stat.printStat(getTalentStatKey(\"skill\", stats) + \"_base_multi\", stats)} + 0.15% * {Stat.printStat(\"eleMas\", stats)}) * {Stat.printStat(\"enemyLevel_multi\", stats)} * {Stat.printStat(\"electro_enemyRes_multi\", stats)}</span>,\r\n            formula: formula.skill.lvl4EM,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Duration\",\r\n            value: \"14s\",\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"4s\",\r\n          }]\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: \"Tenko Thunderbolt DMG\",\r\n            formulaText: stats => <span>{data.burst.thunderbolt[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.thunderbolt,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          },{\r\n            text: \"CD\",\r\n            value: \"22s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 90,\r\n          }],\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"burstBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"skillBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Yanfei_Card.41eeebc2.png\";","export default __webpack_public_path__ + \"static/media/Icon.a551452a.png\";","export default __webpack_public_path__ + \"static/media/IconSide.fc5423e3.png\";","export default __webpack_public_path__ + \"static/media/Banner.dc8c6404.png\";","export default __webpack_public_path__ + \"static/media/constellation1.7bc8b7fd.png\";","export default __webpack_public_path__ + \"static/media/constellation2.0f0220dd.png\";","export default __webpack_public_path__ + \"static/media/constellation3.0b60c52b.png\";","export default __webpack_public_path__ + \"static/media/constellation4.3828373c.png\";","export default __webpack_public_path__ + \"static/media/constellation5.3ee09f20.png\";","export default __webpack_public_path__ + \"static/media/constellation6.887f043b.png\";","export default __webpack_public_path__ + \"static/media/skill.587717e4.png\";","export default __webpack_public_path__ + \"static/media/burst.154027e2.png\";","export default __webpack_public_path__ + \"static/media/passive1.53530818.png\";","export default __webpack_public_path__ + \"static/media/passive2.769d2466.png\";","export default __webpack_public_path__ + \"static/media/passive3.2f58680d.png\";","import card from './Character_Yanfei_Card.png'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { normalSrc, plungeDocSection, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport ColorText from '../../../Components/ColoredText'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Yanfei_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"pyro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [{\r\n          text: tr(`auto.fields.normal`),\r\n          fields: [...data.normal.hitArr.map((percentArr, i) =>\r\n          ({\r\n            text: `${i + 1}-Hit DMG`,\r\n            formulaText: stats => <span>{percentArr[stats.tlvl.auto]} % {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)} </span>,\r\n            formula: formula.normal[i],\r\n            variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n          })), {\r\n            text: \"Scarlet Seal Duration\",\r\n            value: \"10s\"\r\n          }, {\r\n            text: <span>Max number of <b>Scarlet Seals</b></span>,\r\n            value: stats => stats.constellation >= 6 ? 4 : 3\r\n          }]\r\n        }, {\r\n          text: tr(`auto.fields.charged`),\r\n          fields: [...data.charged.hitArr.map((percentArr, i) => ({\r\n            canShow: stats => i < 4 || stats.constellation >= 6,\r\n            text: `${i}-Seal DMG`,\r\n            formulaText: stats => <span>{percentArr[stats.tlvl.auto]} % {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)} </span>,\r\n            formula: formula.charged[i],\r\n            variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n          })), {\r\n            text: `Stamina Cost`,\r\n            value: 50,\r\n          }, {\r\n            text: \"Scarlet Seal Stamina Consumption Decrease\",\r\n            value: stats => stats.constellation >= 1 ? \"15% + 10% per Seal\" : \"15% per Seal\"\r\n          }, {\r\n            canShow: stats => stats.constellation >= 1,\r\n            text: \"Increases resistance against interruption during release.\"\r\n          }]\r\n        },\r\n        plungeDocSection(tr, formula, data),\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>{data.skill.dmg[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"9s\",\r\n          },]\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            canShow: stats => stats.constellation >= 4,\r\n            text: \"Shield on Cast\",\r\n            formulaText: stats => <span>45% {Stat.printStat(\"finalHP\", stats)}</span>,\r\n            formula: formula.constellation4.dmg,\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"20s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 80,\r\n          }]\r\n          , conditional: {\r\n            key: \"q\",\r\n            name: <span>Brilliance</span>,\r\n            stats: stats => ({ charged_dmg_: data.burst.dmg_[stats.tlvl.burst] }),\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"15s\",\r\n            }, {\r\n              text: \"Scarlet Seal Grant Interval\",\r\n              value: \"1s\"\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          conditional: {\r\n            key: \"a1\",\r\n            canShow: stats => stats.ascension >= 1,\r\n            name: <span>Consumes <b>Scarlet Seals</b> by using a Charged Attack</span>,\r\n            stats: { pyro_dmg_: 5 },\r\n            maxStack: stats => stats.constellation >= 6 ? 4 : 3,\r\n            fields: [{\r\n              text: \"Duration\",\r\n              value: \"6s\",\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          fields: [{\r\n            text: \"Crit Hit on Opponent\",\r\n            formulaText: stats => <span>80% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n            formula: formula.passive2.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }]\r\n        }],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: {\r\n        name: tr(\"constellation2.name\"),\r\n        img: c2,\r\n        sections: [{\r\n          text: tr(\"constellation2.description\"),\r\n          conditional: {\r\n            key: \"c2\",\r\n            canShow: stats => stats.constellation >= 2,\r\n            name: \"Against enemies below 50% HP\",\r\n            stats: { charged_critRate_: 20 }\r\n          }\r\n        }],\r\n      },\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: {\r\n        name: tr(\"constellation4.name\"),\r\n        img: c4,\r\n        sections: [{\r\n          text: tr(\"constellation4.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.constellation >= 4,\r\n            text: <ColorText color=\"pyro\">Shield DMG Absorption</ColorText>,\r\n            formulaText: stats => <span>45% {Stat.printStat(\"finalHP\", stats)} * (100% + {Stat.printStat(\"shield_\", stats)}) * (250% <ColorText color=\"pyro\">Pyro Absorption</ColorText>)</span>,\r\n            formula: formula.constellation4.shieldCryo,\r\n            variant: \"pyro\"\r\n          }, {\r\n            canShow: stats => stats.constellation >= 4,\r\n            text: \"Shield DMG Absorption\",\r\n            formulaText: stats => <span>45% {Stat.printStat(\"finalHP\", stats)} * (100% + {Stat.printStat(\"shield_\", stats)})</span>,\r\n            formula: formula.constellation4.shield,\r\n          }, {\r\n            canShow: stats => stats.constellation >= 4,\r\n            text: \"Duration\",\r\n            value: \"20s\",\r\n          },]\r\n        }],\r\n      },\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: talentTemplate(\"constellation6\", tr, c6),\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Yoimiya_Card.0fe41c6a.png\";","export default __webpack_public_path__ + \"static/media/Icon.80bc1da8.png\";","export default __webpack_public_path__ + \"static/media/IconSide.8c295948.png\";","export default __webpack_public_path__ + \"static/media/Banner.dd2c0184.png\";","export default __webpack_public_path__ + \"static/media/constellation1.acaa7ffc.png\";","export default __webpack_public_path__ + \"static/media/constellation2.b0397ccc.png\";","export default __webpack_public_path__ + \"static/media/constellation3.c0caca15.png\";","export default __webpack_public_path__ + \"static/media/constellation4.0fa58b10.png\";","export default __webpack_public_path__ + \"static/media/constellation5.0ba3b9ca.png\";","export default __webpack_public_path__ + \"static/media/constellation6.faa1d8b2.png\";","export default __webpack_public_path__ + \"static/media/skill.c0caca15.png\";","export default __webpack_public_path__ + \"static/media/burst.1bca7615.png\";","export default __webpack_public_path__ + \"static/media/passive1.fc46b5cb.png\";","export default __webpack_public_path__ + \"static/media/passive2.f46263ee.png\";","export default __webpack_public_path__ + \"static/media/passive3.18ff03ea.png\";","import card from './Character_Yoimiya_Card.png'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { conditionalHeader, normalSrc, plungeDocSection, sgt, talentTemplate } from '../SheetUtil'\r\nimport { WeaponTypeKey } from '../../../Types/consts'\r\nimport { basicDMGFormulaText } from '../../../Util/FormulaTextUtil'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Yoimiya_gen\" key18={strKey} />\r\nconst charTr = (strKey: string) => <Translate ns=\"char_Yoimiya\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"pyro\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"F\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [\r\n          {\r\n            text: tr(\"auto.fields.normal\"),\r\n            fields: data.normal.hitArr.map((percentArr, i) =>\r\n            ({\r\n              text: <span>{sgt(`normal.hit${i + 1}`)} {(i === 0 || i === 3) ? <span>(<Translate ns=\"sheet\" key18=\"hits\" values={{ count: 2 }} />)</span> : \"\"}</span>,\r\n              formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n              formula: formula.normal[i],\r\n              variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n            }))\r\n          }, {\r\n            text: tr(\"auto.fields.charged\"),\r\n            fields: [{\r\n              text: tr(\"auto.skillParams.5\"),\r\n              formulaText: stats => <span>{data.charged.hit[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n              formula: formula.charged.hit,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n            }, {\r\n              text: tr(\"auto.skillParams.6\"),\r\n              formulaText: stats => <span>{data.charged.full[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats, \"pyro\"), stats)}</span>,\r\n              formula: formula.charged.full,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats, \"pyro\"),\r\n            }, {\r\n              text: tr(\"auto.skillParams.7\"),\r\n              formulaText: stats => <span>{data.charged.kindling[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats, \"pyro\"), stats)}</span>,\r\n              formula: formula.charged.kindling,\r\n              variant: stats => getTalentStatKeyVariant(\"charged\", stats, \"pyro\"),\r\n            }]\r\n          },\r\n          plungeDocSection(tr, formula, data)\r\n        ],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [\r\n            ...data.normal.hitArr.map((percentArr, i) =>\r\n            ({\r\n              text: <span>{sgt(`normal.hit${i + 1}`)} {(i === 0 || i === 3) ? <span>(<Translate ns=\"sheet\" key18=\"hits\" values={{ count: 2 }} />)</span> : \"\"}</span>,\r\n              formulaText: stats => <span>{data.skill.dmg_[stats.tlvl.skill]}% * {percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats, \"pyro\"), stats)}</span>,\r\n              formula: formula.skill[i],\r\n              variant: stats => getTalentStatKeyVariant(\"normal\", stats, \"pyro\"),\r\n            })), {\r\n              text: tr(\"skill.skillParams.1\"),\r\n              value: \"10s\"\r\n            }, {\r\n              text: tr(\"skill.skillParams.2\"),\r\n              value: \"18s\",\r\n            }],\r\n          conditional: {\r\n            key: \"a1\",\r\n            canShow: stats => stats.ascension >= 1,\r\n            name: tr(\"passive1.name\"),\r\n            maxStack: 10,\r\n            stats: { pyro_dmg_: 2 },\r\n          },\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            text: tr(\"burst.skillParams.0\"),\r\n            formulaText: stats => basicDMGFormulaText(data.burst.dmg[stats.tlvl.burst], stats, \"burst\"),\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.1\"),\r\n            formulaText: stats => basicDMGFormulaText(data.burst.exp[stats.tlvl.burst], stats, \"burst\"),\r\n            formula: formula.burst.exp,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            text: tr(\"burst.skillParams.2\"),\r\n            value: stats => 10 + (stats.constellation < 1 ? 0 : 4),\r\n            unit: \"s\"\r\n          }, {\r\n            text: tr(\"burst.skillParams.3\"),\r\n            value: \"15s\",\r\n          }, {\r\n            text: tr(\"burst.skillParams.4\"),\r\n            value: 60,\r\n          }]\r\n        }],\r\n      },\r\n      passive1: talentTemplate(\"passive1\", tr, passive1),\r\n      passive2: {\r\n        name: tr(\"passive2.name\"),\r\n        img: passive2,\r\n        sections: [{\r\n          text: tr(\"passive2.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: charTr(\"p2\"),\r\n            value: stats => {\r\n              const [num] = stats.conditionalValues?.character?.Yoimiya?.a1 ?? [0]\r\n              return data.passive2.fixed_atk_ + num * data.passive2.var_atk_\r\n            },\r\n            unit: \"%\"\r\n          }, {\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: sgt(\"duration\"),\r\n            value: data.passive2.duration,\r\n            unit: \"s\"\r\n          }],\r\n          conditional: {\r\n            key: \"p2p\",\r\n            canShow: stats => stats.ascension >= 4,\r\n            partyBuff: \"partyOnly\",\r\n            header: conditionalHeader(\"passive2\", tr, passive2),\r\n            description: tr(\"passive2.description\"),\r\n            name: charTr(\"p2p\"),\r\n            states: Object.fromEntries([...Array(11).keys()].map(t => [t, {\r\n              name: `${t}`,\r\n              stats: {\r\n                atk_: data.passive2.fixed_atk_ + data.passive2.var_atk_ * t\r\n              },\r\n              fields: [{\r\n                text: sgt(\"duration\"),\r\n                value: data.passive2.duration,\r\n                unit: \"s\"\r\n              }]\r\n            }]))\r\n          }\r\n        }],\r\n      },\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: {\r\n        name: tr(\"constellation1.name\"),\r\n        img: c1,\r\n        sections: [{\r\n          text: tr(\"constellation1.description\"),\r\n          conditional: {\r\n            key: \"c1\",\r\n            canShow: stats => stats.constellation >= 1,\r\n            name: charTr(\"c1\"),\r\n            stats: { atk_: 20, },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: \"20s\"\r\n            }]\r\n          },\r\n        }],\r\n      },\r\n      constellation2: {\r\n        name: tr(\"constellation2.name\"),\r\n        img: c2,\r\n        sections: [{\r\n          text: tr(\"constellation2.description\"),\r\n          conditional: {\r\n            key: \"c2\",\r\n            canShow: stats => stats.constellation >= 2,\r\n            name: charTr(\"c2\"),\r\n            stats: { pyro_dmg_: 25, },\r\n            fields: [{\r\n              text: sgt(\"duration\"),\r\n              value: \"6s\"\r\n            }]\r\n          }\r\n        }],\r\n      },\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: tr(\"constellation6.description\"),\r\n          fields: [\r\n            ...data.normal.hitArr.map((percentArr, i) =>\r\n            ({\r\n              canShow: stats => stats.constellation >= 6,\r\n              text: <span>{sgt(`normal.hit${i + 1}`)} {(i === 0 || i === 2) ? <span>(<Translate ns=\"sheet\" key18=\"hits\" values={{ count: 2 }} />)</span> : \"\"}</span>,\r\n              formulaText: stats => <span>60% * {data.skill.dmg_[stats.tlvl.skill]}% * {percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats, \"pyro\"), stats)}</span>,\r\n              formula: formula.c6[i],\r\n              variant: stats => getTalentStatKeyVariant(\"normal\", stats, \"pyro\"),\r\n            }))]\r\n        }],\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","export default __webpack_public_path__ + \"static/media/Character_Zhongli_Card.2e5f8839.png\";","export default __webpack_public_path__ + \"static/media/Icon.1ad72e5e.png\";","export default __webpack_public_path__ + \"static/media/IconSide.aa62e655.png\";","export default __webpack_public_path__ + \"static/media/Banner.3e6d4e7a.png\";","export default __webpack_public_path__ + \"static/media/constellation1.b3ab1d70.png\";","export default __webpack_public_path__ + \"static/media/constellation2.88e08167.png\";","export default __webpack_public_path__ + \"static/media/constellation3.ce61cf42.png\";","export default __webpack_public_path__ + \"static/media/constellation4.31cef161.png\";","export default __webpack_public_path__ + \"static/media/constellation5.8f0fb23f.png\";","export default __webpack_public_path__ + \"static/media/constellation6.eca8850e.png\";","export default __webpack_public_path__ + \"static/media/skill.5ed32e40.png\";","export default __webpack_public_path__ + \"static/media/burst.b7d0432b.png\";","export default __webpack_public_path__ + \"static/media/passive1.1ea3a711.png\";","export default __webpack_public_path__ + \"static/media/passive2.5651aac5.png\";","export default __webpack_public_path__ + \"static/media/passive3.dd9fba7c.png\";","import card from './Character_Zhongli_Card.png'\r\nimport thumb from './Icon.png'\r\nimport thumbSide from './IconSide.png'\r\nimport banner from './Banner.png'\r\nimport c1 from './constellation1.png'\r\nimport c2 from './constellation2.png'\r\nimport c3 from './constellation3.png'\r\nimport c4 from './constellation4.png'\r\nimport c5 from './constellation5.png'\r\nimport c6 from './constellation6.png'\r\nimport skill from './skill.png'\r\nimport burst from './burst.png'\r\nimport passive1 from './passive1.png'\r\nimport passive2 from './passive2.png'\r\nimport passive3 from './passive3.png'\r\nimport Stat from '../../../Stat'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../Build/Build'\r\nimport { ICharacterSheet } from '../../../Types/character'\r\nimport { Translate } from '../../../Components/Translate'\r\nimport { conditionalHeader, normalSrc, talentTemplate } from '../SheetUtil'\r\nimport { allElementsWithPhy, WeaponTypeKey } from '../../../Types/consts'\r\nconst tr = (strKey: string) => <Translate ns=\"char_Zhongli_gen\" key18={strKey} />\r\nconst char: ICharacterSheet = {\r\n  name: tr(\"name\"),\r\n  cardImg: card,\r\n  thumbImg: thumb,\r\n  thumbImgSide: thumbSide,\r\n  bannerImg: banner,\r\n  rarity: data_gen.star,\r\n  elementKey: \"geo\",\r\n  weaponTypeKey: data_gen.weaponTypeKey as WeaponTypeKey,\r\n  gender: \"M\",\r\n  constellationName: tr(\"constellationName\"),\r\n  title: tr(\"title\"),\r\n  baseStat: data_gen.base,\r\n  baseStatCurve: data_gen.curves,\r\n  ascensions: data_gen.ascensions,\r\n  talent: {\r\n    formula,\r\n    sheets: {\r\n      auto: {\r\n        name: tr(\"auto.name\"),\r\n        img: normalSrc(data_gen.weaponTypeKey as WeaponTypeKey),\r\n        sections: [{\r\n          text: tr(`auto.fields.normal`),\r\n          fields: [\r\n            ...data.normal.hitArr.map((percentArr, i) => ({\r\n              canShow: stats => stats.ascension < 4,\r\n              text: `${i + 1}-Hit DMG ${i === 4 ? \" (4 Hits)\" : \"\"}`,\r\n              formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n              formula: formula.normal[i],\r\n              variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n            })),\r\n            ...data.normal.hitArr.map((percentArr, i) => ({\r\n              canShow: stats => stats.ascension >= 4,\r\n              text: `${i + 1}-Hit DMG ${i === 4 ? \" (4 Hits)\" : \"\"}`,\r\n              formulaText: stats => <span>( {percentArr[stats.tlvl.auto]}% {Stat.printStat(\"finalATK\", stats)} + 1.39% {Stat.printStat(\"finalHP\", stats)} ) * {Stat.printStat(getTalentStatKey(\"normal\", stats) + \"_multi\", stats)}</span>,\r\n              formula: formula.normal[`${i}HP`],\r\n              variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n            }))]\r\n        }, {\r\n          text: tr(`auto.fields.charged`),\r\n          fields: [{\r\n            canShow: stats => stats.ascension < 4,\r\n            text: `Charged Attack DMG`,\r\n            formulaText: stats => <span>{data.charged.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n            formula: formula.charged.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: `Charged Attack DMG`,\r\n            formulaText: stats => <span>( {data.charged.dmg[stats.tlvl.auto]}% {Stat.printStat(\"finalATK\", stats)} + 1.39% {Stat.printStat(\"finalHP\", stats)} ) * {Stat.printStat(getTalentStatKey(\"charged\", stats) + \"_multi\", stats)}</span>,\r\n            formula: formula.charged.dmgHP,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }, {\r\n            text: `Stamina Cost`,\r\n            value: 25,\r\n          }]\r\n        }, {\r\n          text: tr(`auto.fields.plunging`),\r\n          fields: [{\r\n            canShow: stats => stats.ascension < 4,\r\n            text: `Plunge DMG`,\r\n            formulaText: stats => <span>{data.plunging.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n            formula: formula.plunging.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: `Plunge DMG`,\r\n            formulaText: stats => <span>( {data.plunging.dmg[stats.tlvl.auto]}% {Stat.printStat(\"finalATK\", stats)} + 1.39% {Stat.printStat(\"finalHP\", stats)} ) * {Stat.printStat(getTalentStatKey(\"plunging\", stats) + \"_multi\", stats)}</span>,\r\n            formula: formula.plunging.dmgHP,\r\n            variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension < 4,\r\n            text: `Low Plunge DMG`,\r\n            formulaText: stats => <span>{data.plunging.low[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n            formula: formula.plunging.low,\r\n            variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: `Low Plunge DMG`,\r\n            formulaText: stats => <span>( {data.plunging.low[stats.tlvl.auto]}% {Stat.printStat(\"finalATK\", stats)} + 1.39% {Stat.printStat(\"finalHP\", stats)} ) * {Stat.printStat(getTalentStatKey(\"plunging\", stats) + \"_multi\", stats)}</span>,\r\n            formula: formula.plunging.lowHP,\r\n            variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension < 4,\r\n            text: `High Plunge DMG`,\r\n            formulaText: stats => <span>{data.plunging.high[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n            formula: formula.plunging.high,\r\n            variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: `High Plunge DMG`,\r\n            formulaText: stats => <span>( {data.plunging.high[stats.tlvl.auto]}% {Stat.printStat(\"finalATK\", stats)} + 1.39% {Stat.printStat(\"finalHP\", stats)} ) * {Stat.printStat(getTalentStatKey(\"plunging\", stats) + \"_multi\", stats)}</span>,\r\n            formula: formula.plunging.highHP,\r\n            variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n          }]\r\n        }],\r\n      },\r\n      skill: {\r\n        name: tr(\"skill.name\"),\r\n        img: skill,\r\n        sections: [{\r\n          text: tr(\"skill.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.ascension < 4,\r\n            text: \"Stone Stele DMG\",\r\n            formulaText: stats => <span>{data.skill.steeleDMG[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.steeleDMG,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: \"Stone Stele DMG\",\r\n            formulaText: stats => <span>( {data.skill.steeleDMG[stats.tlvl.skill]}% {Stat.printStat(\"finalATK\", stats)} + 1.9% {Stat.printStat(\"finalHP\", stats)} ) * {Stat.printStat(getTalentStatKey(\"skill\", stats) + \"_multi\", stats)}</span>,\r\n            formula: formula.skill.steeleDMGHP,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension < 4,\r\n            text: \"Resonance DMG\",\r\n            formulaText: stats => <span>{data.skill.resonanceDMG[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.resonanceDMG,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: \"Resonance DMG\",\r\n            formulaText: stats => <span>( {data.skill.resonanceDMG[stats.tlvl.skill]}% {Stat.printStat(\"finalATK\", stats)} + 1.9% {Stat.printStat(\"finalHP\", stats)} ) * {Stat.printStat(getTalentStatKey(\"skill\", stats) + \"_multi\", stats)}</span>,\r\n            formula: formula.skill.resonanceDMGHP,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Maximum Stele number\",\r\n            value: stats => stats.constellation >= 1 ? 2 : 1,\r\n          }, {\r\n            text: \"Press CD\",\r\n            value: \"4s\",\r\n          }, {\r\n            canShow: stats => stats.ascension < 4,\r\n            text: \"Hold DMG\",\r\n            formulaText: stats => <span>{data.skill.holdDMG[stats.tlvl.skill]}% {Stat.printStat(getTalentStatKey(\"skill\", stats), stats)}</span>,\r\n            formula: formula.skill.holdDMG,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: \"Hold DMG\",\r\n            formulaText: stats => <span>( {data.skill.holdDMG[stats.tlvl.skill]}% {Stat.printStat(\"finalATK\", stats)} + 1.9% {Stat.printStat(\"finalHP\", stats)} ) * {Stat.printStat(getTalentStatKey(\"skill\", stats) + \"_multi\", stats)}</span>,\r\n            formula: formula.skill.holdDMGHP,\r\n            variant: stats => getTalentStatKeyVariant(\"skill\", stats),\r\n          }, {\r\n            text: \"Shield Absorption\",\r\n            formulaText: stats => <span>( {data.skill.shieldBase[stats.tlvl.skill]} + {data.skill.shieldMaxHP[stats.tlvl.skill]}% {Stat.printStat(\"finalHP\", stats)} ) * (100% + {Stat.printStat(\"shield_\", stats)}) * 150% All DMG Absorption</span>,\r\n            formula: formula.skill.shield,\r\n          }, {\r\n            text: \"Shield Duration\",\r\n            value: \"20s\",\r\n          }, {\r\n            text: \"Hold CD\",\r\n            value: \"12s\",\r\n          }],\r\n          conditional: { // JadeShield (near)\r\n            key: \"e\",\r\n            partyBuff: \"partyAll\",\r\n            header: conditionalHeader(\"skill\", tr, skill),\r\n            description: tr(\"skill.description\"),\r\n            name: <span>Enemies near <b>Jade Shield</b></span>,\r\n            stats: Object.fromEntries(allElementsWithPhy.map(k => [`${k}_enemyRes_`, -20])),\r\n          },\r\n        }],\r\n      },\r\n      burst: {\r\n        name: tr(\"burst.name\"),\r\n        img: burst,\r\n        sections: [{\r\n          text: tr(\"burst.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.ascension < 4,\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>{data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(getTalentStatKey(\"burst\", stats), stats)}</span>,\r\n            formula: formula.burst.dmg,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            canShow: stats => stats.ascension >= 4,\r\n            text: \"Skill DMG\",\r\n            formulaText: stats => <span>( {data.burst.dmg[stats.tlvl.burst]}% {Stat.printStat(\"finalATK\", stats)} + 33% {Stat.printStat(\"finalHP\", stats)} ) * {Stat.printStat(getTalentStatKey(\"burst\", stats) + \"_multi\", stats)}</span>,\r\n            formula: formula.burst.dmgHP,\r\n            variant: stats => getTalentStatKeyVariant(\"burst\", stats),\r\n          }, {\r\n            canShow: stats => stats.constellation >= 4,\r\n            text: \"AoE Increase\",\r\n            value: \"20%\",\r\n          }, {\r\n            text: \"Petrification Duration\",\r\n            value: stats => data.burst.petriDur[stats.tlvl.burst] + \"s\" + (stats.constellation >= 4 ? \" +2s\" : \"\"),\r\n          }, {\r\n            text: \"CD\",\r\n            value: \"12s\",\r\n          }, {\r\n            text: \"Energy Cost\",\r\n            value: 40,\r\n          }]\r\n        }],\r\n      },\r\n      passive1: {\r\n        name: tr(\"passive1.name\"),\r\n        img: passive1,\r\n        sections: [{\r\n          text: tr(\"passive1.description\"),\r\n          conditional: { // ResonantWaves (on dmg)\r\n            key: \"p1\",\r\n            canShow: stats => stats.ascension >= 1,\r\n            name: <span>When the <b>Jade Shield</b> takes DMG</span>,\r\n            maxStack: 5,\r\n            stats: { shield_: 5 },\r\n          }\r\n        }],\r\n      },\r\n      passive2: talentTemplate(\"passive2\", tr, passive2),\r\n      passive3: talentTemplate(\"passive3\", tr, passive3),\r\n      constellation1: talentTemplate(\"constellation1\", tr, c1),\r\n      constellation2: talentTemplate(\"constellation2\", tr, c2),\r\n      constellation3: talentTemplate(\"constellation3\", tr, c3, \"skillBoost\"),\r\n      constellation4: talentTemplate(\"constellation4\", tr, c4),\r\n      constellation5: talentTemplate(\"constellation5\", tr, c5, \"burstBoost\"),\r\n      constellation6: {\r\n        name: tr(\"constellation6.name\"),\r\n        img: c6,\r\n        sections: [{\r\n          text: tr(\"constellation6.description\"),\r\n          fields: [{\r\n            canShow: stats => stats.constellation >= 6,\r\n            text: \"Maximum Health Regen\",\r\n            value: stats => stats.finalHP * 0.08,\r\n            variant: \"success\"\r\n          },]\r\n        }],\r\n      }\r\n    },\r\n  },\r\n};\r\nexport default char;\r\n","import Albedo from './Albedo'\r\nimport Aloy from './Aloy'\r\nimport Amber from './Amber'\r\nimport AratakiItto from './AratakiItto'\r\nimport Barbara from './Barbara'\r\nimport Beidou from './Beidou'\r\nimport Bennett from './Bennett'\r\nimport Chongyun from './Chongyun'\r\nimport Diluc from './Diluc'\r\nimport Diona from './Diona'\r\nimport Eula from './Eula'\r\nimport Fischl from './Fischl'\r\nimport Ganyu from './Ganyu'\r\nimport Gorou from './Gorou'\r\nimport HuTao from './HuTao'\r\nimport Jean from './Jean'\r\nimport KaedeharaKazuha from './KaedeharaKazuha'\r\nimport Kaeya from './Kaeya'\r\nimport KamisatoAyaka from './KamisatoAyaka'\r\nimport Keqing from './Keqing'\r\nimport Klee from './Klee'\r\nimport KujouSara from './KujouSara'\r\nimport Lisa from './Lisa'\r\nimport Mona from './Mona'\r\nimport Ningguang from './Ningguang'\r\nimport Noelle from './Noelle'\r\nimport Qiqi from './Qiqi'\r\nimport RaidenShogun from './RaidenShogun'\r\nimport Razor from './Razor'\r\nimport Rosaria from './Rosaria'\r\nimport SangonomiyaKokomi from './SangonomiyaKokomi'\r\nimport Sayu from './Sayu'\r\nimport Sucrose from './Sucrose'\r\nimport Tartaglia from './Tartaglia'\r\nimport Thoma from './Thoma'\r\nimport Traveler from './Traveler'\r\nimport Venti from './Venti'\r\nimport Xiao from './Xiao'\r\nimport Xiangling from './Xiangling'\r\nimport Xingqiu from './Xingqiu'\r\nimport Xinyan from './Xinyan'\r\nimport YaeMiko from './YaeMiko'\r\nimport Yanfei from './Yanfei'\r\nimport Yoimiya from './Yoimiya'\r\nimport Zhongli from './Zhongli'\r\nimport { CharacterKey } from '../../Types/consts'\r\nimport { ICharacterSheet } from '../../Types/character'\r\nimport { documentSectionsProcessing } from '../../Util/DocumentUtil'\r\nconst characters: StrictDict<CharacterKey, ICharacterSheet> = {\r\n  Albedo,\r\n  Aloy,\r\n  Amber,\r\n  AratakiItto,\r\n  Barbara,\r\n  Beidou,\r\n  Bennett,\r\n  Chongyun,\r\n  Diluc,\r\n  Diona,\r\n  Eula,\r\n  Fischl,\r\n  Ganyu,\r\n  Gorou,\r\n  HuTao,\r\n  Jean,\r\n  KaedeharaKazuha,\r\n  Kaeya,\r\n  KamisatoAyaka,\r\n  Keqing,\r\n  Klee,\r\n  KujouSara,\r\n  Lisa,\r\n  Mona,\r\n  Ningguang,\r\n  Noelle,\r\n  Qiqi,\r\n  RaidenShogun,\r\n  Razor,\r\n  Rosaria,\r\n  SangonomiyaKokomi,\r\n  Sayu,\r\n  Sucrose,\r\n  Tartaglia,\r\n  Thoma,\r\n  Traveler,\r\n  Venti,\r\n  Xiao,\r\n  Xiangling,\r\n  Xingqiu,\r\n  Xinyan,\r\n  YaeMiko,\r\n  Yanfei,\r\n  Yoimiya,\r\n  Zhongli\r\n} as const\r\n\r\nObject.values(characters).forEach(char => {\r\n  if (\"talent\" in char)\r\n    Object.values(char.talent.sheets).forEach(talentSheetElement =>\r\n      documentSectionsProcessing(talentSheetElement.sections))\r\n  else //char.talents -> Traveler\r\n    Object.values(char.talents).forEach(talentSheet =>\r\n      Object.values(talentSheet.sheets).forEach(talentSheetElement =>\r\n        documentSectionsProcessing(talentSheetElement.sections)))\r\n})\r\nexport default characters","import { DocumentSection } from \"../Types/character\";\r\nimport { fieldProcessing } from \"./FieldUtil\";\r\n\r\nexport function documentSectionsProcessing(sections: DocumentSection[]) {\r\n  sections.forEach(section => {\r\n    if (typeof section.canShow !== \"function\") section.canShow = () => true\r\n    section.fields?.forEach?.(fieldProcessing)\r\n  })\r\n}"],"sourceRoot":""}