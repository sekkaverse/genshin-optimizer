{"version":3,"sources":["Data/Weapons/Polearm/Deathmatch/index.tsx","Data/Weapons/Claymore/Akuoumaru/Icon.png","Data/Weapons/Claymore/Akuoumaru/AwakenIcon.png","Data/Weapons/Claymore/Akuoumaru/index.tsx","Data/Weapons/Claymore/BlackcliffSlasher/Icon.png","Data/Weapons/Claymore/BlackcliffSlasher/AwakenIcon.png","Data/Weapons/Claymore/BlackcliffSlasher/index.tsx","Data/Weapons/Claymore/BloodtaintedGreatsword/Icon.png","Data/Weapons/Claymore/BloodtaintedGreatsword/AwakenIcon.png","Data/Weapons/Claymore/BloodtaintedGreatsword/index.tsx","Data/Weapons/Claymore/DebateClub/Icon.png","Data/Weapons/Claymore/DebateClub/AwakenIcon.png","Data/Weapons/Claymore/DebateClub/index.tsx","Data/Weapons/Claymore/FavoniusGreatsword/Icon.png","Data/Weapons/Claymore/FavoniusGreatsword/AwakenIcon.png","Data/Weapons/Claymore/FavoniusGreatsword/index.tsx","Data/Weapons/Claymore/FerrousShadow/Icon.png","Data/Weapons/Claymore/FerrousShadow/AwakenIcon.png","Data/Weapons/Claymore/FerrousShadow/index.tsx","Data/Weapons/Claymore/KatsuragikiriNagamasa/Icon.png","Data/Weapons/Claymore/KatsuragikiriNagamasa/AwakenIcon.png","Data/Weapons/Claymore/KatsuragikiriNagamasa/index.tsx","Data/Weapons/Claymore/LithicBlade/Icon.png","Data/Weapons/Claymore/LithicBlade/AwakenIcon.png","Data/Weapons/Claymore/LithicBlade/index.tsx","Data/Weapons/Claymore/LuxuriousSeaLord/Icon.png","Data/Weapons/Claymore/LuxuriousSeaLord/AwakenIcon.png","Data/Weapons/Claymore/LuxuriousSeaLord/index.tsx","Data/Weapons/Claymore/OldMercsPal/Icon.png","Data/Weapons/Claymore/OldMercsPal/AwakenIcon.png","Data/Weapons/Claymore/OldMercsPal/index.tsx","Data/Weapons/Claymore/PrototypeArchaic/Icon.png","Data/Weapons/Claymore/PrototypeArchaic/AwakenIcon.png","Data/Weapons/Claymore/PrototypeArchaic/index.tsx","Data/Weapons/Claymore/Rainslasher/Icon.png","Data/Weapons/Claymore/Rainslasher/AwakenIcon.png","Data/Weapons/Claymore/Rainslasher/index.tsx","Data/Weapons/Claymore/RedhornStonethresher/AwakenIcon.png","Data/Weapons/Claymore/RedhornStonethresher/Icon.png","Data/Weapons/Claymore/RedhornStonethresher/index.tsx","Data/Weapons/Claymore/RoyalGreatsword/Icon.png","Data/Weapons/Claymore/RoyalGreatsword/AwakenIcon.png","Data/Weapons/Claymore/RoyalGreatsword/index.tsx","Data/Weapons/Claymore/SacrificialGreatsword/Icon.png","Data/Weapons/Claymore/SacrificialGreatsword/AwakenIcon.png","Data/Weapons/Claymore/SacrificialGreatsword/index.tsx","Data/Weapons/Claymore/SerpentSpine/Icon.png","Data/Weapons/Claymore/SerpentSpine/AwakenIcon.png","Data/Weapons/Claymore/SerpentSpine/index.tsx","Data/Weapons/Claymore/SkyriderGreatsword/Icon.png","Data/Weapons/Claymore/SkyriderGreatsword/AwakenIcon.png","Data/Weapons/Claymore/SkyriderGreatsword/index.tsx","Data/Weapons/Claymore/SkywardPride/Icon.png","Data/Weapons/Claymore/SkywardPride/AwakenIcon.png","Data/Weapons/Claymore/SkywardPride/index.tsx","Data/Weapons/Claymore/SnowTombedStarsilver/Icon.png","Data/Weapons/Claymore/SnowTombedStarsilver/AwakenIcon.png","Data/Weapons/Claymore/SnowTombedStarsilver/index.tsx","Data/Weapons/Claymore/SongOfBrokenPines/Icon.png","Data/Weapons/Claymore/SongOfBrokenPines/AwakenIcon.png","Data/Weapons/Claymore/SongOfBrokenPines/index.tsx","Data/Weapons/Claymore/TheBell/Icon.png","Data/Weapons/Claymore/TheBell/AwakenIcon.png","Data/Weapons/Claymore/TheBell/index.tsx","Data/Weapons/Claymore/TheUnforged/Icon.png","Data/Weapons/Claymore/TheUnforged/AwakenIcon.png","Data/Weapons/Claymore/TheUnforged/index.tsx","Data/Weapons/Claymore/WasterGreatsword/Icon.png","Data/Weapons/Claymore/WasterGreatsword/AwakenIcon.png","Data/Weapons/Claymore/WasterGreatsword/index.tsx","Data/Weapons/Claymore/Whiteblind/Icon.png","Data/Weapons/Claymore/Whiteblind/AwakenIcon.png","Data/Weapons/Claymore/Whiteblind/index.tsx","Data/Weapons/Claymore/WhiteIronGreatsword/Icon.png","Data/Weapons/Claymore/WhiteIronGreatsword/AwakenIcon.png","Data/Weapons/Claymore/WhiteIronGreatsword/index.tsx","Data/Weapons/Claymore/WolfsGravestone/Icon.png","Data/Weapons/Claymore/WolfsGravestone/AwakenIcon.png","Data/Weapons/Claymore/WolfsGravestone/index.tsx","Data/Weapons/Claymore/index.ts","Data/Weapons/Sword/AmenomaKageuchi/Icon.png","Data/Weapons/Sword/AmenomaKageuchi/AwakenIcon.png","Data/Weapons/Sword/AmenomaKageuchi/index.tsx","Data/Weapons/Sword/AquilaFavonia/Icon.png","Data/Weapons/Sword/AquilaFavonia/AwakenIcon.png","Data/Weapons/Sword/AquilaFavonia/index.tsx","Data/Weapons/Sword/BlackcliffLongsword/Icon.png","Data/Weapons/Sword/BlackcliffLongsword/AwakenIcon.png","Data/Weapons/Sword/BlackcliffLongsword/index.tsx","Data/Weapons/Sword/CinnabarSpindle/AwakenIcon.png","Data/Weapons/Sword/CinnabarSpindle/Icon.png","Data/Weapons/Sword/CinnabarSpindle/index.tsx","Data/Weapons/Sword/CoolSteel/Icon.png","Data/Weapons/Sword/CoolSteel/AwakenIcon.png","Data/Weapons/Sword/CoolSteel/index.tsx","Data/Weapons/Sword/DarkIronSword/Icon.png","Data/Weapons/Sword/DarkIronSword/AwakenIcon.png","Data/Weapons/Sword/DarkIronSword/index.tsx","Data/Weapons/Sword/DullBlade/Icon.png","Data/Weapons/Sword/DullBlade/AwakenIcon.png","Data/Weapons/Sword/DullBlade/index.tsx","Data/Weapons/Sword/FavoniusSword/Icon.png","Data/Weapons/Sword/FavoniusSword/AwakenIcon.png","Data/Weapons/Sword/FavoniusSword/index.tsx","Data/Weapons/Sword/FesteringDesire/Icon.png","Data/Weapons/Sword/FesteringDesire/AwakenIcon.png","Data/Weapons/Sword/FesteringDesire/index.tsx","Data/Weapons/Sword/FilletBlade/Icon.png","Data/Weapons/Sword/FilletBlade/AwakenIcon.png","Data/Weapons/Sword/FilletBlade/index.tsx","Data/Weapons/Sword/FreedomSworn/Icon.png","Data/Weapons/Sword/FreedomSworn/AwakenIcon.png","Data/Weapons/Sword/FreedomSworn/index.tsx","Data/Weapons/Sword/HarbingerOfDawn/Icon.png","Data/Weapons/Sword/HarbingerOfDawn/AwakenIcon.png","Data/Weapons/Sword/HarbingerOfDawn/index.tsx","Data/Weapons/Sword/IronSting/Icon.png","Data/Weapons/Sword/IronSting/AwakenIcon.png","Data/Weapons/Sword/IronSting/index.tsx","Data/Weapons/Sword/LionsRoar/Icon.png","Data/Weapons/Sword/LionsRoar/AwakenIcon.png","Data/Weapons/Sword/LionsRoar/index.tsx","Data/Weapons/Sword/MistsplitterReforged/Icon.png","Data/Weapons/Sword/MistsplitterReforged/AwakenIcon.png","Data/Weapons/Sword/MistsplitterReforged/index.tsx","Data/Weapons/Sword/PrimordialJadeCutter/Icon.png","Data/Weapons/Sword/PrimordialJadeCutter/AwakenIcon.png","Data/Weapons/Sword/PrimordialJadeCutter/index.tsx","Data/Weapons/Sword/PrototypeRancour/Icon.png","Data/Weapons/Sword/PrototypeRancour/AwakenIcon.png","Data/Weapons/Sword/PrototypeRancour/index.tsx","Data/Weapons/Sword/RoyalLongsword/Icon.png","Data/Weapons/Sword/RoyalLongsword/AwakenIcon.png","Data/Weapons/Sword/RoyalLongsword/index.tsx","Data/Weapons/Sword/SacrificialSword/Icon.png","Data/Weapons/Sword/SacrificialSword/AwakenIcon.png","Data/Weapons/Sword/SacrificialSword/index.tsx","Data/Weapons/Sword/SilverSword/Icon.png","Data/Weapons/Sword/SilverSword/AwakenIcon.png","Data/Weapons/Sword/SilverSword/index.tsx","Data/Weapons/Sword/SkyriderSword/Icon.png","Data/Weapons/Sword/SkyriderSword/AwakenIcon.png","Data/Weapons/Sword/SkyriderSword/index.tsx","Data/Weapons/Sword/SkywardBlade/Icon.png","Data/Weapons/Sword/SkywardBlade/AwakenIcon.png","Data/Weapons/Sword/SkywardBlade/index.tsx","Data/Weapons/Sword/SummitShaper/Icon.png","Data/Weapons/Sword/SummitShaper/AwakenIcon.png","Data/Weapons/Sword/SummitShaper/index.tsx","Data/Weapons/Sword/SwordOfDescension/Icon.png","Data/Weapons/Sword/SwordOfDescension/AwakenIcon.png","Data/Weapons/Sword/SwordOfDescension/index.tsx","Data/Weapons/Sword/TheAlleyFlash/Icon.png","Data/Weapons/Sword/TheAlleyFlash/AwakenIcon.png","Data/Weapons/Sword/TheAlleyFlash/index.tsx","Data/Weapons/Sword/TheBlackSword/Icon.png","Data/Weapons/Sword/TheBlackSword/AwakenIcon.png","Data/Weapons/Sword/TheBlackSword/index.tsx","Data/Weapons/Sword/TheFlute/Icon.png","Data/Weapons/Sword/TheFlute/AwakenIcon.png","Data/Weapons/Sword/TheFlute/index.tsx","Data/Weapons/Sword/TravelersHandySword/Icon.png","Data/Weapons/Sword/TravelersHandySword/AwakenIcon.png","Data/Weapons/Sword/TravelersHandySword/index.tsx","Data/Weapons/Sword/index.ts","Data/Weapons/Polearm/BeginnersProtector/Icon.png","Data/Weapons/Polearm/BeginnersProtector/AwakenIcon.png","Data/Weapons/Polearm/BeginnersProtector/index.tsx","Data/Weapons/Polearm/BlackcliffPole/Icon.png","Data/Weapons/Polearm/BlackcliffPole/AwakenIcon.png","Data/Weapons/Polearm/BlackcliffPole/index.tsx","Data/Weapons/Polearm/BlackTassel/Icon.png","Data/Weapons/Polearm/BlackTassel/AwakenIcon.png","Data/Weapons/Polearm/BlackTassel/index.tsx","Data/Weapons/Polearm/CrescentPike/Icon.png","Data/Weapons/Polearm/CrescentPike/AwakenIcon.png","Data/Weapons/Polearm/CrescentPike/index.tsx","Data/Weapons/Polearm/Deathmatch/Icon.png","Data/Weapons/Polearm/Deathmatch/AwakenIcon.png","Data/Weapons/Polearm/DragonsBane/Icon.png","Data/Weapons/Polearm/DragonsBane/AwakenIcon.png","Data/Weapons/Polearm/DragonsBane/index.tsx","Data/Weapons/Polearm/DragonspineSpear/Icon.png","Data/Weapons/Polearm/DragonspineSpear/AwakenIcon.png","Data/Weapons/Polearm/DragonspineSpear/index.tsx","Data/Weapons/Polearm/EngulfingLightning/Icon.png","Data/Weapons/Polearm/EngulfingLightning/AwakenIcon.png","Data/Weapons/Polearm/EngulfingLightning/index.tsx","Data/Weapons/Polearm/FavoniusLance/Icon.png","Data/Weapons/Polearm/FavoniusLance/AwakenIcon.png","Data/Weapons/Polearm/FavoniusLance/index.tsx","Data/Weapons/Polearm/Halberd/Icon.png","Data/Weapons/Polearm/Halberd/AwakenIcon.png","Data/Weapons/Polearm/Halberd/index.tsx","Data/Weapons/Polearm/IronPoint/Icon.png","Data/Weapons/Polearm/IronPoint/AwakenIcon.png","Data/Weapons/Polearm/IronPoint/index.tsx","Data/Weapons/Polearm/KitainCrossSpear/Icon.png","Data/Weapons/Polearm/KitainCrossSpear/AwakenIcon.png","Data/Weapons/Polearm/KitainCrossSpear/index.tsx","Data/Weapons/Polearm/LithicSpear/Icon.png","Data/Weapons/Polearm/LithicSpear/AwakenIcon.png","Data/Weapons/Polearm/LithicSpear/index.tsx","Data/Weapons/Polearm/PrimordialJadeWingedSpear/Icon.png","Data/Weapons/Polearm/PrimordialJadeWingedSpear/AwakenIcon.png","Data/Weapons/Polearm/PrimordialJadeWingedSpear/index.tsx","Data/Weapons/Polearm/PrototypeStarglitter/Icon.png","Data/Weapons/Polearm/PrototypeStarglitter/AwakenIcon.png","Data/Weapons/Polearm/PrototypeStarglitter/index.tsx","Data/Weapons/Polearm/RoyalSpear/Icon.png","Data/Weapons/Polearm/RoyalSpear/AwakenIcon.png","Data/Weapons/Polearm/RoyalSpear/index.tsx","Data/Weapons/Polearm/SkywardSpine/Icon.png","Data/Weapons/Polearm/SkywardSpine/AwakenIcon.png","Data/Weapons/Polearm/SkywardSpine/index.tsx","Data/Weapons/Polearm/StaffOfHoma/Icon.png","Data/Weapons/Polearm/StaffOfHoma/AwakenIcon.png","Data/Weapons/Polearm/StaffOfHoma/index.tsx","Data/Weapons/Polearm/TheCatch/Icon.png","Data/Weapons/Polearm/TheCatch/AwakenIcon.png","Data/Weapons/Polearm/TheCatch/index.tsx","Data/Weapons/Polearm/VortexVanquisher/Icon.png","Data/Weapons/Polearm/VortexVanquisher/AwakenIcon.png","Data/Weapons/Polearm/VortexVanquisher/index.tsx","Data/Weapons/Polearm/WavebreakersFin/Icon.png","Data/Weapons/Polearm/WavebreakersFin/AwakenIcon.png","Data/Weapons/Polearm/WavebreakersFin/index.tsx","Data/Weapons/Polearm/WhiteTassel/Icon.png","Data/Weapons/Polearm/WhiteTassel/AwakenIcon.png","Data/Weapons/Polearm/WhiteTassel/index.tsx","Data/Weapons/Polearm/index.ts","Data/Weapons/Bow/AlleyHunter/Icon.png","Data/Weapons/Bow/AlleyHunter/AwakenIcon.png","Data/Weapons/Bow/AlleyHunter/index.tsx","Data/Weapons/Bow/AmosBow/Icon.png","Data/Weapons/Bow/AmosBow/AwakenIcon.png","Data/Weapons/Bow/AmosBow/index.tsx","Data/Weapons/Bow/BlackcliffWarbow/Icon.png","Data/Weapons/Bow/BlackcliffWarbow/AwakenIcon.png","Data/Weapons/Bow/BlackcliffWarbow/index.tsx","Data/Weapons/Bow/CompoundBow/Icon.png","Data/Weapons/Bow/CompoundBow/AwakenIcon.png","Data/Weapons/Bow/CompoundBow/index.tsx","Data/Weapons/Bow/ElegyForTheEnd/Icon.png","Data/Weapons/Bow/ElegyForTheEnd/AwakenIcon.png","Data/Weapons/Bow/ElegyForTheEnd/index.tsx","Data/Weapons/Bow/FavoniusWarbow/Icon.png","Data/Weapons/Bow/FavoniusWarbow/AwakenIcon.png","Data/Weapons/Bow/FavoniusWarbow/index.tsx","Data/Weapons/Bow/Hamayumi/Icon.png","Data/Weapons/Bow/Hamayumi/AwakenIcon.png","Data/Weapons/Bow/Hamayumi/index.tsx","Data/Weapons/Bow/HuntersBow/Icon.png","Data/Weapons/Bow/HuntersBow/AwakenIcon.png","Data/Weapons/Bow/HuntersBow/index.tsx","Data/Weapons/Bow/Messenger/Icon.png","Data/Weapons/Bow/Messenger/AwakenIcon.png","Data/Weapons/Bow/Messenger/index.tsx","Data/Weapons/Bow/MitternachtsWaltz/Icon.png","Data/Weapons/Bow/MitternachtsWaltz/AwakenIcon.png","Data/Weapons/Bow/MitternachtsWaltz/index.tsx","Data/Weapons/Bow/MouunsMoon/Icon.png","Data/Weapons/Bow/MouunsMoon/AwakenIcon.png","Data/Weapons/Bow/MouunsMoon/index.tsx","Data/Weapons/Bow/PolarStar/Icon.png","Data/Weapons/Bow/PolarStar/AwakenIcon.png","Data/Weapons/Bow/PolarStar/index.tsx","Data/Weapons/Bow/Predator/Icon.png","Data/Weapons/Bow/Predator/AwakenIcon.png","Data/Weapons/Bow/Predator/index.tsx","Data/Weapons/Bow/PrototypeCrescent/Icon.png","Data/Weapons/Bow/PrototypeCrescent/AwakenIcon.png","Data/Weapons/Bow/PrototypeCrescent/index.tsx","Data/Weapons/Bow/RavenBow/Icon.png","Data/Weapons/Bow/RavenBow/AwakenIcon.png","Data/Weapons/Bow/RavenBow/index.tsx","Data/Weapons/Bow/RecurveBow/Icon.png","Data/Weapons/Bow/RecurveBow/AwakenIcon.png","Data/Weapons/Bow/RecurveBow/index.tsx","Data/Weapons/Bow/RoyalBow/Icon.png","Data/Weapons/Bow/RoyalBow/AwakenIcon.png","Data/Weapons/Bow/RoyalBow/index.tsx","Data/Weapons/Bow/Rust/Icon.png","Data/Weapons/Bow/Rust/AwakenIcon.png","Data/Weapons/Bow/Rust/index.tsx","Data/Weapons/Bow/SacrificialBow/Icon.png","Data/Weapons/Bow/SacrificialBow/AwakenIcon.png","Data/Weapons/Bow/SacrificialBow/index.tsx","Data/Weapons/Bow/SeasonedHuntersBow/Icon.png","Data/Weapons/Bow/SeasonedHuntersBow/AwakenIcon.png","Data/Weapons/Bow/SeasonedHuntersBow/index.tsx","Data/Weapons/Bow/SharpshootersOath/Icon.png","Data/Weapons/Bow/SharpshootersOath/AwakenIcon.png","Data/Weapons/Bow/SharpshootersOath/index.tsx","Data/Weapons/Bow/SkywardHarp/Icon.png","Data/Weapons/Bow/SkywardHarp/AwakenIcon.png","Data/Weapons/Bow/SkywardHarp/index.tsx","Data/Weapons/Bow/Slingshot/Icon.png","Data/Weapons/Bow/Slingshot/AwakenIcon.png","Data/Weapons/Bow/Slingshot/index.tsx","Data/Weapons/Bow/TheStringless/Icon.png","Data/Weapons/Bow/TheStringless/AwakenIcon.png","Data/Weapons/Bow/TheStringless/index.tsx","Data/Weapons/Bow/TheViridescentHunt/Icon.png","Data/Weapons/Bow/TheViridescentHunt/AwakenIcon.png","Data/Weapons/Bow/TheViridescentHunt/index.tsx","Data/Weapons/Bow/ThunderingPulse/Icon.png","Data/Weapons/Bow/ThunderingPulse/AwakenIcon.png","Data/Weapons/Bow/ThunderingPulse/index.tsx","Data/Weapons/Bow/WindblumeOde/Icon.png","Data/Weapons/Bow/WindblumeOde/AwakenIcon.png","Data/Weapons/Bow/WindblumeOde/index.tsx","Data/Weapons/Bow/index.ts","Data/Weapons/Catalyst/ApprenticesNotes/Icon.png","Data/Weapons/Catalyst/ApprenticesNotes/AwakenIcon.png","Data/Weapons/Catalyst/ApprenticesNotes/index.tsx","Data/Weapons/Catalyst/BlackcliffAgate/Icon.png","Data/Weapons/Catalyst/BlackcliffAgate/AwakenIcon.png","Data/Weapons/Catalyst/BlackcliffAgate/index.tsx","Data/Weapons/Catalyst/DodocoTales/Icon.png","Data/Weapons/Catalyst/DodocoTales/AwakenIcon.png","Data/Weapons/Catalyst/DodocoTales/index.tsx","Data/Weapons/Catalyst/EmeraldOrb/Icon.png","Data/Weapons/Catalyst/EmeraldOrb/AwakenIcon.png","Data/Weapons/Catalyst/EmeraldOrb/index.tsx","Data/Weapons/Catalyst/EverlastingMoonglow/Icon.png","Data/Weapons/Catalyst/EverlastingMoonglow/AwakenIcon.png","Data/Weapons/Catalyst/EverlastingMoonglow/index.tsx","Data/Weapons/Catalyst/EyeOfPerception/Icon.png","Data/Weapons/Catalyst/EyeOfPerception/AwakenIcon.png","Data/Weapons/Catalyst/EyeOfPerception/index.tsx","Data/Weapons/Catalyst/FavoniusCodex/Icon.png","Data/Weapons/Catalyst/FavoniusCodex/AwakenIcon.png","Data/Weapons/Catalyst/FavoniusCodex/index.tsx","Data/Weapons/Catalyst/Frostbearer/Icon.png","Data/Weapons/Catalyst/Frostbearer/AwakenIcon.png","Data/Weapons/Catalyst/Frostbearer/index.tsx","Data/Weapons/Catalyst/HakushinRing/Icon.png","Data/Weapons/Catalyst/HakushinRing/AwakenIcon.png","Data/Weapons/Catalyst/HakushinRing/index.tsx","Data/Weapons/Catalyst/LostPrayerToTheSacredWinds/Icon.png","Data/Weapons/Catalyst/LostPrayerToTheSacredWinds/AwakenIcon.png","Data/Weapons/Catalyst/LostPrayerToTheSacredWinds/index.tsx","Data/Weapons/Catalyst/MagicGuide/Icon.png","Data/Weapons/Catalyst/MagicGuide/AwakenIcon.png","Data/Weapons/Catalyst/MagicGuide/index.tsx","Data/Weapons/Catalyst/MappaMare/Icon.png","Data/Weapons/Catalyst/MappaMare/AwakenIcon.png","Data/Weapons/Catalyst/MappaMare/index.tsx","Data/Weapons/Catalyst/MemoryOfDust/Icon.png","Data/Weapons/Catalyst/MemoryOfDust/AwakenIcon.png","Data/Weapons/Catalyst/MemoryOfDust/index.tsx","Data/Weapons/Catalyst/OtherworldlyStory/Icon.png","Data/Weapons/Catalyst/OtherworldlyStory/AwakenIcon.png","Data/Weapons/Catalyst/OtherworldlyStory/index.tsx","Data/Weapons/Catalyst/PocketGrimoire/Icon.png","Data/Weapons/Catalyst/PocketGrimoire/AwakenIcon.png","Data/Weapons/Catalyst/PocketGrimoire/index.tsx","Data/Weapons/Catalyst/PrototypeAmber/Icon.png","Data/Weapons/Catalyst/PrototypeAmber/AwakenIcon.png","Data/Weapons/Catalyst/PrototypeAmber/index.tsx","Data/Weapons/Catalyst/RoyalGrimoire/Icon.png","Data/Weapons/Catalyst/RoyalGrimoire/AwakenIcon.png","Data/Weapons/Catalyst/RoyalGrimoire/index.tsx","Data/Weapons/Catalyst/SacrificialFragments/Icon.png","Data/Weapons/Catalyst/SacrificialFragments/AwakenIcon.png","Data/Weapons/Catalyst/SacrificialFragments/index.tsx","Data/Weapons/Catalyst/SkywardAtlas/Icon.png","Data/Weapons/Catalyst/SkywardAtlas/AwakenIcon.png","Data/Weapons/Catalyst/SkywardAtlas/index.tsx","Data/Weapons/Catalyst/SolarPearl/Icon.png","Data/Weapons/Catalyst/SolarPearl/AwakenIcon.png","Data/Weapons/Catalyst/SolarPearl/index.tsx","Data/Weapons/Catalyst/TheWidsith/Icon.png","Data/Weapons/Catalyst/TheWidsith/AwakenIcon.png","Data/Weapons/Catalyst/TheWidsith/index.tsx","Data/Weapons/Catalyst/ThrillingTalesOfDragonSlayers/Icon.png","Data/Weapons/Catalyst/ThrillingTalesOfDragonSlayers/AwakenIcon.png","Data/Weapons/Catalyst/ThrillingTalesOfDragonSlayers/index.tsx","Data/Weapons/Catalyst/TwinNephrite/Icon.png","Data/Weapons/Catalyst/TwinNephrite/AwakenIcon.png","Data/Weapons/Catalyst/TwinNephrite/index.tsx","Data/Weapons/Catalyst/WineAndSong/Icon.png","Data/Weapons/Catalyst/WineAndSong/AwakenIcon.png","Data/Weapons/Catalyst/WineAndSong/index.tsx","Data/Weapons/Catalyst/index.ts","Data/Weapons/index.ts","Util/FormulaUtil.ts","Util/DocumentUtil.ts","Data/Weapons/Sword/AquilaFavonia/data.ts","Data/Weapons/Sword/CinnabarSpindle/data.ts","Data/Weapons/Sword/FilletBlade/data.ts","Data/Weapons/Sword/PrimordialJadeCutter/data.ts","Data/Weapons/Sword/SkywardBlade/data.ts","Data/Weapons/Sword/SwordOfDescension/data.ts","Data/Weapons/Sword/TheBlackSword/data.ts","Data/Weapons/Sword/TheFlute/data.ts","Data/Weapons/Sword/TravelersHandySword/data.ts","Data/Weapons/Polearm/CrescentPike/data.ts","Data/Weapons/Polearm/DragonspineSpear/data.ts","Data/Weapons/Polearm/EngulfingLightning/data.ts","Data/Weapons/Polearm/Halberd/data.ts","Data/Weapons/Polearm/SkywardSpine/data.ts","Data/Weapons/Polearm/StaffOfHoma/data.ts","Data/Weapons/Claymore/DebateClub/data.ts","Data/Weapons/Claymore/LuxuriousSeaLord/data.ts","Data/Weapons/Claymore/PrototypeArchaic/data.ts","Data/Weapons/Claymore/RedhornStonethresher/data.ts","Data/Weapons/Claymore/SkywardPride/data.ts","Data/Weapons/Claymore/SnowTombedStarsilver/data.ts","Data/Weapons/Claymore/TheBell/data.ts","Data/Weapons/Claymore/WhiteIronGreatsword/data.ts","Data/Weapons/Catalyst/EverlastingMoonglow/data.ts","Data/Weapons/Catalyst/EyeOfPerception/data.ts","Data/Weapons/Catalyst/Frostbearer/data.ts","Data/Weapons/Catalyst/OtherworldlyStory/data.ts","Data/Weapons/Catalyst/PrototypeAmber/data.ts","Data/Weapons/Catalyst/SkywardAtlas/data.ts","Data/Weapons/Bow/Messenger/data.ts","Data/Weapons/Bow/RecurveBow/data.ts","Data/Weapons/Bow/SkywardHarp/data.ts","Data/Weapons/Bow/TheViridescentHunt/data.ts"],"names":["strKey","energyRange","range","map","i","ratio","max","weapon","data_gen","icon","iconAwaken","document","conditional","key","name","Translate","ns","key18","states","Object","fromEntries","c","stats","burst_dmg_","Math","min","refineIndex","atk_s","maxStack","atk_","dmg_s","dmg_","fields","text","st","formulaText","data","dmg","Stat","printStat","getTalentStatKey","formula","variant","getTalentStatKeyVariant","charged_dmg_","skill_dmg_s","skill_dmg_","crit_s","critRate_","burst_","def_","defConv","normal","characterEle","charged","color","cdRed_","takeDMG_s","value","conditionalValues","SerpentSpine","w","num","unit","dmgc","tr","atkSPD_","condAtk_","partyBuff","header","title","ImgIcon","size","sx","m","src","ascension","description","sgt","shield","shield_","wo","atk_def_s","heal","atk_partys","claymore","Akuoumaru","BlackcliffSlasher","BloodtaintedGreatsword","DebateClub","FavoniusGreatsword","FerrousShadow","KatsuragikiriNagamasa","LithicBlade","LuxuriousSeaLord","OldMercsPal","PrototypeArchaic","Rainslasher","RedhornStonethresher","RoyalGreatsword","SacrificialGreatsword","SkyriderGreatsword","SkywardPride","SnowTombedStarsilver","SongOfBrokenPines","TheBell","TheUnforged","WasterGreatsword","Whiteblind","WhiteIronGreatsword","WolfsGravestone","refinementVals","skill","refinementVals2","skill_critRate_","cds","auto","normal_dmg_","plunging_dmg_","ele_dmg_s","ele_dmg_ss","allElements","ele","stacks","values","count","path","KeyPath","PrimordialJadeCutter","refinementVals_hp","hp_","modifiers","atk","bonus","hp_atk","moveSPD_","refinementMoveSpdVals","refinementatkSpdVals","refinementAtkVals","characterKey","startsWith","regen","vals","sword","AmenomaKageuchi","AquilaFavonia","BlackcliffLongsword","CinnabarSpindle","CoolSteel","DarkIronSword","DullBlade","FavoniusSword","FesteringDesire","FilletBlade","FreedomSworn","HarbingerOfDawn","IronSting","LionsRoar","MistsplitterReforged","PrototypeRancour","RoyalLongsword","SacrificialSword","SilverSword","SkyriderSword","SkywardBlade","SummitShaper","SwordOfDescension","TheAlleyFlash","TheBlackSword","TheFlute","TravelersHandySword","refinementSoloVals","o2","o1","enerRech","EngulfingLightning","conv","enerRechConv","enerRechMax","fixed","enerRech_","refinementCritVals","refinementDmgVals","l7","a7","crit_","StaffOfHoma","esj","esjadd","hp_atk_add","burstCR_","burst_critRate_","polearm","BeginnersProtector","BlackcliffPole","BlackTassel","CrescentPike","Deathmatch","DragonsBane","DragonspineSpear","FavoniusLance","Halberd","IronPoint","KitainCrossSpear","LithicSpear","PrimordialJadeWingedSpear","PrototypeStarglitter","RoyalSpear","SkywardSpine","TheCatch","VortexVanquisher","WavebreakersFin","WhiteTassel","refinementSpdVals","refinementEM","eleMass","eleMas","normal_dmg_s","charged_dmg_s","skill_","normal_","ele_dmg","ashen","weakspotDMG_","critd_s","critDMG_","bow","AlleyHunter","AmosBow","BlackcliffWarbow","CompoundBow","ElegyForTheEnd","FavoniusWarbow","Hamayumi","HuntersBow","Messenger","MitternachtsWaltz","MouunsMoon","PolarStar","Predator","PrototypeCrescent","RavenBow","RecurveBow","RoyalBow","Rust","SacrificialBow","SeasonedHuntersBow","SharpshootersOath","SkywardHarp","Slingshot","TheStringless","TheViridescentHunt","ThunderingPulse","WindblumeOde","cdmg_","heal_","hp_conv","norm","an","anemo_dmg_","electro_dmg_","ge","geo_dmg_","py","pyro_dmg_","hy","hydro_dmg_","cr","cryo_dmg_","n","s","b","refinementEleDmgVals","refinementEleMasVals","r","a","canShow","activeCharacter","catalyst","ApprenticesNotes","BlackcliffAgate","DodocoTales","EmeraldOrb","EverlastingMoonglow","EyeOfPerception","FavoniusCodex","Frostbearer","HakushinRing","LostPrayerToTheSacredWinds","MagicGuide","MappaMare","MemoryOfDust","OtherworldlyStory","PocketGrimoire","PrototypeAmber","RoyalGrimoire","SacrificialFragments","SkywardAtlas","SolarPearl","TheWidsith","ThrillingTalesOfDragonSlayers","TwinNephrite","WineAndSong","WeaponData","forEach","documentSectionsProcessing","basicDMGFormula","percent","skillKey","elemental","val","statKey","basicHealingFormula","scaleStatKey","flat","heal_multi","sections","section","fieldProcessing","hp","finalATK","finalDEF","modStats","finalHP","premod","hpMulti"],"mappings":"0IAMYA,E,gBCNG,MAA0B,iCCA1B,MAA0B,uC,uBCOnCC,EAAcC,YAAM,EAAG,IAAIC,KAAI,SAAAC,GAAC,OAAQ,GAAJA,KACpCC,EAAQ,CAAC,IAAM,IAAM,IAAM,IAAM,KACjCC,EAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IACvBC,EAAoB,2BACrBC,GADqB,IAExBC,OACAC,aACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,mBAAmBC,MAAM,UAC7CC,OAAQC,OAAOC,YAAYnB,EAAYE,KAAI,SAAAkB,GAAC,MAAI,CAACA,EAAG,CAClDP,KAAK,GAAD,OAAKO,GACTC,MAAO,SAAAA,GAAK,MAAK,CACfC,WAAYC,KAAKC,IAAInB,EAAIgB,EAAMf,OAAOmB,aAAcrB,EAAMiB,EAAMf,OAAOmB,aAAeL,gBAMjFd,I,SC3BA,MAA0B,iCCA1B,MAA0B,uCCKnCoB,EAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBpB,EAAoB,2BACrBC,GADqB,IAExBC,OACAC,aACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,qBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMF,EAAML,EAAMf,OAAOmB,oBAKlBnB,I,SCrBA,MAA0B,iCCA1B,MAA0B,uCCKnCuB,EAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBvB,EAAoB,2BACrBC,GADqB,IAExBC,OACAC,aACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,MACLC,KAAM,6CACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfS,KAAMD,EAAMR,EAAMf,OAAOmB,oBAKlBnB,I,kCCrBA,MAA0B,iCCA1B,MAA0B,uC,SCSnCA,EAAoB,2BACrBC,GADqB,IAExBC,OACAC,aACAC,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAMC,YAAG,OACTC,YAAa,SAAAb,GAAK,OAAI,iCAAOc,IAAKC,IAAIf,EAAMf,OAAOmB,aAA7B,KAA6CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACvHmB,QAASA,IAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,UAI7Cf,I,SCtBA,MAA0B,iCCA1B,MAA0B,uCCQnCA,EAAoB,2BACrBC,GADqB,IAExBC,OACAC,aACAC,SAAU,KAEGJ,I,SCdA,MAA0B,iCCA1B,MAA0B,uCCKnCuB,EAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBvB,EAAoB,2BACrBC,GADqB,IAExBC,OACAC,aACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,SACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfsB,aAAcd,EAAMR,EAAMf,OAAOmB,oBAK1BnB,ICrBA,MAA0B,iCCA1B,MAA0B,uC,SCMnCsC,EAAc,CAAC,EAAG,IAAK,EAAG,KAAM,IAChCtC,EAAoB,2BACrBC,GADqB,IAExBC,OACAC,aACAY,MAAO,SAAAA,GAAK,MAAK,CACfwB,WAAYD,EAAYvB,EAAMf,OAAOmB,eAEvCf,SAAU,KAEGJ,I,UChBA,OAA0B,iCCA1B,OAA0B,uCCKnCwC,GAAS,CAAC,EAAG,EAAG,EAAG,EAAG,GACtBpB,GAAQ,CAAC,EAAG,EAAG,EAAG,GAAI,IACtBpB,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,MACLC,KAAM,gBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMF,GAAML,EAAMf,OAAOmB,aACzBsB,UAAWD,GAAOzB,EAAMf,OAAOmB,oBAKxBnB,M,oBCvBA,OAA0B,iCCA1B,OAA0B,uCCUnC0C,GAAS,CAAC,GAAI,GAAI,GAAI,GAAI,IAC1B1C,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACfC,WAAY0B,GAAO3B,EAAMf,OAAOmB,eAElCf,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAMC,YAAG,OACTC,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKC,IAAIf,EAAMf,OAAOmB,aAA7B,KAA6CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACvHmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,UAI7Cf,MC3BA,OAA0B,iCCA1B,OAA0B,uC,UCMnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,KAEGJ,M,oBCZA,OAA0B,iCCA1B,OAA0B,uCCSnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAMC,YAAG,OACTC,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKC,IAAIf,EAAMf,OAAOmB,aAA7B,KAA6CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACvHmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,UAI7Cf,M,UCtBA,OAA0B,iCCA1B,OAA0B,uCCKnCuB,GAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBvB,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,MACLC,KAAM,8CACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfS,KAAMD,GAAMR,EAAMf,OAAOmB,oBAKlBnB,M,SCrBA,OAA0B,uC,oBCA1B,OAA0B,iCCUnC2C,GAAO,CAAC,GAAI,GAAI,GAAI,GAAI,IACxB3C,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACf4B,KAAMA,GAAK5B,EAAMf,OAAOmB,eAE1Bf,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,kCAAkCC,MAAM,gBAC5De,OAAQ,CAAC,CACPC,KAAM,cAAClB,EAAA,EAAD,CAAWC,GAAG,8BAA8BC,MAAM,eACxDkB,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKe,QAAQ7B,EAAMf,OAAOmB,aAAjC,KAAiDY,IAAKC,UAAU,WAAYjB,GAAO,GAAnF,MAA6FgB,IAAKC,UAAUC,YAAiB,SAAUlB,GAAS,SAAUA,OAChLmB,QAASA,KAAQW,OACjBV,QAAS,SAAApB,GAAK,OAAIA,EAAM+B,eACvB,CACDpB,KAAM,cAAClB,EAAA,EAAD,CAAWC,GAAG,8BAA8BC,MAAM,gBACxDkB,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKe,QAAQ7B,EAAMf,OAAOmB,aAAjC,KAAiDY,IAAKC,UAAU,WAAYjB,GAAO,GAAnF,MAA6FgB,IAAKC,UAAUC,YAAiB,UAAWlB,GAAS,SAAUA,OACjLmB,QAASA,KAAQa,QACjBZ,QAAS,SAAApB,GAAK,OAAIA,EAAM+B,eACvB,CACDpB,KAAM,cAAC,KAAD,CAAWsB,MAAM,UAAjB,+KAKChD,M,UCtCA,OAA0B,iCCA1B,OAA0B,uCCKnCwC,GAAS,CAAC,EAAG,GAAI,GAAI,GAAI,IACzBxC,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,oBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACf0B,UAAWD,GAAOzB,EAAMf,OAAOmB,oBAKxBnB,M,UCrBA,OAA0B,iCCA1B,OAA0B,uCCKnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,wBACNc,SAAU,EACVN,MAAO,iBAAO,CACZkC,OAAQ,WAKDjD,M,kBCpBA,OAA0B,iCCA1B,OAA0B,uCCKnCuB,GAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,IACrB2B,GAAY,CAAC,EAAG,IAAK,IAAK,IAAK,GAC/BlD,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,iCACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfS,KAAMD,GAAMR,EAAMf,OAAOmB,eAE3BM,OAAQ,CAAC,CACPC,KAAM,gBACNyB,MAAO,SAAApC,GAAU,IAAD,8BACCA,EAAMqC,yBADP,iBACC,EAAyBpD,cAD1B,iBACC,EAAiCqD,oBADlC,aACC,EAA+CC,SADhD,QACqD,CAAC,GAA7DC,EADO,qBAEd,OAAOL,GAAUnC,EAAMf,OAAOmB,aAAeoC,GAE/CC,KAAM,WAKCxD,M,UC9BA,OAA0B,iCCA1B,OAA0B,uCCKnCoB,GAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,IACrBpB,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,6BACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMF,GAAML,EAAMf,OAAOmB,oBAKlBnB,M,oBCrBA,OAA0B,iCCA1B,OAA0B,uCCSnCuB,GAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,IACxBvB,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACfS,KAAMD,GAAMR,EAAMf,OAAOmB,eAE3Bf,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAMC,YAAG,OACTC,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKC,IAAIf,EAAMf,OAAOmB,aAA7B,KAA6CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACvHmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,UAI7Cf,M,oBC1BA,OAA0B,iCCA1B,OAA0B,uCCUnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAMC,YAAG,OACTC,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKC,IAAIf,EAAMf,OAAOmB,aAA7B,KAA6CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACvHmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,KACrD,CACDW,KAAM,6BACNE,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAK4B,KAAK1C,EAAMf,OAAOmB,aAA9B,KAA8CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACxHmB,QAASA,KAAQuB,KACjBtB,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,UAI7Cf,M,UC5BA,OAA0B,iCCA1B,OAA0B,uC,SCQnC0D,GAAK,SAACjE,GAAD,OAAoB,cAACe,EAAA,EAAD,CAAWC,GAAG,+BAA+BC,MAAOjB,KAC7E6B,GAAO,CAAC,GAAI,GAAI,GAAI,GAAI,IACxBqC,GAAU,CAAC,GAAI,GAAI,GAAI,GAAI,IAC3BC,GAAW,CAAC,GAAI,GAAI,GAAI,GAAI,IAC5B5D,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMA,GAAKP,EAAMf,OAAOmB,eAE1Bf,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLuD,UAAW,WACXC,OAAQ,CACNC,MAAOL,GAAG,eACVxD,KAAM,SAAAa,GAAK,OAAI,cAACiD,GAAA,EAAD,CAASC,KAAM,EAAGC,GAAI,CAAEC,GAAI,GAAKC,IAAKrD,EAAMsD,UAAY,EAAInE,GAAOC,OAEpFmE,YAAa,SAAAvD,GAAK,OAAI2C,GAAG,sBAAD,OAAuB3C,EAAMf,OAAOmB,eAC5DZ,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,2BAA2BC,MAAM,SACrDK,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMsC,GAAS7C,EAAMf,OAAOmB,aAC5BwC,QAASA,GAAQ5C,EAAMf,OAAOmB,eAEhCM,OAAQ,CAAC,CACPC,KAAM6C,YAAI,YACVpB,MAAO,GACPK,KAAM,WAKCxD,M,oBCzCA,OAA0B,iCCA1B,OAA0B,uCCOnCuB,GAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBvB,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAM,oBACNE,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAK2C,OAAOzD,EAAMf,OAAOmB,aAAhC,KAAgDY,IAAKC,UAAU,UAAWjB,GAA1E,cAA6FgB,IAAKC,UAAU,UAAWjB,GAAvH,QACtBmB,QAASA,KAAQsC,SAEnBnE,YAAa,CACXC,IAAK,KACLC,KAAM,aACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfS,KAAMD,GAAMR,EAAMf,OAAOmB,oBAKlBnB,M,UC5BA,OAA0B,iCCA1B,OAA0B,uCCKnCyE,GAAU,CAAC,GAAI,GAAI,GAAI,GAAI,IAC3BrD,GAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,GACrBpB,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACf0D,QAASA,GAAQ1D,EAAMf,OAAOmB,eAEhCf,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,OACNI,OAAQ,CACN+D,GAAI,CACFnE,KAAM,iBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMF,GAAML,EAAMf,OAAOmB,gBAG7BmC,EAAG,CACD/C,KAAM,cACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAM,EAAIF,GAAML,EAAMf,OAAOmB,sBAO1BnB,MCrCA,OAA0B,iCCA1B,OAA0B,uC,UCMnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,KAEGJ,M,UCZA,OAA0B,iCCA1B,OAA0B,uCCKnC2E,GAAY,CAAC,EAAG,IAAK,EAAG,KAAM,IAC9B3E,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,6BACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMqD,GAAU5D,EAAMf,OAAOmB,aAC7BwB,KAAMgC,GAAU5D,EAAMf,OAAOmB,eAE/BM,OAAQ,CAAC,CACPC,KAAM,WACNyB,MAAO,YAKAnD,M,oBC1BA,OAA0B,iCCA1B,OAA0B,uCCSnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAM6C,YAAI,WACV3C,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAK+C,KAAK7D,EAAMf,OAAOmB,aAA9B,KAA8CY,IAAKC,UAAU,UAAWjB,GAAxE,MAAmFgB,IAAKC,UAAU,aAAcjB,OACtImB,QAASA,KAAQ0C,KACjBzC,QAAS,gBAIAnC,M,UCtBA,OAA0B,iCCA1B,OAA0B,uCCOnC0D,GAAK,SAACjE,GAAD,OAAoB,cAACe,EAAA,EAAD,CAAWC,GAAG,6BAA6BC,MAAOjB,KAC3E2B,GAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzByD,GAAa,CAAC,GAAI,GAAI,GAAI,GAAI,IAC9B7E,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMF,GAAML,EAAMf,OAAOmB,eAE3Bf,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLuD,UAAW,WACXC,OAAQ,CACNC,MAAOL,GAAG,eACVxD,KAAM,SAAAa,GAAK,OAAI,cAACiD,GAAA,EAAD,CAASC,KAAM,EAAGC,GAAI,CAAEC,GAAI,GAAKC,IAAKrD,EAAMsD,UAAY,EAAInE,GAAOC,OAEpFmE,YAAa,SAAAvD,GAAK,OAAI2C,GAAG,sBAAD,OAAuB3C,EAAMf,OAAOmB,eAC5DZ,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,yBAAyBC,MAAM,aACnDK,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMuD,GAAW9D,EAAMf,OAAOmB,oBAKvBnB,MCPT8E,GAAW,CACfC,YACAC,oBACAC,yBACAC,aACAC,qBACAC,gBACAC,wBACAC,eACAC,oBACAC,eACAC,oBACAC,eACAC,wBACAC,mBACAC,yBACAxC,gBACAyC,sBACAC,gBACAC,wBACAC,qBACAC,WACAC,eACAC,oBACAC,cACAC,uBACAC,oBAEazB,MCtDA,OAA0B,iCCA1B,OAA0B,uC,UCMnC9E,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,KAEGJ,M,oBCZA,OAA0B,iCCA1B,OAA0B,uCCSnCsB,GAAO,CAAC,GAAI,GAAI,GAAI,GAAI,IACxBtB,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMA,GAAKP,EAAMf,OAAOmB,eAE1Bf,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAM6C,YAAI,WACV3C,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAK+C,KAAK7D,EAAMf,OAAOmB,aAA9B,KAA8CY,IAAKC,UAAU,WAAYjB,GAAzE,MAAoFgB,IAAKC,UAAU,aAAcjB,OACvImB,QAASA,KAAQ0C,KACjBzC,QAAS,WACR,CACDT,KAAMC,YAAG,OACTC,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKC,IAAIf,EAAMf,OAAOmB,aAA7B,KAA6CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACvHmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,UAI7Cf,M,UC/BA,OAA0B,iCCA1B,OAA0B,uCCKnCwG,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAClCxG,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,qBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMkF,GAAezF,EAAMf,OAAOmB,oBAK3BnB,MCrBA,OAA0B,uC,oBCA1B,OAA0B,iCCWnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,6BAA6BC,MAAM,gBACvDe,OAAQ,CAAC,CACPC,KAAM,cAAClB,EAAA,EAAD,CAAWC,GAAG,yBAAyBC,MAAM,SACnDkB,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKe,QAAQ7B,EAAMf,OAAOmB,aAAjC,KAAiDY,IAAKC,UAAU,WAAYjB,GAAO,GAAnF,MAA6FgB,IAAKC,UAAUC,YAAiB,QAASlB,GAAS,SAAUA,OAC/KmB,QAASA,KAAQuE,MACjBtE,QAAS,SAAApB,GAAK,OAAIA,EAAM+B,eACvB,CACDpB,KAAM,cAAC,KAAD,CAAWsB,MAAM,UAAjB,4KAKChD,M,UC9BA,OAA0B,iCCA1B,OAA0B,uCCKnCwG,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAClCxG,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,MACLC,KAAM,2CACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfS,KAAMgF,GAAezF,EAAMf,OAAOmB,oBAK3BnB,M,UCrBA,OAA0B,iCCA1B,OAA0B,uCCKnCwG,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAClCxG,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,kCACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfS,KAAMgF,GAAezF,EAAMf,OAAOmB,oBAK3BnB,MCrBA,OAA0B,iCCA1B,OAA0B,uC,UCMnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,KAEGJ,M,UCZA,OAA0B,iCCA1B,OAA0B,uCCMnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,KAEGJ,M,UCZA,OAA0B,iCCA1B,OAA0B,uCCMnCwG,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAClCE,GAAkB,CAAC,EAAG,IAAK,EAAG,KAAM,IACpC1G,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACfwB,WAAYiE,GAAezF,EAAMf,OAAOmB,aACxCwF,gBAAiBD,GAAgB3F,EAAMf,OAAOmB,eAEhDf,SAAU,KAEGJ,M,oBClBA,OAA0B,iCCA1B,OAA0B,uCCSnC4G,GAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IACvB5G,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAMC,YAAG,OACTC,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKC,IAAIf,EAAMf,OAAOmB,aAA7B,KAA6CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACvHmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,KACrD,CACDW,KAAM,KACNyB,MAAO,SAAApC,GAAK,gBAAO6F,GAAI7F,EAAMf,OAAOmB,aAAxB,YAIHnB,M,UC1BA,OAA0B,iCCA1B,OAA0B,uCCQnC0D,GAAK,SAACjE,GAAD,OAAoB,cAACe,EAAA,EAAD,CAAWC,GAAG,0BAA0BC,MAAOjB,KACxE+B,GAAO,CAAC,GAAI,KAAM,GAAI,KAAM,IAC5BqF,GAAO,CAAC,GAAI,GAAI,GAAI,GAAI,IACxBvF,GAAO,CAAC,GAAI,GAAI,GAAI,GAAI,IACxBtB,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACfS,KAAMA,GAAKT,EAAMf,OAAOmB,eAE1Bf,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLuD,UAAW,WACXC,OAAQ,CACNC,MAAOL,GAAG,eACVxD,KAAM,SAAAa,GAAK,OAAI,cAACiD,GAAA,EAAD,CAASC,KAAM,EAAGC,GAAI,CAAEC,GAAI,GAAKC,IAAKrD,EAAMsD,UAAY,EAAInE,GAAOC,OAEpFmE,YAAa,SAAAvD,GAAK,OAAI2C,GAAG,sBAAD,OAAuB3C,EAAMf,OAAOmB,eAC5DZ,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,sBAAsBC,MAAM,SAChDK,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMA,GAAKP,EAAMf,OAAOmB,aACxB2F,YAAaD,GAAK9F,EAAMf,OAAOmB,aAC/BkB,aAAcwE,GAAK9F,EAAMf,OAAOmB,aAChC4F,cAAeF,GAAK9F,EAAMf,OAAOmB,eAEnCM,OAAQ,CAAC,CACPC,KAAM6C,YAAI,YACVpB,MAAO,GACPK,KAAM,WAKCxD,M,UC3CA,OAA0B,iCCA1B,OAA0B,uCCKnCwG,GAAiB,CAAC,GAAI,KAAM,GAAI,KAAM,IACtCxG,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,WACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACf0B,UAAW+D,GAAezF,EAAMf,OAAOmB,oBAKhCnB,M,UCrBA,OAA0B,iCCA1B,OAA0B,uCCKnCwG,GAAiB,CAAC,EAAG,IAAK,EAAG,KAAM,IACnCxG,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,iBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfS,KAAMgF,GAAezF,EAAMf,OAAOmB,oBAK3BnB,M,UCrBA,OAA0B,iCCA1B,OAA0B,uCCKnCwG,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAClCxG,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,MACLC,KAAM,6CACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfS,KAAMgF,GAAezF,EAAMf,OAAOmB,oBAK3BnB,M,QCrBA,OAA0B,iCCA1B,OAA0B,uC,mBCQnCgH,GAAY,CAAC,GAAI,GAAI,GAAI,GAAI,IAC7BC,GAAa,CACjB,CAAC,EAAG,GAAI,IACR,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,KAGLjH,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,OAAIH,OAAOC,YAAYqG,KAAYtH,KAAI,SAAAuH,GAAG,MAAI,CAAC,GAAD,OAAIA,EAAJ,SAAgBH,GAAUjG,EAAMf,OAAOmB,mBACjGf,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,8BAA8BC,MAAM,WACxDC,OAAQC,OAAOC,YAAY,CAAC,EAAG,EAAG,GAAGjB,KAAI,SAAAwH,GAAM,MAAI,CAACA,EAAQ,CAC1D7G,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,QAAQC,MAAM,QAAQ2G,OAAQ,CAAEC,MAAOF,KAC3DrG,MAAO,SAAAA,GAAK,iCACNA,EAAM+B,aADA,SACsBmE,GAAWlG,EAAMf,OAAOmB,aAAaiG,EAAS,gBAMzEpH,M,oBCnCA,OAA0B,iCCA1B,OAA0B,uC,UCWnCuH,GAAOC,eAA2BxH,OAAOyH,qBACzCC,GAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,IACrC1H,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACf4G,IAAKD,GAAkB3G,EAAMf,OAAOmB,aACpCyG,UAAW,CAAEC,IAAK,CAACN,GAAKO,YAE1B1H,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAMC,YAAG,gBACTC,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKkG,OAAOhH,EAAMf,OAAOmB,aAAhC,KAAgDY,IAAKC,UAAU,UAAWjB,GAAO,OACvGmB,QAASA,KAAQ4F,YAIR9H,M,UC7BA,OAA0B,iCCA1B,OAA0B,uCCKnCwG,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC9BxG,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,6BACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMkF,GAAezF,EAAMf,OAAOmB,aAClCwB,KAAM6D,GAAezF,EAAMf,OAAOmB,eAEpCM,OAAQ,CAAC,CACPC,KAAM,WACNyB,MAAO,YAKAnD,M,UC1BA,OAA0B,iCCA1B,OAA0B,uCCKnCwG,GAAiB,CAAC,EAAG,GAAI,GAAI,GAAI,IACjCxG,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,oBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACf0B,UAAW+D,GAAezF,EAAMf,OAAOmB,oBAKhCnB,M,UCrBA,OAA0B,iCCA1B,OAA0B,uCCKnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,4BACNc,SAAU,EACVN,MAAO,iBAAO,CACZkC,OAAQ,WAKDjD,MCpBA,OAA0B,iCCA1B,OAA0B,uC,UCMnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,KAEGJ,M,UCZA,OAA0B,iCCA1B,OAA0B,uCCKnCwG,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAClCxG,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,wBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMkF,GAAezF,EAAMf,OAAOmB,aAClC6G,SAAUxB,GAAezF,EAAMf,OAAOmB,oBAK/BnB,M,oBCtBA,OAA0B,iCCA1B,OAA0B,uCCSnCwG,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC9ByB,GAAwB,CAAC,GAAI,GAAI,GAAI,GAAI,IACzCC,GAAuB,CAAC,GAAI,GAAI,GAAI,GAAI,IACxClI,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACf0B,UAAW+D,GAAezF,EAAMf,OAAOmB,eAEzCf,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,MACLC,KAAM,wBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfiH,SAAUC,GAAsBlH,EAAMf,OAAOmB,aAC7CwC,QAASuE,GAAqBnH,EAAMf,OAAOmB,eAE7CM,OAAQ,CAAC,CACPC,KAAMC,YAAG,OACTC,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKC,IAAIf,EAAMf,OAAOmB,aAA7B,KAA6CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACvHmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,WAK/Cf,M,UCrCA,OAA0B,iCCA1B,OAA0B,uCCKnCwG,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAClC2B,GAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,GACjCnI,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACf0D,QAAS+B,GAAezF,EAAMf,OAAOmB,eAEvCf,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,OACNI,OAAQ,CACN+D,GAAI,CACFnE,KAAM,iBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAM6G,GAAkBpH,EAAMf,OAAOmB,gBAGzCmC,EAAG,CACD/C,KAAM,cACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAM,EAAI6G,GAAkBpH,EAAMf,OAAOmB,sBAOtCnB,M,oBCrCA,OAA0B,iCCA1B,OAA0B,uCCSnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,aAAI,UAAAA,EAAMqH,oBAAN,eAAoBC,WAAW,aAAc,CAC3DR,IAAK,IACH,IACJzH,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAMC,YAAG,OACTC,YAAa,SAAAb,GAAK,OAAI,yCAAYgB,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACtFmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,UAI7Cf,M,UCzBA,OAA0B,iCCA1B,OAA0B,uCCKnCwG,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAClCxG,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,iBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfS,KAAMgF,GAAezF,EAAMf,OAAOmB,oBAK3BnB,MCrBA,OAA0B,iCCA1B,OAA0B,uC,oBCQnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACf+F,YAAajF,KAAKL,KAAKT,EAAMf,OAAOmB,aACpCkB,aAAcR,KAAKL,KAAKT,EAAMf,OAAOmB,eAEvCf,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAM6C,YAAI,WACV3C,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAK+C,KAAK7D,EAAMf,OAAOmB,aAA9B,KAA8CY,IAAKC,UAAU,UAAWjB,GAAxE,MAAmFgB,IAAKC,UAAU,aAAcjB,OACtImB,QAASA,KAAQoG,MACjBnG,QAAS,gBAIAnC,MCzBA,OAA0B,iCCA1B,OAA0B,uC,oBCSnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAMC,YAAG,OACTC,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAK0G,KAAKxH,EAAMf,OAAOmB,aAA9B,KAA8CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACxHmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,UAI7Cf,MCtBA,OAA0B,iCCA1B,OAA0B,uC,oBCQnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAM6C,YAAI,WACV3C,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAK+C,KAAK7D,EAAMf,OAAOmB,aAA9B,KAA8CY,IAAKC,UAAU,UAAWjB,GAAxE,MAAmFgB,IAAKC,UAAU,aAAcjB,OACtImB,QAASA,KAAQ0C,KACjBzC,QAAS,gBAIAnC,MCOTwI,GAAQ,CACZC,mBACAC,iBACAC,uBACAC,mBACAC,aACAC,iBACAC,aACAC,iBACAC,mBACAC,eACAC,gBACAC,mBACAC,aACAC,aACAC,wBACA9B,wBACA+B,oBACAC,kBACAC,oBACAC,eACAC,iBACAC,gBACAC,gBACAC,qBACAC,iBACAC,iBACAC,YACAC,wBAEa3B,MC1DA,OAA0B,iCCA1B,OAA0B,uC,UCMnCxI,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,KAEGJ,M,UCZA,OAA0B,iCCA1B,OAA0B,uCCKnCwG,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAClCxG,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,qBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMkF,GAAezF,EAAMf,OAAOmB,oBAK3BnB,M,UCrBA,OAA0B,iCCA1B,OAA0B,uCCKnCuB,GAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBvB,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,iBACNQ,MAAO,SAAAA,GAAK,MAAK,CACfS,KAAMD,GAAMR,EAAMf,OAAOmB,oBAKlBnB,MCpBA,OAA0B,iCCA1B,OAA0B,uC,oBCSnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAMC,YAAG,OACTC,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKC,IAAIf,EAAMf,OAAOmB,aAA7B,KAA6CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACvHmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,UAI7Cf,M,UCtBA,OAA0B,iCCA1B,OAA0B,uClLOnCwG,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAClC4D,GAAqB,CAAC,GAAI,GAAI,GAAI,GAAI,IACtCpK,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,MAVMd,EAUG,cAVgB,cAACe,EAAA,EAAD,CAAWC,GAAG,wBAAwBC,MAAOjB,KAWtEkB,OAAQ,CACN0J,GAAI,CACF9J,KAAM,uBACNQ,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMkF,GAAezF,EAAMf,OAAOmB,aAClCwB,KAAM6D,GAAezF,EAAMf,OAAOmB,gBAGtCmJ,GAAI,CACF/J,KAAM,wBACNQ,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAM8I,GAAmBrJ,EAAMf,OAAOmB,sBAOnCnB,M,UmLnCA,OAA0B,iCCA1B,OAA0B,uCCKnCuB,GAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBvB,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,MACLC,KAAM,2CACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfS,KAAMD,GAAMR,EAAMf,OAAOmB,oBAKlBnB,M,oBCrBA,OAA0B,iCCA1B,OAA0B,uCCUnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAMC,YAAG,OACTC,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKC,IAAIf,EAAMf,OAAOmB,aAA7B,KAA6CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACvHmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,KACrD,CACDW,KAAM,6BACNE,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAK4B,KAAK1C,EAAMf,OAAOmB,aAA9B,KAA8CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACxHmB,QAASA,KAAQuB,KACjBtB,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,UAI7Cf,M,UC5BA,OAA0B,iCCA1B,OAA0B,uC,UCUnCuK,GAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAChChD,GAAOC,eAA2BxH,OAAOwK,mBACzCxK,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,CACL6G,UAAW,CAAEtG,KAAM,CAACiG,GAAKkD,UAE3BrK,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAMC,YAAG,gBACTC,YAAa,SAAAb,GAAK,OAAI,yCAAYc,KAAK6I,aAAa3J,EAAMf,OAAOmB,aAA3C,SAA+DY,IAAKC,UAAU,YAAajB,GAAO,GAAlG,eAAqHc,KAAK8I,YAAY5J,EAAMf,OAAOmB,aAAnJ,UACtBe,QAASA,KAAQuI,KACjBG,MAAO,EACPpH,KAAM,MAERnD,YAAa,CACXC,IAAK,IACLC,KAAMoB,YAAG,kBACTZ,MAAO,SAAAA,GAAK,MAAK,CACf8J,UAAWN,GAASxJ,EAAMf,OAAOmB,oBAK1BnB,M,UCpCA,OAA0B,iCCA1B,OAA0B,uCCQnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,KAEGJ,M,oBCdA,OAA0B,iCCA1B,OAA0B,uCCUnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAMC,YAAG,OACTC,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKC,IAAIf,EAAMf,OAAOmB,aAA7B,KAA6CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACvHmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,UAI7Cf,MCvBA,OAA0B,iCCA1B,OAA0B,uC,UCMnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,KAEGJ,MCZA,OAA0B,iCCA1B,OAA0B,uC,UCMnCsC,GAAc,CAAC,EAAG,IAAK,EAAG,KAAM,IAChCtC,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACfwB,WAAYD,GAAYvB,EAAMf,OAAOmB,eAEvCf,SAAU,KAEGJ,M,UChBA,OAA0B,iCCA1B,OAA0B,uCCKnC8K,GAAqB,CAAC,EAAG,EAAG,EAAG,EAAG,GAClC3C,GAAoB,CAAC,EAAG,EAAG,EAAG,GAAI,IAClCnI,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,MACLC,KAAM,gBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAM6G,GAAkBpH,EAAMf,OAAOmB,aACrCsB,UAAWqI,GAAmB/J,EAAMf,OAAOmB,oBAKpCnB,M,UCvBA,OAA0B,iCCA1B,OAA0B,uCCKnCwG,GAAiB,CAAC,IAAK,IAAK,IAAK,IAAK,GACtCuE,GAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,IACrC/K,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,SACNI,OAAQ,CACNqK,GAAI,CACFzK,KAAM,SACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMkF,GAAezF,EAAMf,OAAOmB,gBAGtC8J,GAAI,CACF1K,KAAM,cACNQ,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAiD,EAA3CkF,GAAezF,EAAMf,OAAOmB,aAClCK,KAAMuJ,GAAkBhK,EAAMf,OAAOmB,sBAOlCnB,M,UClCA,OAA0B,iCCA1B,OAA0B,uCCMnCwB,GAAO,CAAC,EAAG,GAAI,GAAI,GAAI,IACvBxB,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAMoB,YAAG,kBACTN,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACf+F,YAAatF,GAAKT,EAAMf,OAAOmB,aAC/BkB,aAAcb,GAAKT,EAAMf,OAAOmB,oBAKzBnB,M,UCvBA,OAA0B,iCCA1B,OAA0B,uCCKnCkL,GAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,IACxBlL,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,oBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACf0B,UAAWyI,GAAMnK,EAAMf,OAAOmB,oBAKvBnB,M,oBCrBA,OAA0B,iCCA1B,OAA0B,uCCUnCkL,GAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,IACxBlL,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACf0B,UAAWyI,GAAMnK,EAAMf,OAAOmB,aAC9BwC,QAAS,KAEXvD,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAM,cAAClB,EAAA,EAAD,CAAWC,GAAG,QAAQC,MAAM,QAClCkB,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKC,IAAIf,EAAMf,OAAOmB,aAA7B,KAA6CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACvHmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,UAI7Cf,M,UC5BA,OAA0B,iCCA1B,OAA0B,uC,UCUnCuH,GAAOC,eAA2BxH,OAAOmL,YACzCzD,GAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,IACrC1H,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACf4G,IAAKD,GAAkB3G,EAAMf,OAAOmB,aACpCyG,UAAW,CAAEC,IAAK,CAACN,GAAK6D,UAE1BhL,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAMC,YAAG,gBACTC,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKkG,OAAOhH,EAAMf,OAAOmB,aAAhC,KAAgDY,IAAKC,UAAU,UAAWjB,GAAO,OACvGmB,QAASA,KAAQkJ,MAEnB/K,YAAa,CACXC,IAAK,KACLC,KAAM,WACNc,SAAU,EACVN,MAAO,CACL6G,UAAW,CAAEC,IAAK,CAACN,GAAK8D,YAE1B5J,OAAQ,CAAC,CACPC,KAAMC,YAAG,gBACTC,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKyJ,WAAWvK,EAAMf,OAAOmB,aAApC,KAAoDY,IAAKC,UAAU,UAAWjB,GAAO,OAC3GmB,QAASA,KAAQmJ,cAKVrL,M,UCzCA,OAA0B,iCCA1B,OAA0B,uCCMnC0C,GAAS,CAAC,GAAI,GAAI,GAAI,GAAI,IAC1B6I,GAAW,CAAC,EAAG,IAAK,EAAG,KAAM,IAC7BvL,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACfC,WAAY0B,GAAO3B,EAAMf,OAAOmB,aAChCqK,gBAAiBD,GAASxK,EAAMf,OAAOmB,eAEzCf,SAAU,KAEGJ,M,UClBA,OAA0B,iCCA1B,OAA0B,uCCKnCyE,GAAU,CAAC,GAAI,GAAI,GAAI,GAAI,IAC3BnD,GAAO,CAAC,EAAG,EAAG,EAAG,EAAG,GACpBtB,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACf0D,QAASA,GAAQ1D,EAAMf,OAAOmB,eAEhCf,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,OACNI,OAAQ,CACN+D,GAAI,CACFnE,KAAM,iBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMA,GAAKP,EAAMf,OAAOmB,gBAG5BmC,EAAG,CACD/C,KAAM,cACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAM,EAAIA,GAAKP,EAAMf,OAAOmB,sBAOzBnB,M,UCrCA,OAA0B,iCCA1B,OAA0B,uCCOnCN,GAAcC,YAAM,EAAG,IAAIC,KAAI,SAAAC,GAAC,OAAQ,GAAJA,KACpCC,GAAQ,CAAC,IAAM,IAAM,IAAM,IAAM,KACjCC,GAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IACvBC,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,yBAAyBC,MAAM,UACnDC,OAAQC,OAAOC,YAAYnB,GAAYE,KAAI,SAAAkB,GAAC,MAAI,CAACA,EAAG,CAClDP,KAAK,GAAD,OAAKO,GACTC,MAAO,SAAAA,GAAK,MAAK,CACfC,WAAYC,KAAKC,IAAInB,GAAIgB,EAAMf,OAAOmB,aAAcrB,GAAMiB,EAAMf,OAAOmB,aAAeL,gBAMjFd,M,UC3BA,OAA0B,iCCA1B,OAA0B,uCCMnCwB,GAAO,CAAC,GAAI,GAAI,GAAI,GAAI,IACxBxB,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACf+F,YAAatF,GAAKT,EAAMf,OAAOmB,eAEjCf,SAAU,KAEGJ,MCMTyL,GAAU,CACdC,sBACAC,kBACAC,eACAC,gBACAC,cACAC,eACAC,oBACAxB,sBACAyB,iBACAC,WACAC,aACAC,oBACAC,eACAC,6BACAC,wBACAC,cACAC,gBACAtB,eACAuB,YACAC,oBACAC,mBACAC,gBAEapB,M,UC9CA,OAA0B,iCCA1B,OAA0B,uCCMnCjF,GAAiB,CAAC,EAAG,IAAK,EAAG,IAAK,GAClCxG,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,qCACNc,SAAU,GACVN,MAAO,SAAAA,GAAK,MAAK,CACfS,KAAMgF,GAAezF,EAAMf,OAAOmB,oBAK3BnB,M,UCtBA,OAA0B,iCCA1B,OAA0B,uCCMnCwG,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAClCuE,GAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,IACpC/K,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACf+F,YAAaN,GAAezF,EAAMf,OAAOmB,aACzCkB,aAAcmE,GAAezF,EAAMf,OAAOmB,eAE5Cf,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,uCACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACf+F,YAAaiE,GAAkBhK,EAAMf,OAAOmB,aAC5CkB,aAAc0I,GAAkBhK,EAAMf,OAAOmB,oBAKtCnB,M,UC5BA,OAA0B,iCCA1B,OAA0B,uCCMnCoB,GAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBpB,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,qBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMF,GAAML,EAAMf,OAAOmB,oBAKlBnB,M,UCtBA,OAA0B,iCCA1B,OAA0B,uCCMnCwG,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC9BsG,GAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,KACzC9M,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,6BACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMkF,GAAezF,EAAMf,OAAOmB,aAClCwC,QAASmJ,GAAkB/L,EAAMf,OAAOmB,oBAKjCnB,M,UCxBA,OAA0B,iCCA1B,OAA0B,uCCQnC0D,GAAK,SAACjE,GAAD,OAAoB,cAACe,EAAA,EAAD,CAAWC,GAAG,4BAA4BC,MAAOjB,KAC1EsN,GAAe,CAAC,GAAI,GAAI,GAAI,IAAK,KACjCC,GAAU,CAAC,IAAK,IAAK,IAAK,IAAK,KAC/B5L,GAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBpB,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACfkM,OAAQF,GAAahM,EAAMf,OAAOmB,eAEpCf,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLuD,UAAW,WACXC,OAAQ,CACNC,MAAOL,GAAG,eACVxD,KAAM,SAAAa,GAAK,OAAI,cAACiD,GAAA,EAAD,CAASC,KAAM,EAAGC,GAAI,CAAEC,GAAI,GAAKC,IAAKrD,EAAMsD,UAAY,EAAInE,GAAOC,OAEpFmE,YAAa,SAAAvD,GAAK,OAAI2C,GAAG,sBAAD,OAAuB3C,EAAMf,OAAOmB,eAC5DZ,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,wBAAwBC,MAAM,aAClDK,MAAO,SAAAA,GAAK,MAAK,CACfkM,OAAQD,GAAQjM,EAAMf,OAAOmB,aAC7BG,KAAMF,GAAML,EAAMf,OAAOmB,eAE3BM,OAAQ,CAAC,CACPC,KAAM6C,YAAI,YACVpB,MAAO,GACPK,KAAM,WAKCxD,M,UCzCA,OAA0B,iCCA1B,OAA0B,uCCQnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,KAEGJ,MCdA,OAA0B,iCCA1B,OAA0B,uC,UCOnCkN,GAAe,CAAC,GAAI,GAAI,GAAI,GAAI,IAChCC,GAAgB,CAAC,GAAI,GAAI,GAAI,GAAI,IACjCnN,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACf+F,YAAaoG,GAAanM,EAAMf,OAAOmB,aACvCkB,aAAc8K,GAAcpM,EAAMf,OAAOmB,eAE3Cf,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,kBAAkBC,MAAM,SAC5CK,MAAO,SAAAA,GAAK,MAAK,CACf+F,YAAaoG,GAAanM,EAAMf,OAAOmB,aACvCkB,aAAc8K,GAAcpM,EAAMf,OAAOmB,oBAKlCnB,MC5BA,OAA0B,iCCA1B,OAA0B,uC,UCMnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,KAEGJ,M,oBCZA,OAA0B,iCCA1B,OAA0B,uCCUnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAM,cAAClB,EAAA,EAAD,CAAWC,GAAG,QAAQC,MAAM,QAClCkB,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKC,IAAIf,EAAMf,OAAOmB,aAA7B,KAA6CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACvHmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,UAI7Cf,M,UCvBA,OAA0B,iCCA1B,OAA0B,uCCMnCoN,GAAS,CAAC,GAAI,GAAI,GAAI,GAAI,IAC1BC,GAAU,CAAC,GAAI,GAAI,GAAI,GAAI,IAC3BrN,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,QAAQC,MAAM,iBAClCK,MAAO,SAAAA,GAAK,MAAK,CACfwB,WAAY6K,GAAOrM,EAAMf,OAAOmB,iBAGnC,CACDd,YAAa,CACXC,IAAK,IACLC,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,QAAQC,MAAM,gBAClCK,MAAO,SAAAA,GAAK,MAAK,CACf+F,YAAauG,GAAQtM,EAAMf,OAAOmB,oBAK3BnB,M,UC9BA,OAA0B,iCCA1B,OAA0B,uCCQnCN,GAAcC,YAAM,EAAG,IAAIC,KAAI,SAAAC,GAAC,OAAQ,GAAJA,KACpCC,GAAQ,CAAC,IAAM,IAAM,IAAM,IAAM,KACjCC,GAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IACvBC,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,oBAAoBC,MAAM,UAC9CC,OAAQC,OAAOC,YAAYnB,GAAYE,KAAI,SAAAkB,GAAC,MAAI,CAACA,EAAG,CAClDP,KAAK,GAAD,OAAKO,GACTC,MAAO,SAAAA,GAAK,MAAK,CACfC,WAAYC,KAAKC,IAAInB,GAAIgB,EAAMf,OAAOmB,aAAcrB,GAAMiB,EAAMf,OAAOmB,aAAeL,gBAMjFd,M,UC5BA,OAA0B,iCCA1B,OAA0B,uCCOnCsN,GAAU,CAAC,GAAI,GAAI,GAAI,GAAI,IAC3BC,GAAQ,CAAC,CAAC,GAAI,GAAI,GAAI,IAAK,CAAC,KAAM,GAAI,KAAM,IAAK,CAAC,GAAI,GAAI,GAAI,IAAK,CAAC,KAAM,GAAI,KAAM,IAAK,CAAC,GAAI,GAAI,GAAI,KACtGvN,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACfwB,WAAY+K,GAAQvM,EAAMf,OAAOmB,aACjCH,WAAYsM,GAAQvM,EAAMf,OAAOmB,eAEnCf,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,mBAAmBC,MAAM,UAC7CC,OAAQC,OAAOC,YAAY,CAAC,EAAG,EAAG,EAAG,GAAGjB,KAAI,SAAAwH,GAAM,MAAI,CAACA,EAAQ,CAC7D7G,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,QAAQC,MAAM,QAAQ2G,OAAQ,CAAEC,MAAOF,KAC3DrG,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMiM,GAAMxM,EAAMf,OAAOmB,aAAaiG,EAAS,gBAM1CpH,M,UC9BA,OAA0B,iCCA1B,OAA0B,uCCOnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GACL,GAA2B,SAAvBA,EAAMqH,aAAyB,MAAO,CACxCP,IAAK,KAITzH,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAMoB,YAAG,cACTN,SAAU,EACVN,MAAO,CACL+F,YAAa,GACbzE,aAAc,IAEhBZ,OAAQ,CAAC,CACPC,KAAM6C,YAAI,YACVpB,MAAO,EACPK,KAAM,WAKCxD,M,UClCA,OAA0B,iCCA1B,OAA0B,uCCKnCoB,GAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBpB,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,sBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfiH,SAAU,GACV1G,KAAMF,GAAML,EAAMf,OAAOmB,oBAKlBnB,M,UCtBA,OAA0B,iCCA1B,OAA0B,uCCKnCuB,GAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBvB,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,MACLC,KAAM,2CACNQ,MAAO,SAAAA,GAAK,MAAK,CACfS,KAAMD,GAAMR,EAAMf,OAAOmB,oBAKlBnB,M,UCpBA,OAA0B,iCCA1B,OAA0B,uC,UCQnCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAM6C,YAAI,WACV3C,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAK+C,KAAK7D,EAAMf,OAAOmB,aAA9B,KAA8CY,IAAKC,UAAU,UAAWjB,GAAxE,MAAmFgB,IAAKC,UAAU,aAAcjB,OACtImB,QAASA,KAAQ0C,KACjBzC,QAAS,gBAIAnC,M,UCrBA,OAA0B,iCCA1B,OAA0B,uCCKnCwG,GAAiB,CAAC,EAAG,GAAI,GAAI,GAAI,IACjCxG,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,oBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACf0B,UAAW+D,GAAezF,EAAMf,OAAOmB,oBAKhCnB,M,UCrBA,OAA0B,iCCA1B,OAA0B,uCCMnCwG,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAClCxG,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACf+F,YAAaN,GAAezF,EAAMf,OAAOmB,aACzCkB,cAAe,KAEjBjC,SAAU,KAEGJ,M,UCjBA,OAA0B,iCCA1B,OAA0B,uCCenCA,GAAoB,2BACrBC,IADqB,IAExBC,QACAC,cAEAC,SAAU,KAEGJ,MCtBA,OAA0B,iCCA1B,OAA0B,uC,UCY1BA,GANW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,K,UCVG,OAA0B,iCCA1B,OAA0B,uCCMnCoG,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAUzBxG,GATW,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACfyM,aAAchH,GAAezF,EAAMf,OAAOmB,eAE5Cf,SAAU,K,oBCdG,OAA0B,iCCA1B,OAA0B,uCCUnCqN,GAAU,CAAC,GAAI,GAAI,GAAI,GAAI,IAiBlBzN,GAhBW,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACf2M,SAAUD,GAAQ1M,EAAMf,OAAOmB,eAEjCf,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAMC,YAAG,OACTC,YAAa,SAAAb,GAAK,OAAI,yCAAYgB,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACtFmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,U,UCvB7C,OAA0B,iCCA1B,OAA0B,uCCKnCyF,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAsBzBxG,GArBW,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,iBAAO,CACZ+F,aAAc,GACdzE,cAAe,KAEjBjC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,yCACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CAEf+F,YAAaN,GAAezF,EAAMf,OAAOmB,aAAe,GACxDkB,aAAcmE,GAAezF,EAAMf,OAAOmB,aAAe,U,UCtBlD,OAA0B,iCCA1B,OAA0B,uCCMnCqF,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAWzBxG,GAVW,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACfwB,WAAYiE,GAAezF,EAAMf,OAAOmB,aACxCH,WAAYwF,GAAezF,EAAMf,OAAOmB,eAE1Cf,SAAU,K,oBCfG,OAA0B,iCCA1B,OAA0B,uCCsB1BJ,GAbW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAM,cAAClB,EAAA,EAAD,CAAWC,GAAG,QAAQC,MAAM,QAClCkB,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAK0G,KAAKxH,EAAMf,OAAOmB,aAA9B,KAA8CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACxHmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,UClB7C,OAA0B,iCCA1B,OAA0B,uC,UCOnCK,GAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzB6F,GAAa,CACjB,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,KAsBIjH,GApBW,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CAAEO,KAAMF,GAAML,EAAMf,OAAOmB,eAC5Cf,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,yBAAyBC,MAAM,WACnDC,OAAQC,OAAOC,YAAY,CAAC,EAAG,EAAG,GAAGjB,KAAI,SAAAwH,GAAM,MAAI,CAACA,EAAQ,CAC1D7G,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,QAAQC,MAAM,QAAQ2G,OAAQ,CAAEC,MAAOF,KAC3DrG,MAAO,SAAAA,GACL,MAAO,CACL+F,YAAaG,GAAWlG,EAAMf,OAAOmB,aAAaiG,EAAS,gB,UC5BxD,OAA0B,iCCA1B,OAA0B,uCCKnChG,GAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,ICmDhBuM,GA7BH,CACVC,eACAC,WACAC,oBACAC,eACAC,kBACAC,kBACAC,YACAC,cACAC,aACAC,qBACAC,cACAC,aACAC,YACAC,qBACAC,YACAC,cACAC,YACAC,QACAC,kBACAC,sBACAC,qBACAC,eACAC,aACAC,iBACAC,sBACAC,mBACAC,aDhDwB,2BACrBrP,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,wBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMF,GAAML,EAAMf,OAAOmB,qBEhBlB,OAA0B,iCCA1B,OAA0B,uC,UCY1BnB,GANW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,K,UCVG,OAA0B,iCCA1B,OAA0B,uCCKnCoG,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAgBzBxG,GAfW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,qBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMkF,GAAezF,EAAMf,OAAOmB,oB,UChB3B,OAA0B,iCCA1B,OAA0B,uCCMnCoO,GAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBjO,GAAO,CAAC,EAAG,GAAI,GAAI,GAAI,IAuBdtB,GAtBW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,QAAQC,MAAM,iBAClCK,MAAO,SAAAA,GAAK,MAAK,CACfsB,aAAckN,GAAMxO,EAAMf,OAAOmB,iBAGpC,CACDd,YAAa,CACXC,IAAK,IACLC,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,QAAQC,MAAM,kBAClCK,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMA,GAAKP,EAAMf,OAAOmB,oB,UCzBjB,OAA0B,iCCA1B,OAA0B,uCCKnCqF,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAgBzBxG,GAfW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,gCACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMkF,GAAezF,EAAMf,OAAOmB,oB,oBChB3B,OAA0B,iCCA1B,OAA0B,uCCWnCqO,GAAQ,CAAC,GAAI,KAAM,GAAI,KAAM,IAuBpBxP,GArBW,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACfyO,MAAOA,GAAMzO,EAAMf,OAAOmB,eAE5Bf,SAAU,CAAC,CACTqB,OAAQ,CACN,CACEC,KAAM,cAAClB,EAAA,EAAD,CAAWC,GAAG,6BAA6BC,MAAM,SACvDkB,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAK4N,QAAQ1O,EAAMf,OAAOmB,aAAjC,KAAiDY,IAAKC,UAAU,UAAWjB,GAAO,GAAlF,MAA4FgB,IAAKC,UAAUC,YAAiB,YAAalB,GAAS,SAAUA,OAClLmB,QAASA,KAAQwN,KACjBvN,QAAS,SAAApB,GAAK,OAAIA,EAAM+B,eAE1B,CACEpB,KAAM,cAAC,KAAD,CAAWsB,MAAM,UAAjB,sK,oBC7BC,OAA0B,iCCA1B,OAA0B,uCCuB1BhD,GAbW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAMC,YAAG,OACTC,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKC,IAAIf,EAAMf,OAAOmB,aAA7B,KAA6CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACvHmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,U,UCnB7C,OAA0B,iCCA1B,OAA0B,uCCc1Bf,GANW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,K,oBCZG,OAA0B,iCCA1B,OAA0B,uCC4B1BJ,GAlBW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAMC,YAAG,OACTC,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKC,IAAIf,EAAMf,OAAOmB,aAA7B,KAA6CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACvHmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,KACrD,CACDW,KAAM,6BACNE,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAK4B,KAAK1C,EAAMf,OAAOmB,aAA9B,KAA8CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACxHmB,QAASA,KAAQuB,KACjBtB,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,U,UCxB7C,OAA0B,iCCA1B,OAA0B,uCCSnCyF,GAAiB,CAAC,GAAI,KAAM,GAAI,KAAM,IACtC9C,GAAK,SAACjE,GAAD,OAAoB,cAACe,EAAA,EAAD,CAAWC,GAAG,0BAA0BC,MAAOjB,KAuD/DO,GAtDW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLuD,UAAW,YACXC,OAAQ,CACNC,MAAOL,GAAG,eACVxD,KAAM,SAAAa,GAAK,OAAI,cAACiD,GAAA,EAAD,CAASC,KAAM,EAAGC,GAAI,CAAEC,GAAI,GAAKC,IAAKrD,EAAMsD,UAAY,EAAInE,GAAOC,OAEpFmE,YAAa,SAAAvD,GAAK,OAAI2C,GAAG,sBAAD,OAAuB3C,EAAMf,OAAOmB,eAC5DZ,KAAM,mCACNI,OAAQ,CACNgP,GAAI,CACFpP,KAAM,cAAC,KAAD,CAAWyC,MAAM,QAAjB,SAA0BuB,YAAI,oBACpCxD,MAAO,SAAAA,GAAK,MAAK,CACf6O,WAAYpJ,GAAezF,EAAMf,OAAOmB,aACxC0O,aAAcrJ,GAAezF,EAAMf,OAAOmB,gBAG9C2O,GAAI,CACFvP,KAAM,cAAC,KAAD,CAAWyC,MAAM,MAAjB,SAAwBuB,YAAI,0BAClCxD,MAAO,SAAAA,GAAK,MAAK,CACfgP,SAAUvJ,GAAezF,EAAMf,OAAOmB,aACtC0O,aAAcrJ,GAAezF,EAAMf,OAAOmB,gBAG9C6O,GAAI,CACFzP,KAAM,cAAC,KAAD,CAAWyC,MAAM,OAAjB,SAAyBuB,YAAI,yBACnCxD,MAAO,SAAAA,GAAK,MAAK,CACfkP,UAAWzJ,GAAezF,EAAMf,OAAOmB,aACvC0O,aAAcrJ,GAAezF,EAAMf,OAAOmB,gBAG9C+O,GAAI,CACF3P,KAAM,cAAC,KAAD,CAAWyC,MAAM,QAAjB,SAA0BuB,YAAI,6BACpCxD,MAAO,SAAAA,GAAK,MAAK,CACfoP,WAAY3J,GAAezF,EAAMf,OAAOmB,aACxC0O,aAAcrJ,GAAezF,EAAMf,OAAOmB,gBAG9CiP,GAAI,CACF7P,KAAM,cAAC,KAAD,CAAWyC,MAAM,OAAjB,SAAyBuB,YAAI,2BACnCxD,MAAO,SAAAA,GAAK,MAAK,CACfsP,UAAW7J,GAAezF,EAAMf,OAAOmB,aACvC0O,aAAcrJ,GAAezF,EAAMf,OAAOmB,sB,UC1DvC,OAA0B,iCCA1B,OAA0B,uCCMnCqF,GAAiB,CAAC,EAAG,GAAI,GAAI,GAAI,IAwBxBxG,GAvBW,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,iBAAO,CACZiH,SAAU,KAEZ5H,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,iCACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACf6O,WAAYpJ,GAAezF,EAAMf,OAAOmB,aACxC4O,SAAUvJ,GAAezF,EAAMf,OAAOmB,aACtC0O,aAAcrJ,GAAezF,EAAMf,OAAOmB,aAC1CgP,WAAY3J,GAAezF,EAAMf,OAAOmB,aACxC8O,UAAWzJ,GAAezF,EAAMf,OAAOmB,aACvCkP,UAAW7J,GAAezF,EAAMf,OAAOmB,oB,UCzBhC,OAA0B,iCCA1B,OAA0B,uCCKnCI,GAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IAgBhBvB,GAfW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,MACLC,KAAM,8CACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfS,KAAMD,GAAMR,EAAMf,OAAOmB,oB,UChBlB,OAA0B,iCCA1B,OAA0B,uCCKnCI,GAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,IAgBfvB,GAfW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,sBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfS,KAAMD,GAAMR,EAAMf,OAAOmB,oB,UChBlB,OAA0B,iCCA1B,OAA0B,uCCKnCqF,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,GA4BrBxG,GA3BW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,oBACNI,OAAQ,CACN+D,GAAI,CACFnE,KAAM,sBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMkF,GAAezF,EAAMf,OAAOmB,gBAGtCmC,EAAG,CACD/C,KAAM,mBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAM,EAAIkF,GAAezF,EAAMf,OAAOmB,sB,oBC1BnC,OAA0B,iCCA1B,OAA0B,uCCsB1BnB,GAbW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAM6C,YAAI,WACV3C,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAK+C,KAAK7D,EAAMf,OAAOmB,aAA9B,KAA8CY,IAAKC,UAAU,UAAWjB,GAAxE,MAAmFgB,IAAKC,UAAU,aAAcjB,OACtImB,QAASA,KAAQ0C,KACjBzC,QAAS,gBClBA,OAA0B,iCCA1B,OAA0B,uC,UCY1BnC,GANW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,K,oBCVG,OAA0B,iCCA1B,OAA0B,uCCsB1BJ,GAbW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAM6C,YAAI,WACV3C,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAK+C,KAAK7D,EAAMf,OAAOmB,aAA9B,KAA8CY,IAAKC,UAAU,UAAWjB,GAAxE,MAAmFgB,IAAKC,UAAU,aAAcjB,OACtImB,QAASA,KAAQ0C,KACjBzC,QAAS,gB,UClBA,OAA0B,iCCA1B,OAA0B,uCCKnCK,GAAS,CAAC,EAAG,GAAI,GAAI,GAAI,IAgBhBxC,GAfW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,oBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACf0B,UAAWD,GAAOzB,EAAMf,OAAOmB,oB,UChBxB,OAA0B,iCCA1B,OAA0B,uCCqB1BnB,GAfW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAAM,wBACNc,SAAU,EACVN,MAAO,iBAAO,CACZkC,OAAQ,W,oBChBD,OAA0B,iCCA1B,OAA0B,uCCUnC1B,GAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IAsBhBvB,GArBW,2BACrBC,IADqB,IAExBC,QACAC,cACAY,MAAO,SAAAA,GAAK,MAAK,CACf6O,WAAYrO,GAAMR,EAAMf,OAAOmB,aAC/B4O,SAAUxO,GAAMR,EAAMf,OAAOmB,aAC7B0O,aAActO,GAAMR,EAAMf,OAAOmB,aACjCgP,WAAY5O,GAAMR,EAAMf,OAAOmB,aAC/B8O,UAAW1O,GAAMR,EAAMf,OAAOmB,aAC9BkP,UAAW9O,GAAMR,EAAMf,OAAOmB,eAEhCf,SAAU,CAAC,CACTqB,OAAQ,CAAC,CACPC,KAAMC,YAAG,OACTC,YAAa,SAAAb,GAAK,OAAI,iCAAOc,KAAKC,IAAIf,EAAMf,OAAOmB,aAA7B,KAA6CY,IAAKC,UAAUC,YAAiB,WAAYlB,GAAQA,OACvHmB,QAASA,KAAQJ,IACjBK,QAAS,SAAApB,GAAK,OAAIqB,YAAwB,WAAYrB,U,UC5B7C,OAA0B,iCCA1B,OAA0B,uCCKnCyF,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAmCzBxG,GAlCW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,OACNI,OAAQ,CACN2P,EAAG,CACD/P,KAAM,gBACNQ,MAAO,SAAAA,GAAK,MAAK,CACfwB,WAAYiE,GAAezF,EAAMf,OAAOmB,aACxCH,WAAYwF,GAAezF,EAAMf,OAAOmB,gBAG5CoP,EAAG,CACDhQ,KAAM,iBACNQ,MAAO,SAAAA,GAAK,MAAK,CACf+F,YAAaN,GAAezF,EAAMf,OAAOmB,gBAG7CqP,EAAG,CACDjQ,KAAM,4BACNQ,MAAO,SAAAA,GAAK,MAAK,CACfwB,WAAYiE,GAAezF,EAAMf,OAAOmB,aACxCH,WAAYwF,GAAezF,EAAMf,OAAOmB,aACxC2F,YAAaN,GAAezF,EAAMf,OAAOmB,sB,UCjCtC,OAA0B,iCCA1B,OAA0B,uCCQnCgH,GAAoB,CAAC,GAAI,GAAI,GAAI,IAAK,KACtCsI,GAAuB,CAAC,GAAI,GAAI,GAAI,GAAI,IACxCC,GAAuB,CAAC,IAAK,IAAK,IAAK,IAAK,KA+BnC1Q,GA9BW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLC,KAXK,SAACd,GAAD,OAAoB,cAACe,EAAA,EAAD,CAAWC,GAAG,wBAAwBC,MAAOjB,IAWhEiE,CAAG,eACT/C,OAAQ,CACNgQ,EAAG,CACDpQ,KAAM,aACNQ,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAM6G,GAAkBpH,EAAMf,OAAOmB,gBAGzCyP,EAAG,CACDrQ,KAAM,OACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,OAAIH,OAAOC,YAAYqG,KAAYtH,KAAI,SAAAuH,GAAG,MAAI,CAAC,GAAD,OAAIA,EAAJ,SAAgBsJ,GAAqB1P,EAAMf,OAAOmB,oBAE9GtB,EAAG,CACDU,KAAM,YACNQ,MAAO,SAAAA,GAAK,MAAK,CACfkM,OAAQyD,GAAqB3P,EAAMf,OAAOmB,sB,UClCvC,OAA0B,iCCA1B,OAA0B,uCCOnCuC,GAAK,SAACjE,GAAD,OAAoB,cAACe,EAAA,EAAD,CAAWC,GAAG,2CAA2CC,MAAOjB,KACzF+G,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAuBzBxG,GAtBW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,IACLuD,UAAW,cACXgN,QAAS,SAAA9P,GAAK,OAAKA,EAAM+P,iBACzBhN,OAAQ,CACNC,MAAOL,GAAG,eACVxD,KAAM,SAAAa,GAAK,OAAI,cAACiD,GAAA,EAAD,CAASC,KAAM,EAAGC,GAAI,CAAEC,GAAI,GAAKC,IAAKrD,EAAMsD,UAAY,EAAInE,GAAOC,OAEpFmE,YAAa,SAAAvD,GAAK,OAAI2C,GAAG,sBAAD,OAAuB3C,EAAMf,OAAOmB,eAC5DZ,KAAM,cAACC,EAAA,EAAD,CAAWC,GAAG,uCAAuCC,MAAM,aACjEK,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMkF,GAAezF,EAAMf,OAAOmB,oB,UCzB3B,OAA0B,iCCA1B,OAA0B,uCCKnCqF,GAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,IAiBzBxG,GAhBW,2BACrBC,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,qBACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMkF,GAAezF,EAAMf,OAAOmB,aAClC6G,SAAUxB,GAAezF,EAAMf,OAAOmB,oB,UCjB/B,OAA0B,iCCA1B,OAA0B,uCCMnCC,GAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IC4ChB2P,GA1BE,CACfC,oBACAC,mBACAC,eACAC,cACAC,uBACAC,mBACAC,iBACAC,eACAC,gBACAC,8BACAC,cACAC,aACAC,gBACAC,qBACAC,kBACAC,kBACAC,iBACAC,wBACAC,gBACAC,cACAC,cACAC,iCACAC,gBACAC,YDzCwB,2BACrBtS,IADqB,IAExBC,QACAC,cACAC,SAAU,CAAC,CACTC,YAAa,CACXC,IAAK,KACLC,KAAM,eACNc,SAAU,EACVN,MAAO,SAAAA,GAAK,MAAK,CACfO,KAAMF,GAAML,EAAMf,OAAOmB,qB,UET3BqR,GAAyB,+DAC1BhK,IACA1D,IACA2G,IACAkC,IACAoD,IAELnQ,OAAOyG,OAAOmL,IAAYC,SAAQ,SAAAzS,GAAM,OAAIA,EAAOI,UAAYsS,aAA2B1S,EAAOI,aAClFoS,c,iCChBf,gFAOO,SAASG,EAAgBC,EAAiB7R,EAAmB8R,EAAkBC,GACpF,IAAMC,EAAMH,EAAU,IAChBI,EAAU/Q,YAAiB4Q,EAAU9R,EAAO+R,GAClD,MAAO,CAAC,SAAAvC,GAAC,OAAIwC,EAAMxC,EAAEyC,IAAU,CAACA,IAE3B,SAASC,EAAoBL,EAAiBM,GAAuD,IAAhCC,EAA+B,uDAAhB,EACnFrT,EAAQ8S,EAAU,IACxB,MAAO,CAAC,SAAArC,GAAC,OAAMzQ,EAAQyQ,EAAE2C,GAAiBC,GAAQ5C,EAAE6C,YAAY,CAACF,EAAc,iB,iCCbjF,+CAEO,SAASR,EAA2BW,GACzCA,EAASZ,SAAQ,SAAAa,GAAY,IAAD,IACK,oBAApBA,EAAQzC,UAAwByC,EAAQzC,QAAU,kBAAM,IACnE,UAAAyC,EAAQ7R,cAAR,mBAAgBgR,eAAhB,gBAA0Bc,U,iCCL9B,+CAEa1R,EAAO,CAClB+C,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAC3B9C,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,MAEtBI,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB9Q,EAAKC,IAAIf,EAAMf,OAAOmB,aAAcJ,EAAO,aACzE6D,KAAM,SAAA7D,GACJ,IAAMyS,EAAK3R,EAAK+C,KAAK7D,EAAMf,OAAOmB,aAAe,IACjD,MAAO,CAAC,SAAAoP,GAAC,OAAKiD,EAAKjD,EAAEkD,SAAYlD,EAAE6C,YAAY,CAAC,WAAY,iBAGjDlR,O,iCCdf,8CAEaL,EAAO,CAClBe,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,KAGtBV,EAAuB,CAC3BuE,MAAO,SAAA1F,GACL,IAAMgS,EAAMlR,EAAKe,QAAQ7B,EAAMf,OAAOmB,aAAe,IAC/C6R,EAAU/Q,YAAiB,QAASlB,GAAS,SACnD,MAAO,CAAC,SAAAwP,GAAC,OAAIwC,EAAMxC,EAAEmD,SAAWnD,EAAEyC,IAAU,CAAC,WAAYA,MAG9C9Q,O,iCCZf,+CAEaL,EAAO,CAClBC,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,MAEtBI,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB9Q,EAAKC,IAAIf,EAAMf,OAAOmB,aAAcJ,EAAO,cAE5DmB,O,iCCRf,kCAAO,IAAML,EAAO,CAClBkG,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,MAGzB7F,EAAuB,CAC3B4F,MAAO,SAAA/G,GAAK,MAAI,CAAC,SAAAwP,GAAC,eAAI,oBAACA,EAAEoD,gBAAH,aAAC,EAAYC,eAAb,QAAwBrD,EAAEqD,SAAW/R,EAAKkG,OAAOhH,EAAMf,OAAOmB,aAAe,KAAK,CAAC,cAE5Fe,O,iCCPf,+CAEaL,EAAO,CAClBC,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,KAElBI,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB9Q,EAAKC,IAAIf,EAAMf,OAAOmB,aAAcJ,EAAO,cAE5DmB,O,iCCRf,aAEMA,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB,IAAK5R,EAAO,cAE7BmB,O,iCCJf,kCAAO,IAAML,EAAO,CAClBL,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IACvBoD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,MAEnB1C,EAAuB,CAC3BoG,MAAO,SAAAvH,GACL,IAAMyS,EAAK3R,EAAK+C,KAAK7D,EAAMf,OAAOmB,aAAe,IACjD,MAAO,CAAC,SAAAoP,GAAC,OAAKiD,EAAKjD,EAAEkD,SAAYlD,EAAE6C,YAAY,CAAC,WAAY,iBAGjDlR,O,iCCXf,+CAEaL,EAAO,CAClB0G,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,MAEvBrG,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB9Q,EAAK0G,KAAKxH,EAAMf,OAAOmB,aAAcJ,EAAO,cAE7DmB,O,iCCPf,kCAAO,IAAML,EAAO,CAClB+C,KAAM,CAAC,EAAG,KAAM,IAAK,KAAM,IAEvB1C,EAAuB,CAC3B0C,KAAM,SAAA7D,GACJ,IAAMyS,EAAK3R,EAAK+C,KAAK7D,EAAMf,OAAOmB,aAAe,IACjD,MAAO,CAAC,SAAAoP,GAAC,OAAKiD,EAAKjD,EAAEqD,QAAWrD,EAAE6C,YAAY,CAAC,UAAW,iBAG/ClR,O,iCCVf,+CAEaL,EAAO,CAClBC,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,KAElBI,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB9Q,EAAKC,IAAIf,EAAMf,OAAOmB,aAAcJ,EAAO,cAE5DmB,O,iCCRf,+CAEaL,EAAO,CAClBC,IAAK,CAAC,GAAI,GAAI,IAAK,IAAK,KACxB2B,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,MAEvBvB,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB9Q,EAAKC,IAAIf,EAAMf,OAAOmB,aAAcJ,EAAO,aACzE0C,KAAM,SAAA1C,GAAK,OAAI4R,YAAgB9Q,EAAK4B,KAAK1C,EAAMf,OAAOmB,aAAcJ,EAAO,cAE9DmB,O,iCCVf,kCAAO,IAAML,EAAO,CAClB6I,aAAc,CAAC,GAAI,GAAI,GAAI,GAAI,IAC/BC,YAAa,CAAC,GAAI,GAAI,IAAK,IAAK,MAG5BzI,EAAuB,CAC3BuI,KAAM,SAAA1J,GAAK,MAAI,CAAC,SAAAwP,GAAC,eAAItP,KAAKC,MAAK,oBAACqP,EAAEsD,cAAH,aAAC,EAAUhJ,iBAAX,QAAwB0F,EAAE1F,WAAa,KAAOhJ,EAAK6I,aAAa3J,EAAMf,OAAOmB,aAAe,IAAKU,EAAK8I,YAAY5J,EAAMf,OAAOmB,eAAe,CAAC,gBAEjKe,O,iCCRf,+CAEaL,EAAO,CAClBC,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,MAEtBI,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB9Q,EAAKC,IAAIf,EAAMf,OAAOmB,aAAcJ,EAAO,cAE5DmB,O,iCCRf,+CAEaL,EAAO,CAClBC,IAAM,CAAC,GAAI,GAAI,GAAI,GAAI,MAEnBI,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB9Q,EAAKC,IAAIf,EAAMf,OAAOmB,aAAcJ,EAAO,cAE5DmB,O,iCCRf,kCAAO,IAAML,EAAO,CAClBkG,OAAQ,CAAC,GAAK,EAAG,IAAK,IAAK,KAC3BuD,WAAY,CAAC,EAAG,IAAK,IAAK,IAAK,MAG3BpJ,EAAuB,CAC3BkJ,IAAK,SAAArK,GAAK,MAAI,CAAC,SAAAwP,GAAC,eAAI,oBAACA,EAAEoD,gBAAH,aAAC,EAAYC,eAAb,QAAwBrD,EAAEqD,SAAW/R,EAAKkG,OAAOhH,EAAMf,OAAOmB,aAAe,KAAK,CAAC,aACvGkK,OAAQ,SAAAtK,GAAK,MAAI,CAAC,SAAAwP,GAAC,eAAI,oBAACA,EAAEoD,gBAAH,aAAC,EAAYC,eAAb,QAAwBrD,EAAEqD,SAAW/R,EAAKyJ,WAAWvK,EAAMf,OAAOmB,aAAe,KAAK,CAAC,cAEjGe,O,iCCTf,+CAEaL,EAAO,CAClBC,IAAK,CAAC,GAAI,GAAI,GAAI,IAAK,MAEnBI,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB9Q,EAAKC,IAAIf,EAAMf,OAAOmB,aAAcJ,EAAO,cAE5DmB,O,iCCRf,+CAEaL,EAAO,CAClBC,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,MAEtBI,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB9Q,EAAKC,IAAIf,EAAMf,OAAOmB,aAAcJ,EAAO,cAE5DmB,O,iCCRf,+CAEaL,EAAO,CAClBC,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,MAEtBI,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB9Q,EAAKC,IAAIf,EAAMf,OAAOmB,aAAcJ,EAAO,cAE5DmB,O,iCCTf,8CAEaL,EAAO,CAClBe,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,KAGtBV,EAAuB,CAC3BW,OAAQ,SAAA9B,GACN,IAAMgS,EAAMlR,EAAKe,QAAQ7B,EAAMf,OAAOmB,aAAe,IAC/C6R,EAAU/Q,YAAiB,SAAUlB,GAAS,SACpD,MAAO,CAAC,SAAAwP,GAAC,OAAIwC,EAAMxC,EAAEmD,SAAWnD,EAAEyC,IAAU,CAAC,WAAYA,KAE3DjQ,QAAS,SAAAhC,GACP,IAAMgS,EAAMlR,EAAKe,QAAQ7B,EAAMf,OAAOmB,aAAe,IAC/C6R,EAAU/Q,YAAiB,UAAWlB,GAAS,SACrD,MAAO,CAAC,SAAAwP,GAAC,OAAIwC,EAAMxC,EAAEmD,SAAWnD,EAAEyC,IAAU,CAAC,WAAYA,MAG9C9Q,O,iCCjBf,+CAEaL,EAAO,CAClBC,IAAK,CAAC,GAAI,IAAK,IAAK,IAAK,MAErBI,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB9Q,EAAKC,IAAIf,EAAMf,OAAOmB,aAAcJ,EAAO,cAE5DmB,O,iCCRf,+CAEaL,EAAO,CAClBC,IAAK,CAAC,GAAI,GAAI,IAAK,IAAK,KACxB2B,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,MAEvBvB,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB9Q,EAAKC,IAAIf,EAAMf,OAAOmB,aAAcJ,EAAO,aACzE0C,KAAM,SAAA1C,GAAK,OAAI4R,YAAgB9Q,EAAK4B,KAAK1C,EAAMf,OAAOmB,aAAcJ,EAAO,cAE9DmB,O,iCCTf,kCAAO,IAAML,EAAO,CAClB2C,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,KAErBtC,EAAuB,CAC3BsC,OAAQ,SAAAzD,GACN,IAAM+S,EAAUjS,EAAK2C,OAAOzD,EAAMf,OAAOmB,aAAe,IACxD,MAAO,CAAC,SAAAoP,GAAC,OAAIuD,EAAUvD,EAAEqD,SAAW,EAAIrD,EAAE9L,QAAU,KAAO,KAAK,CAAC,UAAW,cAGjEvC,O,iCCTf,kCAAO,IAAML,EAAO,CAClB+C,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,KAElB1C,EAAuB,CAC3B0C,KAAM,SAAA7D,GACJ,IAAMyS,EAAK3R,EAAK+C,KAAK7D,EAAMf,OAAOmB,aAAe,IACjD,MAAO,CAAC,SAAAoP,GAAC,OAAKiD,EAAKjD,EAAEqD,QAAWrD,EAAE6C,YAAY,CAAC,UAAW,iBAG/ClR,O,iCCXf,8CAEaL,EAAO,CAClB4N,QAAS,CAAC,EAAG,IAAK,EAAG,IAAK,IAGtBvN,EAAuB,CAC3BwN,KAAM,SAAA3O,GACJ,IAAMgS,EAAMlR,EAAK4N,QAAQ1O,EAAMf,OAAOmB,aAAe,IAC/C6R,EAAU/Q,YAAiB,YAAalB,GAAS,SACvD,MAAO,CAAC,SAAAwP,GAAC,OAAIwC,EAAMxC,EAAEqD,QAAUrD,EAAEyC,IAAU,CAAC,UAAWA,MAG5C9Q,O,iCCZf,+CAEaL,EAAO,CAClBC,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,MAEtBI,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB9Q,EAAKC,IAAIf,EAAMf,OAAOmB,aAAcJ,EAAO,cAE5DmB,O,iCCRf,+CAEaL,EAAO,CAClBC,IAAK,CAAC,GAAI,GAAI,IAAK,IAAK,KACxB2B,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,MAEvBvB,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB9Q,EAAKC,IAAIf,EAAMf,OAAOmB,aAAcJ,EAAO,aACzE0C,KAAM,SAAA1C,GAAK,OAAI4R,YAAgB9Q,EAAK4B,KAAK1C,EAAMf,OAAOmB,aAAcJ,EAAO,cAE9DmB,O,iCCTf,kCAAO,IAAML,EAAO,CAClB+C,KAAM,CAAC,EAAG,KAAM,IAAK,KAAM,IAEvB1C,EAAuB,CAC3B0C,KAAM,SAAA7D,GACJ,IAAMyS,EAAK3R,EAAK+C,KAAK7D,EAAMf,OAAOmB,aAAe,IACjD,MAAO,CAAC,SAAAoP,GAAC,OAAKiD,EAAKjD,EAAEqD,QAAWrD,EAAE6C,YAAY,CAAC,UAAW,iBAG/ClR,O,iCCTf,kCAAO,IAAML,EAAO,CAClB+C,KAAM,CAAC,EAAG,IAAK,EAAG,IAAK,IAEnB1C,EAAuB,CAC3B0C,KAAM,SAAA7D,GACJ,IAAMyS,EAAK3R,EAAK+C,KAAK7D,EAAMf,OAAOmB,aAAe,IACjD,MAAO,CAAC,SAAAoP,GAAC,OAAKiD,EAAKjD,EAAEqD,QAAWrD,EAAE6C,YAAY,CAAC,UAAW,iBAG/ClR,O,iCCVf,+CAEaL,EAAO,CAClBC,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,MAEtBI,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB9Q,EAAKC,IAAIf,EAAMf,OAAOmB,aAAcJ,EAAO,cAE5DmB,O,iCCRf,+CAEaL,EAAO,CAClBC,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,MAEtBI,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB9Q,EAAKC,IAAIf,EAAMf,OAAOmB,aAAcJ,EAAO,cAE5DmB,O,iCCPf,kCAAO,IAAML,EAAO,CAClB+C,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,KAElB1C,EAAuB,CAC3B0C,KAAM,SAAA7D,GACJ,IAAMyS,EAAK3R,EAAK+C,KAAK7D,EAAMf,OAAOmB,aAAe,IACjD,MAAO,CAAC,SAAAoP,GAAC,OAAKiD,EAAKjD,EAAEqD,QAAWrD,EAAE6C,YAAY,CAAC,UAAW,iBAG/ClR,O,iCCVf,aAEMA,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB,IAAK5R,EAAO,cAE7BmB,O,iCCLf,+CAEaL,EAAO,CAClB0G,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,KAEnBrG,EAAuB,CAC3BJ,IAAK,SAAAf,GAAK,OAAI4R,YAAgB9Q,EAAK0G,KAAKxH,EAAMf,OAAOmB,aAAcJ,EAAO,cAE7DmB,O","file":"static/js/11.0ae4e5ad.chunk.js","sourcesContent":["import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { Translate } from '../../../../Components/Translate'\r\nconst tr = (strKey: string) => <Translate ns=\"weapon_Deathmatch_gen\" key18={strKey} />\r\nconst refinementVals = [16, 20, 24, 28, 32]\r\nconst refinementSoloVals = [24, 30, 36, 42, 48]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"g\",\r\n      name: tr(`passiveName`),\r\n      states: {\r\n        o2: {\r\n          name: \"At least 2 opponents\",\r\n          stats: stats => ({\r\n            atk_: refinementVals[stats.weapon.refineIndex],\r\n            def_: refinementVals[stats.weapon.refineIndex]\r\n          })\r\n        },\r\n        o1: {\r\n          name: \"Less than 2 opponents\",\r\n          stats: stats => ({\r\n            atk_: refinementSoloVals[stats.weapon.refineIndex]\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.97fbee2c.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.8d9b4c73.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { range } from '../../../../Util/Util'\r\nimport { Translate } from '../../../../Components/Translate'\r\nconst energyRange = range(4, 36).map(i => i * 10)\r\nconst ratio = [0.12, 0.15, 0.18, 0.21, 0.24]\r\nconst max = [40, 50, 60, 70, 80]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"pa\",\r\n      name: <Translate ns=\"weapon_Akuoumaru\" key18=\"party\" />,\r\n      states: Object.fromEntries(energyRange.map(c => [c, {\r\n        name: `${c}`,\r\n        stats: stats => ({\r\n          burst_dmg_: Math.min(max[stats.weapon.refineIndex], ratio[stats.weapon.refineIndex] * c),\r\n        })\r\n      }]))\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.2eae1011.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.d2bf0faa.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst atk_s = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"pa\",\r\n      name: \"Opponents Defeated\",\r\n      maxStack: 3,\r\n      stats: stats => ({\r\n        atk_: atk_s[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.be859688.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.ba635fa7.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"bft\",\r\n      name: \"Against Opponents affected by Pyro/Electro\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        dmg_: dmg_s[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.c7551a9d.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.cafeeac8.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { st } from '../../../Characters/SheetUtil'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"dmg\"),\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.9fc47ec8.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.c11bce18.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\n// const refinementVals = [60, 70, 80, 90, 100]\r\n// const refinementCdVals = [12, 10.5, 9, 7.5, 6]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.57efbd0b.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.9ee2a307.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst dmg_s = [30, 35, 40, 45, 50]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"u\",\r\n      name: \"Low HP\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        charged_dmg_: dmg_s[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.c62c05a7.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.aafd21b9.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst skill_dmg_s = [6, 7.5, 9, 10.5, 12]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    skill_dmg_: skill_dmg_s[stats.weapon.refineIndex]\r\n  }),\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.a5f30174.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.ad9c43a1.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst crit_s = [3, 4, 5, 6, 7]\r\nconst atk_s = [7, 8, 9, 10, 11]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"lau\",\r\n      name: \"Liyue Members\",\r\n      maxStack: 4,\r\n      stats: stats => ({\r\n        atk_: atk_s[stats.weapon.refineIndex],\r\n        critRate_: crit_s[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.af547f6c.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.52b291cb.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { st } from '../../../Characters/SheetUtil'\r\n\r\nconst burst_ = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    burst_dmg_: burst_[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"dmg\"),\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.73904f57.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.2be51148.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.bc87bda4.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.b7d13481.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { st } from '../../../Characters/SheetUtil'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"dmg\"),\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.11fc9623.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.de92246b.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst dmg_s = [20, 24, 28, 32, 36]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"bst\",\r\n      name: \"Against Opponents Affected by Hydro/Electro\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        dmg_: dmg_s[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/AwakenIcon.352a7003.png\";","export default __webpack_public_path__ + \"static/media/Icon.75774483.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey } from '../../../../Build/Build'\r\nimport ColorText from '../../../../Components/ColoredText'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nconst def_ = [28, 35, 42, 49, 56]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    def_: def_[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    conditional: {\r\n      key: \"e\",\r\n      name: <Translate ns=\"weapon_RedhornStonethresher_gen\" key18=\"passiveName\" />,\r\n      fields: [{\r\n        text: <Translate ns=\"weapon_RedhornStonethresher\" key18=\"nameNormal\" />,\r\n        formulaText: stats => <span>{data.defConv[stats.weapon.refineIndex]}% {Stat.printStat(\"finalDEF\", stats, true)} * {Stat.printStat(getTalentStatKey(\"normal\", stats) + \"_multi\", stats)}</span>,\r\n        formula: formula.normal,\r\n        variant: stats => stats.characterEle\r\n      }, {\r\n        text: <Translate ns=\"weapon_RedhornStonethresher\" key18=\"nameCharged\" />,\r\n        formulaText: stats => <span>{data.defConv[stats.weapon.refineIndex]}% {Stat.printStat(\"finalDEF\", stats, true)} * {Stat.printStat(getTalentStatKey(\"charged\", stats) + \"_multi\", stats)}</span>,\r\n        formula: formula.charged,\r\n        variant: stats => stats.characterEle\r\n      }, {\r\n        text: <ColorText color=\"warning\">The normal and charged DMG increase is not currently being added to the character's skill damage as a singular damage number, pending future implemention.</ColorText>\r\n      }],\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.77b8c51b.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.a8c366f2.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst crit_s = [8, 10, 12, 14, 16]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"f\",\r\n      name: \"Opponents Damaged\",\r\n      maxStack: 5,\r\n      stats: stats => ({\r\n        critRate_: crit_s[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.dfd8d70e.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.08413ef8.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"c\",\r\n      name: \"After Elemental Skill\",\r\n      maxStack: 1,\r\n      stats: () => ({\r\n        cdRed_: 100\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.a7d374db.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.23d1198d.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst dmg_s = [6, 7, 8, 9, 10]\r\nconst takeDMG_s = [3, 2.7, 2.4, 2.2, 2]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"w\",\r\n      name: \"Duration on Field (4s / stack)\",\r\n      maxStack: 5,\r\n      stats: stats => ({\r\n        dmg_: dmg_s[stats.weapon.refineIndex]\r\n      }),\r\n      fields: [{\r\n        text: \"Take more DMG\",\r\n        value: stats => {\r\n          const [num,] = stats.conditionalValues?.weapon?.SerpentSpine?.w ?? [0]\r\n          return takeDMG_s[stats.weapon.refineIndex] * num\r\n        },\r\n        unit: \"%\"\r\n      }]\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.a48a5a1a.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.450bdcc8.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst atk_s = [6, 7, 8, 9, 10]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"c\",\r\n      name: \"Normal/Charged Attack Hits\",\r\n      maxStack: 4,\r\n      stats: stats => ({\r\n        atk_: atk_s[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.2029419f.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.240f9b65.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { st } from '../../../Characters/SheetUtil'\r\nconst dmg_s = [8, 10, 12, 14, 16]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    dmg_: dmg_s[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"dmg\"),\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.6bb87a4e.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.8abc624a.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { st } from '../../../Characters/SheetUtil'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"dmg\"),\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }, {\r\n      text: \"Opponents affected by Cryo\",\r\n      formulaText: stats => <span>{data.dmgc[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmgc,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.9ec9dab4.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.52328d20.png\";","import { WeaponData } from 'pipeline'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport ImgIcon from '../../../../Components/Image/ImgIcon'\r\nimport { sgt } from '../../../Characters/SheetUtil'\r\nconst tr = (strKey: string) => <Translate ns=\"weapon_SongOfBrokenPines_gen\" key18={strKey} />\r\nconst atk_ = [16, 20, 24, 28, 32]\r\nconst atkSPD_ = [12, 15, 18, 21, 24]\r\nconst condAtk_ = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    atk_: atk_[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    conditional: {\r\n      key: \"r\",\r\n      partyBuff: \"partyAll\",\r\n      header: {\r\n        title: tr(`passiveName`),\r\n        icon: stats => <ImgIcon size={2} sx={{ m: -1 }} src={stats.ascension < 2 ? icon : iconAwaken} />,\r\n      },\r\n      description: stats => tr(`passiveDescription.${stats.weapon.refineIndex}`),\r\n      name: <Translate ns=\"weapon_SongOfBrokenPines\" key18=\"name\" />,\r\n      stats: stats => ({\r\n        atk_: condAtk_[stats.weapon.refineIndex],\r\n        atkSPD_: atkSPD_[stats.weapon.refineIndex],\r\n      }),\r\n      fields: [{\r\n        text: sgt(\"duration\"),\r\n        value: 12,\r\n        unit: \"s\"\r\n      }]\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.6715f718.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.00db7552.png\";","import { WeaponData } from 'pipeline'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: \"Shield Absorption\",\r\n      formulaText: stats => <span>{data.shield[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * (100% + {Stat.printStat(\"shield_\", stats)})</span>,\r\n      formula: formula.shield,\r\n    }],\r\n    conditional: {\r\n      key: \"rg\",\r\n      name: \"Taking DMG\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        dmg_: dmg_s[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.a035f032.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.ba09ef8b.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst shield_ = [20, 25, 30, 35, 40]\r\nconst atk_s = [4, 5, 6, 7, 8]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    shield_: shield_[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    conditional: {\r\n      key: \"gm\",\r\n      name: \"Hits\",\r\n      states: {\r\n        wo: {\r\n          name: \"Without shield\",\r\n          maxStack: 5,\r\n          stats: stats => ({\r\n            atk_: atk_s[stats.weapon.refineIndex]\r\n          })\r\n        },\r\n        w: {\r\n          name: \"With shield\",\r\n          maxStack: 5,\r\n          stats: stats => ({\r\n            atk_: 2 * atk_s[stats.weapon.refineIndex]\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.42b6e78e.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.e81f7431.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.8e0a6b6c.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.0790bfc1.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst atk_def_s = [6, 7.5, 9, 10.5, 12]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"ib\",\r\n      name: \"Normal/Charged Attack Hits\",\r\n      maxStack: 4,\r\n      stats: stats => ({\r\n        atk_: atk_def_s[stats.weapon.refineIndex],\r\n        def_: atk_def_s[stats.weapon.refineIndex]\r\n      }),\r\n      fields: [{\r\n        text: \"Duration\",\r\n        value: \"6s\"\r\n      }]\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.79712fd9.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.e5e033b8.png\";","import { WeaponData } from 'pipeline'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { sgt } from '../../../Characters/SheetUtil'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: sgt(\"healing\"),\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.960e22ed.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.b4b90389.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport ImgIcon from '../../../../Components/Image/ImgIcon'\r\nconst tr = (strKey: string) => <Translate ns=\"weapon_WolfsGravestone_gen\" key18={strKey} />\r\nconst atk_s = [20, 25, 30, 35, 40]\r\nconst atk_partys = [40, 50, 60, 70, 80]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    atk_: atk_s[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    conditional: {\r\n      key: \"wt\",\r\n      partyBuff: \"partyAll\",\r\n      header: {\r\n        title: tr(`passiveName`),\r\n        icon: stats => <ImgIcon size={2} sx={{ m: -1 }} src={stats.ascension < 2 ? icon : iconAwaken} />,\r\n      },\r\n      description: stats => tr(`passiveDescription.${stats.weapon.refineIndex}`),\r\n      name: <Translate ns=\"weapon_WolfsGravestone\" key18=\"condName\" />,\r\n      stats: stats => ({\r\n        atk_: atk_partys[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","import Akuoumaru from './Akuoumaru'\r\nimport BlackcliffSlasher from './BlackcliffSlasher'\r\nimport BloodtaintedGreatsword from './BloodtaintedGreatsword'\r\nimport DebateClub from './DebateClub'\r\nimport FavoniusGreatsword from './FavoniusGreatsword'\r\nimport FerrousShadow from './FerrousShadow'\r\nimport KatsuragikiriNagamasa from './KatsuragikiriNagamasa'\r\nimport LithicBlade from './LithicBlade'\r\nimport LuxuriousSeaLord from './LuxuriousSeaLord'\r\nimport OldMercsPal from './OldMercsPal'\r\nimport PrototypeArchaic from './PrototypeArchaic'\r\nimport Rainslasher from './Rainslasher'\r\nimport RedhornStonethresher from './RedhornStonethresher'\r\nimport RoyalGreatsword from './RoyalGreatsword'\r\nimport SacrificialGreatsword from './SacrificialGreatsword'\r\nimport SerpentSpine from './SerpentSpine'\r\nimport SkyriderGreatsword from './SkyriderGreatsword'\r\nimport SkywardPride from './SkywardPride'\r\nimport SnowTombedStarsilver from './SnowTombedStarsilver'\r\nimport SongOfBrokenPines from './SongOfBrokenPines'\r\nimport TheBell from './TheBell'\r\nimport TheUnforged from './TheUnforged'\r\nimport WasterGreatsword from './WasterGreatsword'\r\nimport Whiteblind from './Whiteblind'\r\nimport WhiteIronGreatsword from './WhiteIronGreatsword'\r\nimport WolfsGravestone from './WolfsGravestone'\r\nconst claymore = {\r\n  Akuoumaru,\r\n  BlackcliffSlasher,\r\n  BloodtaintedGreatsword,\r\n  DebateClub,\r\n  FavoniusGreatsword,\r\n  FerrousShadow,\r\n  KatsuragikiriNagamasa,\r\n  LithicBlade,\r\n  LuxuriousSeaLord,\r\n  OldMercsPal,\r\n  PrototypeArchaic,\r\n  Rainslasher,\r\n  RedhornStonethresher,\r\n  RoyalGreatsword,\r\n  SacrificialGreatsword,\r\n  SerpentSpine,\r\n  SkyriderGreatsword,\r\n  SkywardPride,\r\n  SnowTombedStarsilver,\r\n  SongOfBrokenPines,\r\n  TheBell,\r\n  TheUnforged,\r\n  WasterGreatsword,\r\n  Whiteblind,\r\n  WhiteIronGreatsword,\r\n  WolfsGravestone,\r\n} as const\r\nexport default claymore","export default __webpack_public_path__ + \"static/media/Icon.72a7346b.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.0cc0c70d.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.4c1af049.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.fa7227e1.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { sgt, st } from '../../../Characters/SheetUtil'\r\nconst atk_ = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    atk_: atk_[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: sgt(\"healing\"),\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalATK\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }, {\r\n      text: st(\"dmg\"),\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.8701d759.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.3252a460.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"pa\",\r\n      name: \"Opponents Defeated\",\r\n      maxStack: 3,\r\n      stats: stats => ({\r\n        atk_: refinementVals[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/AwakenIcon.e7a45f38.png\";","export default __webpack_public_path__ + \"static/media/Icon.e898b9a9.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey } from '../../../../Build/Build'\r\nimport ColorText from '../../../../Components/ColoredText'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"e\",\r\n      name: <Translate ns=\"weapon_CinnabarSpindle_gen\" key18=\"passiveName\" />,\r\n      fields: [{\r\n        text: <Translate ns=\"weapon_CinnabarSpindle\" key18=\"name\" />,\r\n        formulaText: stats => <span>{data.defConv[stats.weapon.refineIndex]}% {Stat.printStat(\"finalDEF\", stats, true)} * {Stat.printStat(getTalentStatKey(\"skill\", stats) + \"_multi\", stats)}</span>,\r\n        formula: formula.skill,\r\n        variant: stats => stats.characterEle\r\n      }, {\r\n        text: <ColorText color=\"warning\">The Elemental Skill DMG increase is not currently being added to the character's skill damage as a singular damage number, pending future implemention.</ColorText>\r\n      }],\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.ab4d1ab9.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.ab59d094.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"bwi\",\r\n      name: \"Against Opponents Affected by Hydro/Cryo\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        dmg_: refinementVals[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.89864001.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.adae6f69.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"em\",\r\n      name: \"After Electro-related reactions\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        dmg_: refinementVals[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.4be78b63.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.b5dbc827.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.20c6dcc5.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.1270df37.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.bb6b5216.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.d99c41ea.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [16, 20, 24, 28, 32]\r\nconst refinementVals2 = [6, 7.5, 9, 10.5, 12]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    skill_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    skill_critRate_: refinementVals2[stats.weapon.refineIndex]\r\n  }),\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.c9c75b4d.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.3488f8ce.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { st } from '../../../Characters/SheetUtil'\r\nconst cds = [15, 14, 13, 12, 11]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"dmg\"),\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }, {\r\n      text: \"CD\",\r\n      value: stats => `${cds[stats.weapon.refineIndex]}s`\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.973aa9e0.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.3c590be9.png\";","import { WeaponData } from 'pipeline'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport ImgIcon from '../../../../Components/Image/ImgIcon'\r\nimport { sgt } from '../../../Characters/SheetUtil'\r\nconst tr = (strKey: string) => <Translate ns=\"weapon_FreedomSworn_gen\" key18={strKey} />\r\nconst dmg_ = [10, 12.5, 15, 17.5, 20]\r\nconst auto = [16, 20, 24, 28, 32]\r\nconst atk_ = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    dmg_: dmg_[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    conditional: {\r\n      key: \"r\",\r\n      partyBuff: \"partyAll\",\r\n      header: {\r\n        title: tr(`passiveName`),\r\n        icon: stats => <ImgIcon size={2} sx={{ m: -1 }} src={stats.ascension < 2 ? icon : iconAwaken} />,\r\n      },\r\n      description: stats => tr(`passiveDescription.${stats.weapon.refineIndex}`),\r\n      name: <Translate ns=\"weapon_FreedomSworn\" key18=\"name\" />,\r\n      stats: stats => ({\r\n        atk_: atk_[stats.weapon.refineIndex],\r\n        normal_dmg_: auto[stats.weapon.refineIndex],\r\n        charged_dmg_: auto[stats.weapon.refineIndex],\r\n        plunging_dmg_: auto[stats.weapon.refineIndex],\r\n      }),\r\n      fields: [{\r\n        text: sgt(\"duration\"),\r\n        value: 12,\r\n        unit: \"s\"\r\n      }]\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.a4877b31.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.48e283db.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [14, 17.5, 21, 24.5, 28]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"v\",\r\n      name: \"HP > 90%\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        critRate_: refinementVals[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.93725118.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.571984ea.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [6, 7.5, 9, 10.5, 12]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"is\",\r\n      name: \"Elemental Hits\",\r\n      maxStack: 2,\r\n      stats: stats => ({\r\n        dmg_: refinementVals[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.cd4b1a5f.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.bec3dd46.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [20, 24, 28, 32, 36]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"bft\",\r\n      name: \"Against Opponents Affected by Pyro/Electro\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        dmg_: refinementVals[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.7453eac5.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.5bef1799.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport { allElements } from '../../../../Types/consts'\r\nimport { Translate } from '../../../../Components/Translate'\r\nconst ele_dmg_s = [12, 15, 18, 21, 24]\r\nconst ele_dmg_ss = [\r\n  [8, 16, 28],\r\n  [10, 20, 35],\r\n  [12, 24, 42],\r\n  [14, 28, 49],\r\n  [16, 32, 56]\r\n]\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => Object.fromEntries(allElements.map(ele => [`${ele}_dmg_`, ele_dmg_s[stats.weapon.refineIndex]])),\r\n  document: [{\r\n    conditional: {//Emblem\r\n      key: \"em\",\r\n      name: <Translate ns=\"weapon_MistsplitterReforged\" key18=\"emblem\" />,\r\n      states: Object.fromEntries([1, 2, 3].map(stacks => [stacks, {\r\n        name: <Translate ns=\"sheet\" key18=\"stack\" values={{ count: stacks }} />,\r\n        stats: stats => ({\r\n          [`${stats.characterEle}_dmg_`]: ele_dmg_ss[stats.weapon.refineIndex][stacks - 1]\r\n        })\r\n      }]))\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.7d3625bd.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.5c70f0b6.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport { KeyPath } from '../../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../../formula'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport formula, { data } from './data'\r\nimport Stat from '../../../../Stat'\r\nimport { st } from '../../../Characters/SheetUtil'\r\n\r\nconst path = KeyPath<FormulaPathBase>().weapon.PrimordialJadeCutter\r\nconst refinementVals_hp = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    hp_: refinementVals_hp[stats.weapon.refineIndex],\r\n    modifiers: { atk: [path.bonus()] }\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"increase.atk\"),\r\n      formulaText: stats => <span>{data.hp_atk[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats, true)}</span>,\r\n      formula: formula.bonus,\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.3f9b3d97.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.c10914ba.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [4, 5, 6, 7, 8]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"ss\",\r\n      name: \"Normal/Charged Attack Hits\",\r\n      maxStack: 4,\r\n      stats: stats => ({\r\n        atk_: refinementVals[stats.weapon.refineIndex],\r\n        def_: refinementVals[stats.weapon.refineIndex]\r\n      }),\r\n      fields: [{\r\n        text: \"Duration\",\r\n        value: \"6s\"\r\n      }]\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.d09f189d.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.3cc66671.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [8, 10, 12, 14, 16]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"f\",\r\n      name: \"Opponents Damaged\",\r\n      maxStack: 5,\r\n      stats: stats => ({\r\n        critRate_: refinementVals[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.01d3c4f2.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.8feb48fc.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"r\",\r\n      name: \"Elemental Skill Resets CD\",\r\n      maxStack: 1,\r\n      stats: () => ({\r\n        cdRed_: 100\r\n      })\r\n    }\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.077910f7.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.45eee363.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.6aaee076.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.0bfa1ddc.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"d\",\r\n      name: \"After Elemental Burst\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        atk_: refinementVals[stats.weapon.refineIndex],\r\n        moveSPD_: refinementVals[stats.weapon.refineIndex],\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.a8e1bd9b.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.5b4222b0.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { st } from '../../../Characters/SheetUtil'\r\nconst refinementVals = [4, 5, 6, 7, 8]\r\nconst refinementMoveSpdVals = [10, 10, 10, 10, 10]\r\nconst refinementatkSpdVals = [10, 10, 10, 10, 10]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    critRate_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    conditional: {\r\n      key: \"spf\",\r\n      name: \"After Elemental Burst\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        moveSPD_: refinementMoveSpdVals[stats.weapon.refineIndex],\r\n        atkSPD_: refinementatkSpdVals[stats.weapon.refineIndex],\r\n      }),\r\n      fields: [{\r\n        text: st(\"dmg\"),\r\n        formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n        formula: formula.dmg,\r\n        variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n      }]\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.6b8dbad2.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.864e1189.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [20, 25, 30, 35, 40]\r\nconst refinementAtkVals = [4, 5, 6, 7, 8]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    shield_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    conditional: {\r\n      key: \"gm\",\r\n      name: \"Hits\",\r\n      states: {\r\n        wo: {\r\n          name: \"Without shield\",\r\n          maxStack: 5,\r\n          stats: stats => ({\r\n            atk_: refinementAtkVals[stats.weapon.refineIndex]\r\n          })\r\n        },\r\n        w: {\r\n          name: \"With shield\",\r\n          maxStack: 5,\r\n          stats: stats => ({\r\n            atk_: 2 * refinementAtkVals[stats.weapon.refineIndex]\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.2f78914a.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.da4dfde6.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { st } from '../../../Characters/SheetUtil'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => stats.characterKey?.startsWith(\"Traveler\") ? {\r\n    atk: 66\r\n  } : {},\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"dmg\"),\r\n      formulaText: stats => <span>200% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.f439e133.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.039f435e.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"ih\",\r\n      name: \"Not Taking DMG\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        dmg_: refinementVals[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.397ac0a2.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.98edeb9a.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport Stat from '../../../../Stat'\r\nimport { sgt } from '../../../Characters/SheetUtil'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    normal_dmg_: data.dmg_[stats.weapon.refineIndex],\r\n    charged_dmg_: data.dmg_[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: sgt(\"healing\"),\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.regen,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.b80515f1.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.0c4ee0e0.png\";","import { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport formula, { data } from './data'\r\nimport Stat from '../../../../Stat'\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport { st } from '../../../Characters/SheetUtil'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"dmg\"),\r\n      formulaText: stats => <span>{data.vals[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.e7105cf0.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.35486f4f.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport formula, { data } from './data'\r\nimport Stat from '../../../../Stat'\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport { sgt } from '../../../Characters/SheetUtil'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: sgt(\"healing\"),\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","import AmenomaKageuchi from './AmenomaKageuchi'\r\nimport AquilaFavonia from './AquilaFavonia'\r\nimport BlackcliffLongsword from './BlackcliffLongsword'\r\nimport CinnabarSpindle from './CinnabarSpindle'\r\nimport CoolSteel from './CoolSteel'\r\nimport DarkIronSword from './DarkIronSword'\r\nimport DullBlade from './DullBlade'\r\nimport FavoniusSword from './FavoniusSword'\r\nimport FesteringDesire from './FesteringDesire'\r\nimport FilletBlade from './FilletBlade'\r\nimport FreedomSworn from './FreedomSworn'\r\nimport HarbingerOfDawn from './HarbingerOfDawn'\r\nimport IronSting from './IronSting'\r\nimport LionsRoar from './LionsRoar'\r\nimport MistsplitterReforged from './MistsplitterReforged'\r\nimport PrimordialJadeCutter from './PrimordialJadeCutter'\r\nimport PrototypeRancour from './PrototypeRancour'\r\nimport RoyalLongsword from './RoyalLongsword'\r\nimport SacrificialSword from './SacrificialSword'\r\nimport SilverSword from './SilverSword'\r\nimport SkyriderSword from './SkyriderSword'\r\nimport SkywardBlade from './SkywardBlade'\r\nimport SummitShaper from './SummitShaper'\r\nimport SwordOfDescension from './SwordOfDescension'\r\nimport TheAlleyFlash from './TheAlleyFlash'\r\nimport TheBlackSword from './TheBlackSword'\r\nimport TheFlute from './TheFlute'\r\nimport TravelersHandySword from './TravelersHandySword'\r\nconst sword = {\r\n  AmenomaKageuchi,\r\n  AquilaFavonia,\r\n  BlackcliffLongsword,\r\n  CinnabarSpindle,\r\n  CoolSteel,\r\n  DarkIronSword,\r\n  DullBlade,\r\n  FavoniusSword,\r\n  FesteringDesire,\r\n  FilletBlade,\r\n  FreedomSworn,\r\n  HarbingerOfDawn,\r\n  IronSting,\r\n  LionsRoar,\r\n  MistsplitterReforged,\r\n  PrimordialJadeCutter,\r\n  PrototypeRancour,\r\n  RoyalLongsword,\r\n  SacrificialSword,\r\n  SilverSword,\r\n  SkyriderSword,\r\n  SkywardBlade,\r\n  SummitShaper,\r\n  SwordOfDescension,\r\n  TheAlleyFlash,\r\n  TheBlackSword,\r\n  TheFlute,\r\n  TravelersHandySword,\r\n} as const\r\nexport default sword","export default __webpack_public_path__ + \"static/media/Icon.adde0953.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.bc280184.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.1764d2d9.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.12716f16.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"pa\",\r\n      name: \"Opponents Defeated\",\r\n      maxStack: 3,\r\n      stats: stats => ({\r\n        atk_: refinementVals[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.4e27d7f2.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.341b6273.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst dmg_s = [40, 50, 60, 70, 80]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"s\",\r\n      name: \"Against Slimes\",\r\n      stats: stats => ({\r\n        dmg_: dmg_s[stats.weapon.refineIndex],\r\n      }),\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.e17cff36.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.6c2539d3.png\";","import { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport { st } from '../../../Characters/SheetUtil'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"dmg\"),\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.73b06a2e.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.1bbb5cd4.png\";","export default __webpack_public_path__ + \"static/media/Icon.7df1dc17.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.154d5264.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst dmg_s = [20, 24, 28, 32, 36]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"bfw\",\r\n      name: \"Against Opponents Affected by Hydro/Pyro\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        dmg_: dmg_s[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.346873a8.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.78f30f5d.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { st } from '../../../Characters/SheetUtil'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"dmg\"),\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }, {\r\n      text: \"Opponents affected by Cryo\",\r\n      formulaText: stats => <span>{data.dmgc[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmgc,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.17edaabf.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.12ee7e85.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport { KeyPath } from '../../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../../formula'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport formula, { data } from './data'\r\nimport Stat from '../../../../Stat'\r\nimport { st } from '../../../Characters/SheetUtil'\r\nconst enerRech = [30, 35, 40, 45, 50, 55]\r\nconst path = KeyPath<FormulaPathBase>().weapon.EngulfingLightning\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: {\r\n    modifiers: { atk_: [path.conv()] }\r\n  },\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"increase.atk\"),\r\n      formulaText: stats => <span>Min( {data.enerRechConv[stats.weapon.refineIndex]}% * ( {Stat.printStat(\"enerRech_\", stats, true)} - 100% ) , {data.enerRechMax[stats.weapon.refineIndex]}% )</span>,\r\n      formula: formula.conv,\r\n      fixed: 1,\r\n      unit: \"%\",\r\n    }],\r\n    conditional: {\r\n      key: \"e\",\r\n      name: st(\"afterUse.burst\"),\r\n      stats: stats => ({\r\n        enerRech_: enerRech[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.1f8f51ae.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.254b9f4c.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\n// const refinementVals = [60, 70, 80, 90, 100]\r\n// const refinementCdVals = [12, 10.5, 9, 7.5, 6]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.037ea580.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.382b20ce.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { st } from '../../../Characters/SheetUtil'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"dmg\"),\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.755538bf.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.4e71ad30.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.b8cfeb5c.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.474ccab8.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst skill_dmg_s = [6, 7.5, 9, 10.5, 12]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    skill_dmg_: skill_dmg_s[stats.weapon.refineIndex]\r\n  }),\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.7a3f2d56.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.ed3bf0f6.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementCritVals = [3, 4, 5, 6, 7]\r\nconst refinementAtkVals = [7, 8, 9, 10, 11]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"lau\",\r\n      name: \"Liyue Members\",\r\n      maxStack: 4,\r\n      stats: stats => ({\r\n        atk_: refinementAtkVals[stats.weapon.refineIndex],\r\n        critRate_: refinementCritVals[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.58dcbe61.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.768617e5.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [3.2, 3.9, 4.6, 5.3, 6]\r\nconst refinementDmgVals = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"e\",\r\n      name: \"On Hit\",\r\n      states: {\r\n        l7: {\r\n          name: \"On Hit\",\r\n          maxStack: 6,\r\n          stats: stats => ({\r\n            atk_: refinementVals[stats.weapon.refineIndex]\r\n          })\r\n        },\r\n        a7: {\r\n          name: \"At 7 stacks\",\r\n          stats: stats => ({\r\n            atk_: refinementVals[stats.weapon.refineIndex] * 7,\r\n            dmg_: refinementDmgVals[stats.weapon.refineIndex]\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.f15bd638.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.a8e1b228.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport { st } from '../../../Characters/SheetUtil'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst dmg_ = [8, 10, 12, 14, 16]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"ma\",\r\n      name: st(\"afterUse.skill\"),\r\n      maxStack: 2,\r\n      stats: stats => ({\r\n        normal_dmg_: dmg_[stats.weapon.refineIndex],\r\n        charged_dmg_: dmg_[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.6a41ce68.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.c47469f7.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst crit_ = [8, 10, 12, 14, 16]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"f\",\r\n      name: \"Opponents Damaged\",\r\n      maxStack: 5,\r\n      stats: stats => ({\r\n        critRate_: crit_[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.d69b116a.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.0a18593a.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst crit_ = [8, 10, 12, 14, 16]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    critRate_: crit_[stats.weapon.refineIndex],\r\n    atkSPD_: 12\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: <Translate ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.e5d01dca.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.4164c6d2.png\";","import { WeaponData } from 'pipeline'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport { KeyPath } from '../../../../Util/KeyPathUtil'\r\nimport { FormulaPathBase } from '../../../formula'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport formula, { data } from './data'\r\nimport { st } from '../../../Characters/SheetUtil'\r\nconst path = KeyPath<FormulaPathBase>().weapon.StaffOfHoma\r\nconst refinementVals_hp = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    hp_: refinementVals_hp[stats.weapon.refineIndex],\r\n    modifiers: { atk: [path.esj()] }\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"increase.atk\"),\r\n      formulaText: stats => <span>{data.hp_atk[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats, true)}</span>,\r\n      formula: formula.esj,\r\n    }],\r\n    conditional: {\r\n      key: \"hp\",\r\n      name: \"HP < 50%\",\r\n      maxStack: 1,\r\n      stats: {\r\n        modifiers: { atk: [path.esjadd()] }\r\n      },\r\n      fields: [{\r\n        text: st(\"increase.atk\"),\r\n        formulaText: stats => <span>{data.hp_atk_add[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats, true)}</span>,\r\n        formula: formula.esjadd,\r\n      }],\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.540bf184.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.3001e90d.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst burst_ = [16, 20, 24, 28, 32]\r\nconst burstCR_ = [6, 7.5, 9, 10.5, 12]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    burst_dmg_: burst_[stats.weapon.refineIndex],\r\n    burst_critRate_: burstCR_[stats.weapon.refineIndex]\r\n  }),\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.dea77a58.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.c6228ac7.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst shield_ = [20, 25, 30, 35, 40]\r\nconst atk_ = [4, 5, 6, 7, 8]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    shield_: shield_[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    conditional: {\r\n      key: \"gm\",\r\n      name: \"Hits\",\r\n      states: {\r\n        wo: {\r\n          name: \"Without shield\",\r\n          maxStack: 5,\r\n          stats: stats => ({\r\n            atk_: atk_[stats.weapon.refineIndex]\r\n          })\r\n        },\r\n        w: {\r\n          name: \"With shield\",\r\n          maxStack: 5,\r\n          stats: stats => ({\r\n            atk_: 2 * atk_[stats.weapon.refineIndex]\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.b92555bf.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.5a3c65cb.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { range } from '../../../../Util/Util'\r\nimport { Translate } from '../../../../Components/Translate'\r\nconst energyRange = range(4, 36).map(i => i * 10)\r\nconst ratio = [0.12, 0.15, 0.18, 0.21, 0.24]\r\nconst max = [40, 50, 60, 70, 80]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"pa\",\r\n      name: <Translate ns=\"weapon_WavebreakersFin\" key18=\"party\" />,\r\n      states: Object.fromEntries(energyRange.map(c => [c, {\r\n        name: `${c}`,\r\n        stats: stats => ({\r\n          burst_dmg_: Math.min(max[stats.weapon.refineIndex], ratio[stats.weapon.refineIndex] * c),\r\n        })\r\n      }]))\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.d57f1c6f.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.1c3202e3.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst dmg_ = [24, 30, 36, 42, 48]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    normal_dmg_: dmg_[stats.weapon.refineIndex]\r\n  }),\r\n  document: []\r\n}\r\nexport default weapon","import BeginnersProtector from './BeginnersProtector'\r\nimport BlackcliffPole from './BlackcliffPole'\r\nimport BlackTassel from './BlackTassel'\r\nimport CrescentPike from './CrescentPike'\r\nimport Deathmatch from './Deathmatch'\r\nimport DragonsBane from './DragonsBane'\r\nimport DragonspineSpear from './DragonspineSpear'\r\nimport EngulfingLightning from './EngulfingLightning'\r\nimport FavoniusLance from './FavoniusLance'\r\nimport Halberd from './Halberd'\r\nimport IronPoint from './IronPoint'\r\nimport KitainCrossSpear from './KitainCrossSpear'\r\nimport LithicSpear from './LithicSpear'\r\nimport PrimordialJadeWingedSpear from './PrimordialJadeWingedSpear'\r\nimport PrototypeStarglitter from './PrototypeStarglitter'\r\nimport RoyalSpear from './RoyalSpear'\r\nimport SkywardSpine from './SkywardSpine'\r\nimport StaffOfHoma from './StaffOfHoma'\r\nimport TheCatch from './TheCatch'\r\nimport VortexVanquisher from './VortexVanquisher'\r\nimport WavebreakersFin from './WavebreakersFin'\r\nimport WhiteTassel from './WhiteTassel'\r\nconst polearm = {\r\n  BeginnersProtector,\r\n  BlackcliffPole,\r\n  BlackTassel,\r\n  CrescentPike,\r\n  Deathmatch,\r\n  DragonsBane,\r\n  DragonspineSpear,\r\n  EngulfingLightning,\r\n  FavoniusLance,\r\n  Halberd,\r\n  IronPoint,\r\n  KitainCrossSpear,\r\n  LithicSpear,\r\n  PrimordialJadeWingedSpear,\r\n  PrototypeStarglitter,\r\n  RoyalSpear,\r\n  SkywardSpine,\r\n  StaffOfHoma,\r\n  TheCatch,\r\n  VortexVanquisher,\r\n  WavebreakersFin,\r\n  WhiteTassel,\r\n} as const\r\nexport default polearm","export default __webpack_public_path__ + \"static/media/Icon.db8438c8.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.c38ec4af.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [2, 2.5, 3, 3.5, 4]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"ug\",\r\n      name: \"Duration not on Field (1s / stack)\",\r\n      maxStack: 10,\r\n      stats: stats => ({\r\n        dmg_: refinementVals[stats.weapon.refineIndex],\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.c9ca6e66.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.bf9187e6.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst refinementDmgVals = [8, 10, 12, 14, 16]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    normal_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    charged_dmg_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    conditional: {\r\n      key: \"sw\",\r\n      name: \"Arrow Flight Duration (0.1s / stack)\",\r\n      maxStack: 5,\r\n      stats: stats => ({\r\n        normal_dmg_: refinementDmgVals[stats.weapon.refineIndex],\r\n        charged_dmg_: refinementDmgVals[stats.weapon.refineIndex]\r\n      }),\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.c01f5814.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.957e341e.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst atk_s = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"pa\",\r\n      name: \"Opponents Defeated\",\r\n      maxStack: 3,\r\n      stats: stats => ({\r\n        atk_: atk_s[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.4b204065.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.59a83128.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [4, 5, 6, 7, 8]\r\nconst refinementSpdVals = [1.2, 1.5, 1.8, 2.1, 2.4]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"ia\",\r\n      name: \"Normal/Charged Attack Hits\",\r\n      maxStack: 4,\r\n      stats: stats => ({\r\n        atk_: refinementVals[stats.weapon.refineIndex],\r\n        atkSPD_: refinementSpdVals[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.188f638c.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.599c5c1a.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport ImgIcon from '../../../../Components/Image/ImgIcon'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport { sgt } from '../../../Characters/SheetUtil'\r\nconst tr = (strKey: string) => <Translate ns=\"weapon_ElegyForTheEnd_gen\" key18={strKey} />\r\nconst refinementEM = [60, 75, 90, 105, 120]\r\nconst eleMass = [100, 125, 150, 175, 200]\r\nconst atk_s = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    eleMas: refinementEM[stats.weapon.refineIndex],\r\n  }),\r\n  document: [{\r\n    conditional: {\r\n      key: \"pr\",\r\n      partyBuff: \"partyAll\",\r\n      header: {\r\n        title: tr(`passiveName`),\r\n        icon: stats => <ImgIcon size={2} sx={{ m: -1 }} src={stats.ascension < 2 ? icon : iconAwaken} />,\r\n      },\r\n      description: stats => tr(`passiveDescription.${stats.weapon.refineIndex}`),\r\n      name: <Translate ns=\"weapon_ElegyForTheEnd\" key18=\"condName\" />,\r\n      stats: stats => ({\r\n        eleMas: eleMass[stats.weapon.refineIndex],\r\n        atk_: atk_s[stats.weapon.refineIndex]\r\n      }),\r\n      fields: [{\r\n        text: sgt(\"duration\"),\r\n        value: 12,\r\n        unit: \"s\"\r\n      }]\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.d1549663.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.cf9ffb01.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\n// const refinementVals = [60, 70, 80, 90, 100]\r\n// const refinementCdVals = [12, 10.5, 9, 7.5, 6]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.c05b8cfe.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.d622f03a.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport { Translate } from '../../../../Components/Translate'\r\nconst normal_dmg_s = [16, 20, 24, 28, 32]\r\nconst charged_dmg_s = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    normal_dmg_: normal_dmg_s[stats.weapon.refineIndex],\r\n    charged_dmg_: charged_dmg_s[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    conditional: {//100% energy\r\n      key: \"e\",\r\n      name: <Translate ns=\"weapon_Hamayumi\" key18=\"ener\" />,\r\n      stats: stats => ({\r\n        normal_dmg_: normal_dmg_s[stats.weapon.refineIndex],\r\n        charged_dmg_: charged_dmg_s[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.56066668.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.abd5b73b.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.4ba15b38.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.2f02d002.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: <Translate ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.f5e13118.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.c4d22e15.png\";","import { WeaponData } from 'pipeline'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst skill_ = [20, 25, 30, 35, 40]\r\nconst normal_ = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"a\",\r\n      name: <Translate ns=\"sheet\" key18=\"hitOp.normal\" />,\r\n      stats: stats => ({\r\n        skill_dmg_: skill_[stats.weapon.refineIndex],\r\n      })\r\n    },\r\n  }, {\r\n    conditional: {\r\n      key: \"s\",\r\n      name: <Translate ns=\"sheet\" key18=\"hitOp.skill\" />,\r\n      stats: stats => ({\r\n        normal_dmg_: normal_[stats.weapon.refineIndex],\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.546d4905.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.ca5819cb.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { range } from '../../../../Util/Util'\r\nimport { Translate } from '../../../../Components/Translate'\r\n\r\nconst energyRange = range(4, 36).map(i => i * 10)\r\nconst ratio = [0.12, 0.15, 0.18, 0.21, 0.24]\r\nconst max = [40, 50, 60, 70, 80]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"pa\",\r\n      name: <Translate ns=\"weapon_MouunsMoon\" key18=\"party\" />,\r\n      states: Object.fromEntries(energyRange.map(c => [c, {\r\n        name: `${c}`,\r\n        stats: stats => ({\r\n          burst_dmg_: Math.min(max[stats.weapon.refineIndex], ratio[stats.weapon.refineIndex] * c),\r\n        })\r\n      }]))\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.21e410ca.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.fc15be6c.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { Translate } from '../../../../Components/Translate'\r\n\r\nconst ele_dmg = [12, 15, 18, 21, 24]\r\nconst ashen = [[10, 20, 30, 48], [12.5, 25, 37.5, 60], [15, 30, 45, 72], [17.5, 35, 52.8, 84], [20, 40, 60, 96]]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    skill_dmg_: ele_dmg[stats.weapon.refineIndex],\r\n    burst_dmg_: ele_dmg[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    conditional: {\r\n      key: \"a\",\r\n      name: <Translate ns=\"weapon_PolarStar\" key18=\"ashen\" />,\r\n      states: Object.fromEntries([1, 2, 3, 4].map(stacks => [stacks, {\r\n        name: <Translate ns=\"sheet\" key18=\"stack\" values={{ count: stacks }} />,\r\n        stats: stats => ({\r\n          atk_: ashen[stats.weapon.refineIndex][stacks - 1]\r\n        })\r\n      }]))\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.47c1d129.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.b78a7d81.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport { sgt, st } from '../../../Characters/SheetUtil'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => {\r\n    if (stats.characterKey === \"Aloy\") return {\r\n      atk: 66\r\n    }\r\n    return undefined\r\n  },\r\n  document: [{\r\n    conditional: {\r\n      key: \"ss\",\r\n      name: st(\"hitOp.cryo\"),\r\n      maxStack: 2,\r\n      stats: {\r\n        normal_dmg_: 10,\r\n        charged_dmg_: 10,\r\n      },\r\n      fields: [{\r\n        text: sgt(\"duration\"),\r\n        value: 6,\r\n        unit: \"s\"\r\n      }]\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.6332b0c0.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.7e1bbf9d.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst atk_s = [36, 45, 54, 63, 72]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"u\",\r\n      name: \"Against Weak Points\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        moveSPD_: 10,\r\n        atk_: atk_s[stats.weapon.refineIndex]\r\n      }),\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.3d9072b2.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.6af8a4ce.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"bfw\",\r\n      name: \"Against Opponents Affected by Hydro/Pyro\",\r\n      stats: stats => ({\r\n        dmg_: dmg_s[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.4709b60f.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.d57c2aa7.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport formula, { data } from './data'\r\nimport Stat from '../../../../Stat'\r\nimport { sgt } from '../../../Characters/SheetUtil'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: sgt(\"healing\"),\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.b33b7c45.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.22ad2064.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [8, 10, 12, 14, 16]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"f\",\r\n      name: \"Opponents Damaged\",\r\n      maxStack: 5,\r\n      stats: stats => ({\r\n        critRate_: refinementVals[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.2f42b057.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.c187a607.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [40, 50, 60, 70, 80]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    normal_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    charged_dmg_: -10\r\n  }),\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.fc4eaa2a.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.9500f18e.png\";","import { WeaponData } from 'pipeline'\r\n// import { IConditionals } from '../../../../Types/IConditional'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\n// const refinementVals = [40, 50, 60, 70, 80]\r\n// const refinementCdVals = [30, 26, 22, 19, 16]\r\n// const conditionals: IConditionals = {\r\n//   c: {\r\n//     name: \"Elemental Skill Ends CD\",\r\n//     stats: { cdRed_: 100 }),\r\n//   }\r\n// }\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  // conditionals,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.a1c854c2.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.df2528c3.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.8b79b664.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.4d2d3eec.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [24, 30, 36, 42, 48]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    weakspotDMG_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.157059d9.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.cfc45d67.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { st } from '../../../Characters/SheetUtil'\r\n\r\nconst critd_s = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    critDMG_: critd_s[stats.weapon.refineIndex]\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"dmg\"),\r\n      formulaText: stats => <span>125% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.b314d244.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.f46141b4.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [36, 42, 48, 54, 60]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: () => ({\r\n    normal_dmg_: -10,\r\n    charged_dmg_: -10\r\n  }),\r\n  document: [{\r\n    conditional: {\r\n      key: \"s\",\r\n      name: \"Normal/Charged Attack Hits within 0.3s\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        // +10 to neutralize the -10\r\n        normal_dmg_: refinementVals[stats.weapon.refineIndex] + 10,\r\n        charged_dmg_: refinementVals[stats.weapon.refineIndex] + 10\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.6e96ed39.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.26540c44.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [24, 30, 36, 42, 48]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    skill_dmg_: refinementVals[stats.weapon.refineIndex],\r\n    burst_dmg_: refinementVals[stats.weapon.refineIndex]\r\n  }),\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.7668ec5d.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.86b92f01.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: <Translate ns=\"sheet\" key18=\"dmg\" />,\r\n      formulaText: stats => <span>{data.vals[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.52b7588e.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.bb54fb70.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nimport { Translate } from '../../../../Components/Translate'\r\nconst atk_s = [20, 25, 30, 35, 40]\r\nconst ele_dmg_ss = [\r\n  [12, 24, 40],\r\n  [15, 30, 50],\r\n  [18, 36, 60],\r\n  [21, 42, 70],\r\n  [24, 48, 80]\r\n]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({ atk_: atk_s[stats.weapon.refineIndex] }),\r\n  document: [{\r\n    conditional: {\r\n      key: \"em\",\r\n      name: <Translate ns=\"weapon_ThunderingPulse\" key18=\"emblem\" />,\r\n      states: Object.fromEntries([1, 2, 3].map(stacks => [stacks, {\r\n        name: <Translate ns=\"sheet\" key18=\"stack\" values={{ count: stacks }} />,\r\n        stats: stats => {\r\n          return {\r\n            normal_dmg_: ele_dmg_ss[stats.weapon.refineIndex][stacks - 1]\r\n          }\r\n        }\r\n      }]))\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.dd15c13a.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.b1c71452.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst atk_s = [16, 20, 24, 28, 32]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"ww\",\r\n      name: \"After Elemental Skill\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        atk_: atk_s[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","import AlleyHunter from './AlleyHunter'\r\nimport AmosBow from './AmosBow'\r\nimport BlackcliffWarbow from './BlackcliffWarbow'\r\nimport CompoundBow from './CompoundBow'\r\nimport ElegyForTheEnd from './ElegyForTheEnd'\r\nimport FavoniusWarbow from './FavoniusWarbow'\r\nimport Hamayumi from './Hamayumi'\r\nimport HuntersBow from './HuntersBow'\r\nimport Messenger from './Messenger'\r\nimport MitternachtsWaltz from './MitternachtsWaltz'\r\nimport MouunsMoon from './MouunsMoon'\r\nimport PolarStar from './PolarStar'\r\nimport Predator from './Predator'\r\nimport PrototypeCrescent from './PrototypeCrescent'\r\nimport RavenBow from './RavenBow'\r\nimport RecurveBow from './RecurveBow'\r\nimport RoyalBow from './RoyalBow'\r\nimport Rust from './Rust'\r\nimport SacrificialBow from './SacrificialBow'\r\nimport SeasonedHuntersBow from './SeasonedHuntersBow'\r\nimport SharpshootersOath from './SharpshootersOath'\r\nimport SkywardHarp from './SkywardHarp'\r\nimport Slingshot from './Slingshot'\r\nimport TheStringless from './TheStringless'\r\nimport TheViridescentHunt from './TheViridescentHunt'\r\nimport ThunderingPulse from './ThunderingPulse'\r\nimport WindblumeOde from './WindblumeOde'\r\nconst bow = {\r\n  AlleyHunter,\r\n  AmosBow,\r\n  BlackcliffWarbow,\r\n  CompoundBow,\r\n  ElegyForTheEnd,\r\n  FavoniusWarbow,\r\n  Hamayumi,\r\n  HuntersBow,\r\n  Messenger,\r\n  MitternachtsWaltz,\r\n  MouunsMoon,\r\n  PolarStar,\r\n  Predator,\r\n  PrototypeCrescent,\r\n  RavenBow,\r\n  RecurveBow,\r\n  RoyalBow,\r\n  Rust,\r\n  SacrificialBow,\r\n  SeasonedHuntersBow,\r\n  SharpshootersOath,\r\n  SkywardHarp,\r\n  Slingshot,\r\n  TheStringless,\r\n  TheViridescentHunt,\r\n  ThunderingPulse,\r\n  WindblumeOde,\r\n} as const\r\nexport default bow","export default __webpack_public_path__ + \"static/media/Icon.4a7b44b1.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.78c7da7c.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.d3993174.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.9db81f0a.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"pa\",\r\n      name: \"Opponents Defeated\",\r\n      maxStack: 3,\r\n      stats: stats => ({\r\n        atk_: refinementVals[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.e2efd4d4.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.0f2ccd32.png\";","import { WeaponData } from 'pipeline'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst cdmg_ = [16, 20, 24, 28, 32]\r\nconst atk_ = [8, 10, 12, 14, 16]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"a\",\r\n      name: <Translate ns=\"sheet\" key18=\"hitOp.normal\" />,\r\n      stats: stats => ({\r\n        charged_dmg_: cdmg_[stats.weapon.refineIndex],\r\n      })\r\n    },\r\n  }, {\r\n    conditional: {\r\n      key: \"c\",\r\n      name: <Translate ns=\"sheet\" key18=\"hitOp.charged\" />,\r\n      stats: stats => ({\r\n        atk_: atk_[stats.weapon.refineIndex],\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.201aa93a.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.26047efd.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"r\",\r\n      name: \"After Hydro-Related Reactions\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        atk_: refinementVals[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.97165cb5.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.f05aaa35.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey } from '../../../../Build/Build'\r\nimport ColorText from '../../../../Components/ColoredText'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst heal_ = [10, 12.5, 15, 17.5, 20]\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    heal_: heal_[stats.weapon.refineIndex],\r\n  }),\r\n  document: [{\r\n    fields: [\r\n      {\r\n        text: <Translate ns=\"weapon_EverlastingMoonglow\" key18=\"name\" />,\r\n        formulaText: stats => <span>{data.hp_conv[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats, true)} * {Stat.printStat(getTalentStatKey(\"elemental\", stats) + \"_multi\", stats)}</span>,\r\n        formula: formula.norm,\r\n        variant: stats => stats.characterEle\r\n      },\r\n      {\r\n        text: <ColorText color=\"warning\">The normal damage increase is not currently being added to the character's normal damage as a singular damage number, pending future implemention.</ColorText>\r\n      }\r\n    ],\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.8bd0d67d.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.9f80e122.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { st } from '../../../Characters/SheetUtil'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"dmg\"),\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.3f8b7b86.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.5b0db871.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\n// const refinementVals = [60, 70, 80, 90, 100]\r\n// const refinementCdVals = [12, 10.5, 9, 7.5, 6]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.8aeff565.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.535c9aee.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { st } from '../../../Characters/SheetUtil'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"dmg\"),\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }, {\r\n      text: \"Opponents affected by Cryo\",\r\n      formulaText: stats => <span>{data.dmgc[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmgc,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.6f2b4b5e.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.b62d393c.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { Translate } from '../../../../Components/Translate'\r\nimport ImgIcon from '../../../../Components/Image/ImgIcon'\r\nimport ColorText from '../../../../Components/ColoredText'\r\nimport { sgt } from '../../../Characters/SheetUtil'\r\nconst refinementVals = [10, 12.5, 15, 17.5, 20]\r\nconst tr = (strKey: string) => <Translate ns=\"weapon_HakushinRing_gen\" key18={strKey} />\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"r\",\r\n      partyBuff: \"partyOnly\",\r\n      header: {\r\n        title: tr(`passiveName`),\r\n        icon: stats => <ImgIcon size={2} sx={{ m: -1 }} src={stats.ascension < 2 ? icon : iconAwaken} />,\r\n      },\r\n      description: stats => tr(`passiveDescription.${stats.weapon.refineIndex}`),\r\n      name: \"After Electro Elemental Reaction\",\r\n      states: {\r\n        an: {\r\n          name: <ColorText color=\"anemo\">{sgt(\"reaction.swirl\")}</ColorText>,\r\n          stats: stats => ({\r\n            anemo_dmg_: refinementVals[stats.weapon.refineIndex],\r\n            electro_dmg_: refinementVals[stats.weapon.refineIndex]\r\n          })\r\n        },\r\n        ge: {\r\n          name: <ColorText color=\"geo\">{sgt(\"reaction.crystallize\")}</ColorText>,\r\n          stats: stats => ({\r\n            geo_dmg_: refinementVals[stats.weapon.refineIndex],\r\n            electro_dmg_: refinementVals[stats.weapon.refineIndex]\r\n          })\r\n        },\r\n        py: {\r\n          name: <ColorText color=\"pyro\">{sgt(\"reaction.overloaded\")}</ColorText>,\r\n          stats: stats => ({\r\n            pyro_dmg_: refinementVals[stats.weapon.refineIndex],\r\n            electro_dmg_: refinementVals[stats.weapon.refineIndex]\r\n          })\r\n        },\r\n        hy: {\r\n          name: <ColorText color=\"hydro\">{sgt(\"reaction.electrocharged\")}</ColorText>,\r\n          stats: stats => ({\r\n            hydro_dmg_: refinementVals[stats.weapon.refineIndex],\r\n            electro_dmg_: refinementVals[stats.weapon.refineIndex]\r\n          })\r\n        },\r\n        cr: {\r\n          name: <ColorText color=\"cryo\">{sgt(\"reaction.Superconduct\")}</ColorText>,\r\n          stats: stats => ({\r\n            cryo_dmg_: refinementVals[stats.weapon.refineIndex],\r\n            electro_dmg_: refinementVals[stats.weapon.refineIndex]\r\n          })\r\n        },\r\n      }\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.71f8db02.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.a2a89083.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst refinementVals = [8, 10, 12, 14, 16]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: () => ({\r\n    moveSPD_: 10\r\n  }),\r\n  document: [{\r\n    conditional: {\r\n      key: \"bb\",\r\n      name: \"Duration on Field (4s / stack)\",\r\n      maxStack: 4,\r\n      stats: stats => ({\r\n        anemo_dmg_: refinementVals[stats.weapon.refineIndex],\r\n        geo_dmg_: refinementVals[stats.weapon.refineIndex],\r\n        electro_dmg_: refinementVals[stats.weapon.refineIndex],\r\n        hydro_dmg_: refinementVals[stats.weapon.refineIndex],\r\n        pyro_dmg_: refinementVals[stats.weapon.refineIndex],\r\n        cryo_dmg_: refinementVals[stats.weapon.refineIndex],\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.bb63c33a.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.38dd49cb.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"bst\",\r\n      name: \"Against Opponents Accefted by Hydro/Electro\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        dmg_: dmg_s[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.d8c394ce.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.0230429b.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst dmg_s = [8, 10, 12, 14, 16]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"is\",\r\n      name: \"Elemental Reactions\",\r\n      maxStack: 2,\r\n      stats: stats => ({\r\n        dmg_: dmg_s[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.eb71b8b1.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.a21e161d.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [4, 5, 6, 7, 8]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"gm\",\r\n      name: \"Hits on opponents\",\r\n      states: {\r\n        wo: {\r\n          name: \"Hits without shield\",\r\n          maxStack: 5,\r\n          stats: stats => ({\r\n            atk_: refinementVals[stats.weapon.refineIndex]\r\n          })\r\n        },\r\n        w: {\r\n          name: \"Hits with shield\",\r\n          maxStack: 5,\r\n          stats: stats => ({\r\n            atk_: 2 * refinementVals[stats.weapon.refineIndex]\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.8e9e94e6.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.dbd90041.png\";","import { WeaponData } from 'pipeline'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { sgt } from '../../../Characters/SheetUtil'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{\r\n      text: sgt(\"healing\"),\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.62fa4f02.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.19ca5f83.png\";","import { IWeaponSheet } from '../../../../Types/weapon'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nimport data_gen from './data_gen.json'\r\nimport { WeaponData } from 'pipeline'\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: []\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.a1ed0530.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.a8349991.png\";","import { WeaponData } from 'pipeline'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { sgt } from '../../../Characters/SheetUtil'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    fields: [{//TODO: party heal\r\n      text: sgt(\"healing\"),\r\n      formulaText: stats => <span>{data.heal[stats.weapon.refineIndex]}% {Stat.printStat(\"finalHP\", stats)} * {Stat.printStat(\"heal_multi\", stats)}</span>,\r\n      formula: formula.heal,\r\n      variant: \"success\"\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.2f199d8e.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.40e0f349.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst crit_s = [8, 10, 12, 14, 16]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"f\",\r\n      name: \"Opponents Damaged\",\r\n      maxStack: 5,\r\n      stats: stats => ({\r\n        critRate_: crit_s[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.fda708cd.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.3f46bb7c.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"c\",\r\n      name: \"After Elemental Skill\",\r\n      maxStack: 1,\r\n      stats: () => ({\r\n        cdRed_: 100\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.a12abe14.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.a88a8e62.png\";","import { WeaponData } from 'pipeline'\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from '../../../../Build/Build'\r\nimport Stat from '../../../../Stat'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport formula, { data } from './data'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { st } from '../../../Characters/SheetUtil'\r\n\r\nconst dmg_s = [12, 15, 18, 21, 24]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  stats: stats => ({\r\n    anemo_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    geo_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    electro_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    hydro_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    pyro_dmg_: dmg_s[stats.weapon.refineIndex],\r\n    cryo_dmg_: dmg_s[stats.weapon.refineIndex],\r\n  }),\r\n  document: [{\r\n    fields: [{\r\n      text: st(\"dmg\"),\r\n      formulaText: stats => <span>{data.dmg[stats.weapon.refineIndex]}% {Stat.printStat(getTalentStatKey(\"physical\", stats), stats)}</span>,\r\n      formula: formula.dmg,\r\n      variant: stats => getTalentStatKeyVariant(\"physical\", stats),\r\n    }]\r\n  }]\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.d9be0994.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.179ae998.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"ss\",\r\n      name: \"Hits\",\r\n      states: {\r\n        n: {\r\n          name: \"Normal attack\",\r\n          stats: stats => ({\r\n            skill_dmg_: refinementVals[stats.weapon.refineIndex],\r\n            burst_dmg_: refinementVals[stats.weapon.refineIndex],\r\n          })\r\n        },\r\n        s: {\r\n          name: \"Skill or Burst\",\r\n          stats: stats => ({\r\n            normal_dmg_: refinementVals[stats.weapon.refineIndex]\r\n          })\r\n        },\r\n        b: {\r\n          name: \"Both Normal & Skill/Burst\",\r\n          stats: stats => ({\r\n            skill_dmg_: refinementVals[stats.weapon.refineIndex],\r\n            burst_dmg_: refinementVals[stats.weapon.refineIndex],\r\n            normal_dmg_: refinementVals[stats.weapon.refineIndex]\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.c57a93cc.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.6c163fd5.png\";","import { WeaponData } from 'pipeline'\r\nimport { allElements } from '../../../../Types/consts'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport { Translate } from '../../../../Components/Translate'\r\nconst tr = (strKey: string) => <Translate ns=\"weapon_TheWidsith_gen\" key18={strKey} />\r\nconst refinementAtkVals = [60, 75, 90, 105, 120]\r\nconst refinementEleDmgVals = [48, 60, 72, 84, 96]\r\nconst refinementEleMasVals = [240, 300, 360, 420, 480]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"d\",\r\n      name: tr(`passiveName`),\r\n      states: {\r\n        r: {\r\n          name: \"Recitative\",\r\n          stats: stats => ({\r\n            atk_: refinementAtkVals[stats.weapon.refineIndex]\r\n          })\r\n        },\r\n        a: {\r\n          name: \"Aria\",\r\n          maxStack: 1,\r\n          stats: stats => Object.fromEntries(allElements.map(ele => [`${ele}_dmg_`, refinementEleDmgVals[stats.weapon.refineIndex]]))\r\n        },\r\n        i: {\r\n          name: \"Interlude\",\r\n          stats: stats => ({\r\n            eleMas: refinementEleMasVals[stats.weapon.refineIndex]\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.b52fd6f6.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.bfd9efa9.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nimport ImgIcon from '../../../../Components/Image/ImgIcon'\r\nimport { Translate } from '../../../../Components/Translate'\r\nconst tr = (strKey: string) => <Translate ns=\"weapon_ThrillingTalesOfDragonSlayers_gen\" key18={strKey} />\r\nconst refinementVals = [24, 30, 36, 42, 48]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {// Heritage\r\n      key: \"h\",\r\n      partyBuff: \"partyActive\",\r\n      canShow: stats => !stats.activeCharacter, // When calculating in the context of the char equipped, the char cannot be active.\r\n      header: {\r\n        title: tr(`passiveName`),\r\n        icon: stats => <ImgIcon size={2} sx={{ m: -1 }} src={stats.ascension < 2 ? icon : iconAwaken} />,\r\n      },\r\n      description: stats => tr(`passiveDescription.${stats.weapon.refineIndex}`),\r\n      name: <Translate ns=\"weapon_ThrillingTalesOfDragonSlayers\" key18=\"condName\" />,\r\n      stats: stats => ({\r\n        atk_: refinementVals[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }]\r\n\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.d694bdd1.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.b5def615.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\nconst refinementVals = [12, 14, 16, 18, 20]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"gt\",\r\n      name: \"Opponents Defeated\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        atk_: refinementVals[stats.weapon.refineIndex],\r\n        moveSPD_: refinementVals[stats.weapon.refineIndex]\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","export default __webpack_public_path__ + \"static/media/Icon.5ebcb547.png\";","export default __webpack_public_path__ + \"static/media/AwakenIcon.fe8ed6f2.png\";","import { WeaponData } from 'pipeline'\r\nimport { IWeaponSheet } from '../../../../Types/weapon'\r\nimport data_gen from './data_gen.json'\r\nimport icon from './Icon.png'\r\nimport iconAwaken from './AwakenIcon.png'\r\n\r\nconst atk_s = [20, 25, 30, 35, 40]\r\nconst weapon: IWeaponSheet = {\r\n  ...data_gen as WeaponData,\r\n  icon,\r\n  iconAwaken,\r\n  document: [{\r\n    conditional: {\r\n      key: \"ws\",\r\n      name: \"After Sprint\",\r\n      maxStack: 1,\r\n      stats: stats => ({\r\n        atk_: atk_s[stats.weapon.refineIndex],//TODO: stamine decrease for sprint\r\n      })\r\n    }\r\n  }],\r\n}\r\nexport default weapon","import ApprenticesNotes from './ApprenticesNotes'\r\nimport BlackcliffAgate from './BlackcliffAgate'\r\nimport DodocoTales from './DodocoTales'\r\nimport EmeraldOrb from './EmeraldOrb'\r\nimport EverlastingMoonglow from './EverlastingMoonglow'\r\nimport EyeOfPerception from './EyeOfPerception'\r\nimport FavoniusCodex from './FavoniusCodex'\r\nimport Frostbearer from './Frostbearer'\r\nimport HakushinRing from './HakushinRing'\r\nimport LostPrayerToTheSacredWinds from './LostPrayerToTheSacredWinds'\r\nimport MagicGuide from './MagicGuide'\r\nimport MappaMare from './MappaMare'\r\nimport MemoryOfDust from './MemoryOfDust'\r\nimport OtherworldlyStory from './OtherworldlyStory'\r\nimport PocketGrimoire from './PocketGrimoire'\r\nimport PrototypeAmber from './PrototypeAmber'\r\nimport RoyalGrimoire from './RoyalGrimoire'\r\nimport SacrificialFragments from './SacrificialFragments'\r\nimport SkywardAtlas from './SkywardAtlas'\r\nimport SolarPearl from './SolarPearl'\r\nimport TheWidsith from './TheWidsith'\r\nimport ThrillingTalesOfDragonSlayers from './ThrillingTalesOfDragonSlayers'\r\nimport TwinNephrite from './TwinNephrite'\r\nimport WineAndSong from './WineAndSong'\r\nconst catalyst = {\r\n  ApprenticesNotes,\r\n  BlackcliffAgate,\r\n  DodocoTales,\r\n  EmeraldOrb,\r\n  EverlastingMoonglow,\r\n  EyeOfPerception,\r\n  FavoniusCodex,\r\n  Frostbearer,\r\n  HakushinRing,\r\n  LostPrayerToTheSacredWinds,\r\n  MagicGuide,\r\n  MappaMare,\r\n  MemoryOfDust,\r\n  OtherworldlyStory,\r\n  PocketGrimoire,\r\n  PrototypeAmber,\r\n  RoyalGrimoire,\r\n  SacrificialFragments,\r\n  SkywardAtlas,\r\n  SolarPearl,\r\n  TheWidsith,\r\n  ThrillingTalesOfDragonSlayers,\r\n  TwinNephrite,\r\n  WineAndSong,\r\n} as const\r\nexport default catalyst","import claymore from './Claymore'\r\nimport sword from './Sword'\r\nimport polearm from './Polearm'\r\nimport bow from './Bow'\r\nimport catalyst from './Catalyst'\r\nimport { IWeaponSheets } from '../../Types/weapon'\r\nimport { documentSectionsProcessing } from '../../Util/DocumentUtil'\r\n\r\nconst WeaponData: IWeaponSheets = {\r\n  ...sword,\r\n  ...claymore,\r\n  ...polearm,\r\n  ...bow,\r\n  ...catalyst\r\n} as const\r\nObject.values(WeaponData).forEach(weapon => weapon.document && documentSectionsProcessing(weapon.document))\r\nexport default WeaponData","import { getTalentStatKey } from \"../Build/Build\"\r\nimport { StatKey } from \"../Types/artifact\"\r\nimport { FormulaItem } from \"../Types/character\"\r\nimport { ElementKey } from \"../Types/consts\"\r\nimport { BasicStats } from \"../Types/stats\"\r\n\r\n//for basic formula in the format of \"percent/100 * s[statKey]\"\r\nexport function basicDMGFormula(percent: number, stats: BasicStats, skillKey: string, elemental?: \"physical\" | ElementKey): FormulaItem {\r\n  const val = percent / 100\r\n  const statKey = getTalentStatKey(skillKey, stats, elemental)\r\n  return [s => val * s[statKey], [statKey]]\r\n}\r\nexport function basicHealingFormula(percent: number, scaleStatKey: StatKey, flat: number = 0): FormulaItem {\r\n  const ratio = percent / 100\r\n  return [s => ((ratio * s[scaleStatKey]) + flat) * s.heal_multi, [scaleStatKey, \"heal_multi\"]]\r\n}","import { DocumentSection } from \"../Types/character\";\r\nimport { fieldProcessing } from \"./FieldUtil\";\r\n\r\nexport function documentSectionsProcessing(sections: DocumentSection[]) {\r\n  sections.forEach(section => {\r\n    if (typeof section.canShow !== \"function\") section.canShow = () => true\r\n    section.fields?.forEach?.(fieldProcessing)\r\n  })\r\n}","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  heal: [100, 115, 130, 145, 160],\r\n  dmg: [200, 230, 260, 290, 320]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalATK) * s.heal_multi, [\"finalATK\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { getTalentStatKey } from \"../../../../Build/Build\";\r\nimport { ISubFormula } from \"../../../../Types/character\";\r\nexport const data = {\r\n  defConv: [40, 50, 60, 70, 80],\r\n} as const\r\n\r\nconst formula: ISubFormula = {\r\n  skill: stats => {\r\n    const val = data.defConv[stats.weapon.refineIndex] / 100\r\n    const statKey = getTalentStatKey(\"skill\", stats) + \"_multi\"\r\n    return [s => val * s.finalDEF * s[statKey], ['finalDEF', statKey]]\r\n  },\r\n} as const\r\nexport default formula\r\n","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [240, 280, 320, 360, 400]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nexport const data = {\r\n  hp_atk: [1.2, 1.5, 1.8, 2.1, 2.4]\r\n}\r\n\r\nconst formula: ISubFormula = {\r\n  bonus: stats => [s => (s.modStats?.finalHP ?? s.finalHP) * data.hp_atk[stats.weapon.refineIndex] / 100, ['finalHP']],\r\n}\r\nexport default formula\r\n","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [20, 25, 30, 35, 40]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(200, stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  dmg_: [20, 25, 30, 35, 40],\r\n  heal: [60, 70, 80, 90, 100]\r\n}\r\nconst formula: ISubFormula = {\r\n  regen: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalATK) * s.heal_multi, [\"finalATK\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  vals: [100, 125, 150, 175, 200]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.vals[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [1, 1.25, 1.5, 1.75, 2]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [20, 25, 30, 35, 40]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 95, 110, 125, 140],\r\n  dmgc: [200, 240, 280, 320, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  dmgc: stats => basicDMGFormula(data.dmgc[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nexport const data = {\r\n  enerRechConv: [28, 35, 42, 49, 56],\r\n  enerRechMax: [80, 90, 100, 110, 120]\r\n} as const\r\n\r\nconst formula: ISubFormula = {\r\n  conv: stats => [s => Math.min(((s.premod?.enerRech_ ?? s.enerRech_) - 100) * data.enerRechConv[stats.weapon.refineIndex] / 100, data.enerRechMax[stats.weapon.refineIndex]), ['enerRech_']],\r\n} as const\r\nexport default formula\r\n","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [160, 200, 240, 280, 320]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg:  [40, 55, 70, 85, 100]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nexport const data = {\r\n  hp_atk: [0.8, 1, 1.2, 1.4, 1.6],\r\n  hp_atk_add: [1, 1.2, 1.4, 1.6, 1.8]\r\n}\r\n\r\nconst formula: ISubFormula = {\r\n  esj: stats => [s => (s.modStats?.finalHP ?? s.finalHP) * data.hp_atk[stats.weapon.refineIndex] / 100, ['finalHP']],\r\n  esjadd: stats => [s => (s.modStats?.finalHP ?? s.finalHP) * data.hp_atk_add[stats.weapon.refineIndex] / 100, ['finalHP']],\r\n}\r\nexport default formula\r\n","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [60, 75, 90, 105, 120]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [100, 125, 150, 175, 200],\r\n} as const\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n} as const\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [240, 300, 360, 420, 480]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { getTalentStatKey } from \"../../../../Build/Build\";\r\nimport { ISubFormula } from \"../../../../Types/character\";\r\nexport const data = {\r\n  defConv: [40, 50, 60, 70, 80],\r\n} as const\r\n\r\nconst formula: ISubFormula = {\r\n  normal: stats => {\r\n    const val = data.defConv[stats.weapon.refineIndex] / 100\r\n    const statKey = getTalentStatKey(\"normal\", stats) + \"_multi\"\r\n    return [s => val * s.finalDEF * s[statKey], ['finalDEF', statKey]]\r\n  },\r\n  charged: stats => {\r\n    const val = data.defConv[stats.weapon.refineIndex] / 100\r\n    const statKey = getTalentStatKey(\"charged\", stats) + \"_multi\"\r\n    return [s => val * s.finalDEF * s[statKey], ['finalDEF', statKey]]\r\n  },\r\n} as const\r\nexport default formula\r\n","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 100, 120, 140, 160]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 95, 110, 125, 140],\r\n  dmgc: [200, 240, 280, 320, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  dmgc: stats => basicDMGFormula(data.dmgc[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  shield: [20, 23, 26, 29, 32]\r\n}\r\nconst formula: ISubFormula = {\r\n  shield: stats => {\r\n    const hpMulti = data.shield[stats.weapon.refineIndex] / 100\r\n    return [s => hpMulti * s.finalHP * (1 + s.shield_ / 100) * 1.5, [\"finalHP\", \"shield_\"]]\r\n  }\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [8, 10, 12, 14, 16]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { getTalentStatKey } from \"../../../../Build/Build\";\r\nimport { ISubFormula } from \"../../../../Types/character\";\r\nexport const data = {\r\n  hp_conv: [1, 1.5, 2, 2.5, 3]\r\n} as const\r\n\r\nconst formula: ISubFormula = {\r\n  norm: stats => {\r\n    const val = data.hp_conv[stats.weapon.refineIndex] / 100\r\n    const statKey = getTalentStatKey(\"elemental\", stats) + \"_multi\"\r\n    return [s => val * s.finalHP * s[statKey], ['finalHP', statKey]]\r\n  },\r\n} as const\r\nexport default formula\r\n","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [240, 270, 300, 330, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [80, 95, 110, 125, 140],\r\n  dmgc: [200, 240, 280, 320, 360]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\"),\r\n  dmgc: stats => basicDMGFormula(data.dmgc[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [1, 1.25, 1.5, 1.75, 2]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [4, 4.5, 5, 5.5, 6]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [160, 200, 240, 280, 320]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  dmg: [100, 125, 150, 175, 200]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.dmg[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\n\r\nexport const data = {\r\n  heal: [8, 10, 12, 14, 16]\r\n}\r\nconst formula: ISubFormula = {\r\n  heal: stats => {\r\n    const hp = data.heal[stats.weapon.refineIndex] / 100\r\n    return [s => (hp * s.finalHP) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(125, stats, \"physical\")\r\n}\r\nexport default formula","import { ISubFormula } from \"../../../../Types/character\";\r\nimport { basicDMGFormula } from \"../../../../Util/FormulaUtil\";\r\n\r\nexport const data = {\r\n  vals: [40, 50, 60, 70, 80]\r\n}\r\nconst formula: ISubFormula = {\r\n  dmg: stats => basicDMGFormula(data.vals[stats.weapon.refineIndex], stats, \"physical\")\r\n}\r\nexport default formula"],"sourceRoot":""}